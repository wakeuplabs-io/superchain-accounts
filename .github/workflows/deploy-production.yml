name: Deploy Production

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "deploy to production" to confirm'
        required: true

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Validate confirmation
        if: ${{ github.event.inputs.confirmation != 'deploy to production' }}
        run: |
          echo "You must type 'deploy to production' exactly to confirm deployment"
          exit 1

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    environment: production

    outputs:
      api_url: ${{ steps.save-outputs.outputs.api_url }}
      ui_url: ${{ steps.save-outputs.outputs.ui_url }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: "no"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build all
        run: npm run build

      - name: Deploy
        run: npm run deploy:app:production
        env:
          PORT: 3000
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          BUNDLER_UNICHAIN: ${{ secrets.BUNDLER_UNICHAIN || secrets.BUNDLER_UNICHAIN_SEPOLIA}}
          BUNDLER_OPTIMISM: ${{ secrets.BUNDLER_OPTIMISM || secrets.BUNDLER_OPTIMISM_SEPOLIA}}
          BUNDLER_BASE: ${{ secrets.BUNDLER_BASE || secrets.BUNDLER_BASE_SEPOLIA}}
          RPC_BASE: ${{ secrets.RPC_BASE || secrets.RPC_BASE_SEPOLIA}}
          RPC_OPTIMISM: ${{ secrets.RPC_OPTIMISM || secrets.RPC_OPTIMISM_SEPOLIA}}
          RPC_UNICHAIN: ${{ secrets.RPC_UNICHAIN || secrets.RPC_UNICHAIN_SEPOLIA}}
          ENTRYPOINT_UNICHAIN: ${{ secrets.ENTRYPOINT_UNICHAIN || secrets.ENTRYPOINT_UNICHAIN_SEPOLIA }}
          ENTRYPOINT_OPTIMISM: ${{ secrets.ENTRYPOINT_OPTIMISM || secrets.ENTRYPOINT_OPTIMISM_SEPOLIA }}
          ENTRYPOINT_BASE: ${{ secrets.ENTRYPOINT_BASE || secrets.ENTRYPOINT_BASE_SEPOLIA }}
          EXPLORER_BASE: ${{ secrets.EXPLORER_BASE || secrets.EXPLORER_BASE_SEPOLIA }}
          EXPLORER_OPTIMISM: ${{ secrets.EXPLORER_OPTIMISM || secrets.EXPLORER_OPTIMISM_SEPOLIA }}
          EXPLORER_UNICHAIN: ${{ secrets.EXPLORER_UNICHAIN || secrets.EXPLORER_UNICHAIN_SEPOLIA }}
          OWNER_PRIVATE_KEY: ${{ secrets.OWNER_PRIVATE_KEY }}
          SUPERCHAIN_BADGES_ADDRESS: ${{ secrets.SUPERCHAIN_BADGES_ADDRESS }}
          SUPERCHAIN_POINTS_ADDRESS: ${{ secrets.SUPERCHAIN_POINTS_ADDRESS }}
          SUPERCHAIN_POINTS_RAFFLE_FACTORY_ADDRESS: ${{ secrets.SUPERCHAIN_POINTS_RAFFLE_FACTORY_ADDRESS }}
          CRONJOB_KEY: ${{ secrets.CRONJOB_KEY }}
          MULTICALL_CONTRACT_ADDRESS: ${{ secrets.MULTICALL_CONTRACT_ADDRESS }}
          WALLET_CONNECT_PROJECT_ID: ${{ secrets.WALLET_CONNECT_PROJECT_ID }}
          AAVE_CONTRACT_ADDRESS_UNICHAIN: ${{ secrets.AAVE_CONTRACT_ADDRESS_UNICHAIN }}
          AAVE_CONTRACT_ADDRESS_OPTIMISM: ${{ secrets.AAVE_CONTRACT_ADDRESS_OPTIMISM }}
          AAVE_CONTRACT_ADDRESS_BASE: ${{ secrets.AAVE_CONTRACT_ADDRESS_BASE }}
          UNICHAIN_CHAIN_ID: ${{ secrets.UNICHAIN_CHAIN_ID }}
          BASE_CHAIN_ID: ${{ secrets.BASE_CHAIN_ID }}
          OPTIMISM_CHAIN_ID: ${{ secrets.OPTIMISM_CHAIN_ID }}

      - name: Save Outputs
        id: save-outputs
        run: |
          API_URL=$(jq -r '.api' .sst/outputs.json)
          UI_URL=$(jq -r '.ui' .sst/outputs.json)

          echo "api_url=$API_URL" >> "$GITHUB_OUTPUT"
          echo "ui_url=$UI_URL" >> "$GITHUB_OUTPUT"

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Summary
        run: |
          echo "## Production Deployment Complete! ðŸš€" >> $GITHUB_STEP_SUMMARY
          echo "- API URL: ${{ needs.deploy.outputs.api_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- UI URL: ${{ needs.deploy.outputs.ui_url }}" >> $GITHUB_STEP_SUMMARY
