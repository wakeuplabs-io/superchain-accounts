name: Deploy Staging

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
    inputs:
      PAYMASTER_ADDRESS:
        required: true
        type: string
    outputs:
      superchain_api_url:
        description: "The URL of the deployed API"
        value: ${{ jobs.deploy.outputs.superchain_api_url }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    outputs:
      superchain_api_url: ${{ steps.save-output.outputs.superchain_api_url }}
      deploy_api_output: ${{ steps.test-output.outputs.deploy_api_output }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: "no"

      - name: Deploy
        run: npx sst deploy --stage=staging
        env:
          PAYMASTER_ADDRESS: ${{ inputs.PAYMASTER_ADDRESS }}

      # Output the API URL and store in $GITHUB_OUTPUT
      - name: Save Output
        id: save-output
        run: |
          SUPERCHAIN_API_URL=$(cat .env | sed -n 's/.*ServiceEndpoint = \"\(.*\)\"/\1/p')
          echo "superchain_api_url=$SUPERCHAIN_API_URL" >> "$GITHUB_OUTPUT"
