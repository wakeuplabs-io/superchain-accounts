frameworkVersion: "3.38.0"

service: superchain-accounts-api
provider:
  name: aws
  region: ${env:AWS_REGION, 'us-east-1'}
  runtime: nodejs20.x
  apiGateway:
    apiKeys:
      - name: ${self:service}/dev/api-key
        value: ${ssm:/aws/reference/secretsmanager/${self:service}/dev/api-key}
    cors:
      origin: "*"
      headers:
        - Content-Type
        - X-Amz-Date
        - Authorization
        - X-Api-Key
        - X-Amz-Security-Token
      allowCredentials: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"
  tags:
    customer: optimism-gov
    application: superchain-accounts
plugins:
  - serverless-esbuild
  - serverless-export-outputs
custom:
  stage: ${opt:stage, 'development'}
  esbuild:
    bundle: true
    minify: true
    target: "node20"
    exclude:
      - "@aws-sdk/*"
      - "!@aws-sdk/client-bedrock-runtime"
  cloudformation:
    timeout: 3600 # Increase timeout if your stack takes longer to update
    forceUpdate: true

resources:
  Resources:
    UsersTable: ${file(./packages/api/templates/dynamodb/users_table.yml)}
    EventsTable: ${file(./packages/api/templates/dynamodb/events_table.yml)}
    RewardsTable: ${file(./packages/api/templates/dynamodb/rewards_table.yml)}
    MilestonesTable: ${file(./packages/api/templates/dynamodb/milestones_table.yml)}
    EventDefinitionTable: ${file(./packages/api/templates/dynamodb/events_def_table.yml)}
    RewardDefinitionTable: ${file(./packages/api/templates/dynamodb/rewards_def_table.yml)}
    MilestoneDefinitionTable: ${file(./packages/api/templates/dynamodb/milestones_def_table.yml)}
    TimeframeCronTable: ${file(./packages/api/templates/dynamodb/timeframe_cron_table.yml)}

functions:
  express-api:
    name: ${self:service}-${self:custom.stage}
    handler: packages/api/dist/app.handler
    timeout: 10
    events:
      - http:
          path: /
          method: ANY
          private: true
      - http:
          path: /v1/rpc
          method: OPTIONS
          private: false
      - http:
          path: /v1/rpc
          method: ANY
          private: false
      - http:
          path: /{proxy+}
          method: ANY
          private: true
    environment:
      NODE_ENV: ${self:custom.stage, 'development'}
      EVENTS_TABLE: !Ref EventsTable
      EVENTS_DEF_TABLE: !Ref EventDefinitionTable
      REWARDS_DEF_TABLE: !Ref RewardDefinitionTable
      MILESTONES_DEF_TABLE: !Ref MilestoneDefinitionTable
      USERS_TABLE: !Ref UsersTable
      PAYMASTER_ADDRESS: ${env:PAYMASTER_ADDRESS, '0xE560b889fa1d2Ca72ee4FB165787b2aD6D506Ac7'}

  processTimeframeEvent: ${file(./packages/api/templates/lambda_functions/process_timeframe.yml)}
