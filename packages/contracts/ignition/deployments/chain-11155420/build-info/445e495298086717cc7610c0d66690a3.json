{
  "id": "445e495298086717cc7610c0d66690a3",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.29",
  "solcLongVersion": "0.8.29+commit.ab55807c",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1155.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../token/ERC1155/IERC1155.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "contracts/interfaces/ISuperchainPointsRaffle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\ninterface ISuperchainPointsRaffleErrors {\n    /// @notice Error thrown when the raffle is already started\n    error RaffleAlreadyStarted();\n\n    /// @notice Error thrown when the raffle is not started\n    error NoOngoingRaffle();\n\n    /// @notice Error thrown when points transfer fails\n    error TransferFailed();\n\n    /// @notice Random pattern requires seed to be revealed in a future block\n    error CannotRevealBeforeBlock(uint256);\n\n    /// @notice UX requires reveal after timestamp\n    error CannotRevealBeforeTimestamp(uint256 timestamp);\n\n    /// @notice Error thrown when the seed doesn't match the sealed seed\n    error InvalidSeed();\n\n    /// @notice Error thrown when the ticket is not found\n    error TicketNotFound();\n\n    /// @notice Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\n    error NoTicketsToClaim();\n\n    /// @notice Error thrown when the seed has already been used\n    error SeedAlreadyUsed();\n}\n\ninterface ISuperchainPointsRaffleEvents {\n    /// @notice Event emitted when a raffle is started\n    /// @param sealedSeed The seed used to generate the raffle\n    /// @param amount The amount of points to be distributed to the raffle winner\n    event RaffleStarted(bytes32 sealedSeed, uint256 amount);\n\n    /// @notice Event emitted when a raffle is finished\n    /// @param winner The address of the raffle winner\n    /// @param amount The amount of points distributed to the raffle winner\n    event RaffleWinner(address winner, uint256 amount);\n\n    /// @notice Event emitted when tickets are claimed\n    /// @param claimer The address of the claimer\n    /// @param amount The amount of points claimed\n    event TicketsClaimed(address claimer, uint256 amount);\n}\n\ninterface ISuperchainPointsRaffle is\n    ISuperchainPointsRaffleErrors,\n    ISuperchainPointsRaffleEvents\n{\n    /// @notice Starts the raffle\n    /// @param _sealedSeed The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\n    /// @param _amount The amount of points to be distributed to the raffle winner\n    /// @param _badges The badges that are eligible to participate in the raffle\n    /// @param _badgeAllocation The number of tickets allocated to each badge\n    function initialize(\n        bytes32 _sealedSeed,\n        uint256 _revealAfterTimestamp,\n        uint256 _amount,\n        uint256[] memory _badges,\n        uint256[] memory _badgeAllocation\n    ) external;\n\n    /// @notice Reveals the raffle winner and transfers the points\n    /// @param _seed The seed used to generate the raffle\n    function revealWinner(bytes32 _seed) external;\n\n    /// @notice Returns the timestamp at which the seed will be revealed\n    function getRevealedAfter() external view returns (uint256);\n\n    /// @notice Returns the badges that are eligible to participate in the raffle\n    function getEligibleBadges() external view returns (uint256[] memory);\n\n    /// @notice Returns the amount of points that are distributed to the raffle winner\n    function getPrizeAmount() external view returns (uint256);\n\n    /// @notice Returns the total number of tickets that can be claimed\n    function getTotalTickets() external view returns (uint256);\n\n    /// @notice Returns the number of tickets that can be claimed\n    /// @param user The address of the user\n    function getClaimableTickets(address user) external view returns (uint256);\n\n    /// @notice Returns the number of tickets already claimed\n    /// @param user The address of the user\n    function getClaimedTickets(address user) external view returns (uint256);\n\n    /// @notice Claim tickets to participate in raffle\n    function claimTickets() external;\n\n    /// @notice Returns true if the raffle is finished\n    function isFinished() external view returns (bool);\n}\n"
      },
      "contracts/interfaces/ISuperchainPointsRaffleFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\ninterface ISuperchainPointsRaffleFactoryErrors {\n    /// @notice Cannot create a raffle if one is already started\n    error OngoingRaffle();\n}\n\ninterface ISuperchainPointsRaffleFactoryEvents {\n    /// @notice Emitted when a raffle is created\n    event RaffleCreated(address raffle);\n}\n\ninterface ISuperchainPointsRaffleFactory is\n    ISuperchainPointsRaffleFactoryErrors,\n    ISuperchainPointsRaffleFactoryEvents\n{\n    /// @notice Checks previous raffle state and creates a new raffle\n    function createRaffle() external;\n}\n"
      },
      "contracts/SuperchainPointsRaffle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport {IERC1155} from \"@openzeppelin/contracts/interfaces/IERC1155.sol\";\nimport {ISuperchainPointsRaffle} from \"./interfaces/ISuperchainPointsRaffle.sol\";\n\n/// @title SuperchainPointsRaffle\n/// @notice A raffle contract using https://fravoll.github.io/solidity-patterns/randomness.html pattern for randomness\ncontract SuperchainPointsRaffle is ISuperchainPointsRaffle, Ownable {\n    bool public finished = false;\n    bool internal initialized = false;\n\n    bytes32 public sealedSeed;\n    uint256 public storedBlockNumber;\n    uint256 public revealAfterTimestamp;\n\n    IERC20 public superchainPoints;\n    IERC1155 public superchainBadges;\n\n    uint256 public prize;\n    address public winner;\n\n    uint256 public ticketCount;\n    mapping(uint256 => address) public tickets;\n    mapping(address => uint256) public ticketsClaimed;\n\n    uint256[] public eligibleBadges;\n    mapping(uint256 => uint256) public badgeAllocations;\n\n    /// @param _initialOwner The initial owner of the contract\n    /// @param _superchainPoints The address of the SuperchainPoints contract\n    /// @param _superchainBadges The address of the SuperchainBadges contract\n    constructor(\n        address _initialOwner,\n        IERC20 _superchainPoints,\n        IERC1155 _superchainBadges\n    ) Ownable(_initialOwner) {\n        superchainPoints = _superchainPoints;\n        superchainBadges = _superchainBadges;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function initialize(\n        bytes32 _sealedSeed,\n        uint256 _revealAfterTimestamp,\n        uint256 _amount,\n        uint256[] memory _badges,\n        uint256[] memory _badgeAllocation\n    ) public onlyOwner {\n        if (initialized) {\n            revert RaffleAlreadyStarted();\n        }\n\n        // Mark raffle as initialized\n        initialized = true;\n        finished = false;\n\n        // Store seed\n        sealedSeed = _sealedSeed;\n        storedBlockNumber = block.number + 1;\n        revealAfterTimestamp = _revealAfterTimestamp;\n\n        // Store raffle details\n        prize = _amount;\n\n        // Store badge details\n        eligibleBadges = new uint256[](_badges.length);\n        for (uint256 i = 0; i < _badges.length; i++) {\n            badgeAllocations[_badges[i]] = _badgeAllocation[i];\n            eligibleBadges[i] = _badges[i];\n        }\n\n        // Pull points for prize\n        bool success = superchainPoints.transferFrom(\n            msg.sender,\n            address(this),\n            prize\n        );\n        if (!success) {\n            revert TransferFailed();\n        }\n\n        emit RaffleStarted(sealedSeed, prize);\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function revealWinner(bytes32 _seed) public onlyOwner {\n        // Verify raffle is ongoing\n        if (finished || !initialized) {\n            revert NoOngoingRaffle();\n        }\n\n        // Mark raffle as finished right away to prevent reentrancy\n        finished = true;\n\n        // If we reveal in same block we can know block hash\n        if (storedBlockNumber > block.number) {\n            revert CannotRevealBeforeBlock(storedBlockNumber);\n        } else if (revealAfterTimestamp > block.timestamp) {\n            revert CannotRevealBeforeTimestamp(revealAfterTimestamp);\n        }\n\n        // Prevent owner from changing seed\n        if (keccak256(abi.encodePacked(msg.sender, _seed)) != sealedSeed) {\n            revert InvalidSeed();\n        }\n\n        // Select winner from ticket pool\n        uint256 random = uint256(\n            keccak256(abi.encodePacked(_seed, blockhash(storedBlockNumber)))\n        );\n        winner = tickets[random % ticketCount];\n        if (winner == address(0)) {\n            revert TicketNotFound();\n        }\n\n        // Transfer points to winner\n        bool success = IERC20(superchainPoints).transfer(winner, prize);\n        if (!success) {\n            revert TransferFailed();\n        }\n\n        emit RaffleWinner(winner, prize);\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function claimTickets() public {\n        // Verify raffle is ongoing\n        if (finished || !initialized) {\n            revert NoOngoingRaffle();\n        }\n\n        // Calculate tickets allocation. Maximum possible\n        uint256 ticketsAllocation = getClaimableTickets(msg.sender);\n        if (ticketsAllocation == 0) {\n            revert NoTicketsToClaim();\n        }\n\n        // Allocate tickets to user\n        for (\n            uint256 i = ticketCount;\n            i < ticketCount + ticketsAllocation;\n            i++\n        ) {\n            tickets[i] = msg.sender;\n        }\n        ticketsClaimed[msg.sender] = ticketsAllocation;\n        ticketCount += ticketsAllocation;\n\n        emit TicketsClaimed(msg.sender, ticketsAllocation);\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getClaimableTickets(address user) public view returns (uint256) {\n        uint256 ticketsAllocation = 0;\n        for (uint256 i = 0; i < eligibleBadges.length; i++) {\n            if (superchainBadges.balanceOf(user, eligibleBadges[i]) > 0) {\n                if (badgeAllocations[eligibleBadges[i]] > ticketsAllocation) {\n                    ticketsAllocation = badgeAllocations[eligibleBadges[i]];\n                }\n            }\n        }\n\n        return ticketsAllocation - ticketsClaimed[user];\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getClaimedTickets(address user) public view returns (uint256) {\n        return ticketsClaimed[user];\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getTotalTickets() public view returns (uint256) {\n        return ticketCount;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getPrizeAmount() public view returns (uint256) {\n        return prize;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getEligibleBadges() external view returns (uint256[] memory) {\n        return eligibleBadges;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function isFinished() external view returns (bool) {\n        return finished;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getRevealedAfter() external view returns (uint256) {\n        return revealAfterTimestamp;\n    }\n}\n"
      },
      "contracts/SuperchainPointsRaffleFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport {IERC1155} from \"@openzeppelin/contracts/interfaces/IERC1155.sol\";\nimport {ISuperchainPointsRaffle} from \"./interfaces/ISuperchainPointsRaffle.sol\";\nimport {SuperchainPointsRaffle} from \"./SuperchainPointsRaffle.sol\";\nimport {ISuperchainPointsRaffleFactory} from \"./interfaces/ISuperchainPointsRaffleFactory.sol\";\n\n/// @title SuperchainPointsRaffleFactory\n/// @notice Factory for SuperchainPointsRaffle contracts that also acts as a proxy for the current raffle\ncontract SuperchainPointsRaffleFactory is ISuperchainPointsRaffleFactory, Ownable {\n    IERC20 public superchainPoints;\n    IERC1155 public superchainBadges;\n\n    ISuperchainPointsRaffle public currentRaffle;\n\n    /// @param _initialOwner The initial owner of the contract\n    /// @param _superchainPoints The address of the SuperchainPoints contract\n    /// @param _superchainBadges The address of the SuperchainBadges contract\n    constructor(\n        address _initialOwner,\n        IERC20 _superchainPoints,\n        IERC1155 _superchainBadges\n    ) Ownable(_initialOwner) {\n        superchainPoints = _superchainPoints;\n        superchainBadges = _superchainBadges;\n    }\n\n    function createRaffle() public onlyOwner {\n        if (address(currentRaffle) != address(0) && currentRaffle.isFinished() == false) {\n            revert OngoingRaffle();\n        }\n\n        currentRaffle = new SuperchainPointsRaffle(\n            owner(),\n            superchainPoints,\n            superchainBadges\n        );\n\n        emit RaffleCreated(address(currentRaffle));\n    }\n\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              386
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 387,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 386,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 386,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                386
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 368,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/IERC1155.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1155.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ]
          },
          "id": 152,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
              "file": "../token/ERC1155/IERC1155.sol",
              "id": 151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 152,
              "sourceUnit": 279,
              "src": "133:55:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 150,
                    "name": "IERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 278,
                    "src": "141:8:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "107:82:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              356
            ]
          },
          "id": 156,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 153,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 155,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 156,
              "sourceUnit": 357,
              "src": "131:49:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 154,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:76:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ],
            "IERC165": [
              398
            ]
          },
          "id": 279,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 157,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "110:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 159,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 399,
              "src": "136:62:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 158,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 398,
                    "src": "144:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 161,
                    "name": "IERC165",
                    "nameLocations": [
                      "358:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 398,
                    "src": "358:7:3"
                  },
                  "id": 162,
                  "nodeType": "InheritanceSpecifier",
                  "src": "358:7:3"
                }
              ],
              "canonicalName": "IERC1155",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 160,
                "nodeType": "StructuredDocumentation",
                "src": "200:135:3",
                "text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
              },
              "fullyImplemented": false,
              "id": 278,
              "linearizedBaseContracts": [
                278,
                398
              ],
              "name": "IERC1155",
              "nameLocation": "346:8:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 163,
                    "nodeType": "StructuredDocumentation",
                    "src": "372:125:3",
                    "text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
                  },
                  "eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
                  "id": 175,
                  "name": "TransferSingle",
                  "nameLocation": "508:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "539:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "523:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "523:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "565:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "549:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "549:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 169,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "587:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "571:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "571:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "599:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "591:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "591:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "611:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "603:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "603:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "522:95:3"
                  },
                  "src": "502:116:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 176,
                    "nodeType": "StructuredDocumentation",
                    "src": "624:144:3",
                    "text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
                  },
                  "eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
                  "id": 190,
                  "name": "TransferBatch",
                  "nameLocation": "779:13:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "818:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "802:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "802:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "852:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "836:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "836:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 182,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "882:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "866:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "866:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "904:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "894:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 183,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "894:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 184,
                          "nodeType": "ArrayTypeName",
                          "src": "894:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 188,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "927:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "917:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 186,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "917:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 187,
                          "nodeType": "ArrayTypeName",
                          "src": "917:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:147:3"
                  },
                  "src": "773:167:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "946:147:3",
                    "text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
                  },
                  "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                  "id": 199,
                  "name": "ApprovalForAll",
                  "nameLocation": "1104:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1135:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "1119:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1119:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "1160:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "1144:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1144:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "1175:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "1170:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1170:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1118:66:3"
                  },
                  "src": "1098:87:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 200,
                    "nodeType": "StructuredDocumentation",
                    "src": "1191:343:3",
                    "text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
                  },
                  "eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
                  "id": 206,
                  "name": "URI",
                  "nameLocation": "1545:3:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 202,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1556:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "1549:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1549:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 204,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1579:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "1563:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1548:34:3"
                  },
                  "src": "1539:44:3"
                },
                {
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "1589:172:3",
                    "text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
                  },
                  "functionSelector": "00fdd58e",
                  "id": 216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "1775:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1793:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1785:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1785:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1810:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1802:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1802:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1784:29:3"
                  },
                  "returnParameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1837:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1837:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1836:9:3"
                  },
                  "scope": 278,
                  "src": "1766:80:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "1852:188:3",
                    "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
                  },
                  "functionSelector": "4e1273f4",
                  "id": 229,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOfBatch",
                  "nameLocation": "2054:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "2097:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2078:27:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2078:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 219,
                          "nodeType": "ArrayTypeName",
                          "src": "2078:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "2134:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2115:22:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 221,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2115:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 222,
                          "nodeType": "ArrayTypeName",
                          "src": "2115:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2068:75:3"
                  },
                  "returnParameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2167:16:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 225,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2167:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 226,
                          "nodeType": "ArrayTypeName",
                          "src": "2167:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2166:18:3"
                  },
                  "scope": 278,
                  "src": "2045:140:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 230,
                    "nodeType": "StructuredDocumentation",
                    "src": "2191:248:3",
                    "text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
                  },
                  "functionSelector": "a22cb465",
                  "id": 237,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "2453:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2479:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "2471:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "2494:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "2489:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2489:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2470:33:3"
                  },
                  "returnParameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2512:0:3"
                  },
                  "scope": 278,
                  "src": "2444:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 238,
                    "nodeType": "StructuredDocumentation",
                    "src": "2519:135:3",
                    "text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
                  },
                  "functionSelector": "e985e9c5",
                  "id": 247,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "2668:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2693:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2685:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2685:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2710:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2702:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2702:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2684:35:3"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2743:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2743:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2742:6:3"
                  },
                  "scope": 278,
                  "src": "2659:90:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 248,
                    "nodeType": "StructuredDocumentation",
                    "src": "2755:910:3",
                    "text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
                  },
                  "functionSelector": "f242432a",
                  "id": 261,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "3679:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3704:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3696:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3696:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3718:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3710:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3710:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3730:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3722:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3722:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3742:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3734:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3734:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3764:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3749:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3749:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3695:74:3"
                  },
                  "returnParameters": {
                    "id": 260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3778:0:3"
                  },
                  "scope": 278,
                  "src": "3670:109:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "3785:814:3",
                    "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
                  },
                  "functionSelector": "2eb2c2d6",
                  "id": 277,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeBatchTransferFrom",
                  "nameLocation": "4613:21:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4652:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4644:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4644:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4674:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4666:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4666:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "4705:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4686:22:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 267,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4686:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 268,
                          "nodeType": "ArrayTypeName",
                          "src": "4686:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "4737:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4718:25:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 270,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4718:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 271,
                          "nodeType": "ArrayTypeName",
                          "src": "4718:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4768:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4753:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4753:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4634:144:3"
                  },
                  "returnParameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4787:0:3"
                  },
                  "scope": 278,
                  "src": "4604:184:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 279,
              "src": "336:4454:3",
              "usedErrors": [],
              "usedEvents": [
                175,
                190,
                199,
                206
              ]
            }
          ],
          "src": "110:4681:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              356
            ]
          },
          "id": 357,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 280,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 281,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:4",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 356,
              "linearizedBaseContracts": [
                356
              ],
              "name": "IERC20",
              "nameLocation": "213:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 282,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 290,
                  "name": "Transfer",
                  "nameLocation": "395:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 284,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "404:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 286,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "426:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 288,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "446:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:4"
                  },
                  "src": "389:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 291,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 299,
                  "name": "Approval",
                  "nameLocation": "626:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 293,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "635:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 295,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "658:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 297,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "683:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:4"
                  },
                  "src": "620:78:4"
                },
                {
                  "documentation": {
                    "id": 300,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 305,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:4"
                  },
                  "returnParameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "820:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:4"
                  },
                  "scope": 356,
                  "src": "774:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 313,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 309,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "930:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:4"
                  },
                  "returnParameters": {
                    "id": 312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "970:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:4"
                  },
                  "scope": 356,
                  "src": "911:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 314,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 323,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "1221:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "1233:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:4"
                  },
                  "returnParameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 321,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "1266:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:4"
                  },
                  "scope": 356,
                  "src": "1203:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 324,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 333,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1566:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1581:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:4"
                  },
                  "returnParameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1621:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:4"
                  },
                  "scope": 356,
                  "src": "1547:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 334,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 343,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2325:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2342:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:4"
                  },
                  "returnParameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2375:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:4"
                  },
                  "scope": 356,
                  "src": "2308:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 344,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 355,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2711:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2725:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 350,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2737:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:4"
                  },
                  "returnParameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2770:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:4"
                  },
                  "scope": 356,
                  "src": "2689:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 357,
              "src": "203:2575:4",
              "usedErrors": [],
              "usedEvents": [
                290,
                299
              ]
            }
          ],
          "src": "106:2673:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              386
            ]
          },
          "id": 387,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 358,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 359,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 386,
              "linearizedBaseContracts": [
                386
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 364,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 363,
                        "id": 366,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 386,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 376,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 373,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 372,
                        "id": 375,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 377,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 369,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 386,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 381,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 380,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 386,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 387,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              398
            ]
          },
          "id": 399,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 388,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 389,
                "nodeType": "StructuredDocumentation",
                "src": "141:279:6",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 398,
              "linearizedBaseContracts": [
                398
              ],
              "name": "IERC165",
              "nameLocation": "431:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 390,
                    "nodeType": "StructuredDocumentation",
                    "src": "445:340:6",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 397,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "799:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "824:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "817:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "817:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "816:20:6"
                  },
                  "returnParameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "860:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "860:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "859:6:6"
                  },
                  "scope": 398,
                  "src": "790:76:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 399,
              "src": "421:447:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:754:6"
        },
        "id": 6
      },
      "contracts/SuperchainPointsRaffle.sol": {
        "ast": {
          "absolutePath": "contracts/SuperchainPointsRaffle.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ],
            "IERC20": [
              356
            ],
            "ISuperchainPointsRaffle": [
              1124
            ],
            "Ownable": [
              147
            ],
            "SuperchainPointsRaffle": [
              893
            ]
          },
          "id": 894,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 400,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 402,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 894,
              "sourceUnit": 148,
              "src": "58:67:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 401,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "66:7:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "id": 404,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 894,
              "sourceUnit": 156,
              "src": "126:69:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 403,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "134:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "id": 406,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 894,
              "sourceUnit": 152,
              "src": "196:73:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 405,
                    "name": "IERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 278,
                    "src": "204:8:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPointsRaffle.sol",
              "file": "./interfaces/ISuperchainPointsRaffle.sol",
              "id": 408,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 894,
              "sourceUnit": 1125,
              "src": "270:81:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 407,
                    "name": "ISuperchainPointsRaffle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1124,
                    "src": "278:23:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 410,
                    "name": "ISuperchainPointsRaffle",
                    "nameLocations": [
                      "541:23:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1124,
                    "src": "541:23:7"
                  },
                  "id": 411,
                  "nodeType": "InheritanceSpecifier",
                  "src": "541:23:7"
                },
                {
                  "baseName": {
                    "id": 412,
                    "name": "Ownable",
                    "nameLocations": [
                      "566:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "566:7:7"
                  },
                  "id": 413,
                  "nodeType": "InheritanceSpecifier",
                  "src": "566:7:7"
                }
              ],
              "canonicalName": "SuperchainPointsRaffle",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 409,
                "nodeType": "StructuredDocumentation",
                "src": "353:153:7",
                "text": "@title SuperchainPointsRaffle\n @notice A raffle contract using https://fravoll.github.io/solidity-patterns/randomness.html pattern for randomness"
              },
              "fullyImplemented": true,
              "id": 893,
              "linearizedBaseContracts": [
                893,
                147,
                386,
                1124,
                1046,
                1024
              ],
              "name": "SuperchainPointsRaffle",
              "nameLocation": "515:22:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "bef4876b",
                  "id": 416,
                  "mutability": "mutable",
                  "name": "finished",
                  "nameLocation": "592:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "580:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "603:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "initialized",
                  "nameLocation": "628:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "614:33:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "642:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "d8c4a454",
                  "id": 421,
                  "mutability": "mutable",
                  "name": "sealedSeed",
                  "nameLocation": "669:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "654:25:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d2a8c791",
                  "id": 423,
                  "mutability": "mutable",
                  "name": "storedBlockNumber",
                  "nameLocation": "700:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "685:32:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "31f6a017",
                  "id": 425,
                  "mutability": "mutable",
                  "name": "revealAfterTimestamp",
                  "nameLocation": "738:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "723:35:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b2ab4ab7",
                  "id": 428,
                  "mutability": "mutable",
                  "name": "superchainPoints",
                  "nameLocation": "779:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "765:30:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$356",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 427,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 426,
                      "name": "IERC20",
                      "nameLocations": [
                        "765:6:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 356,
                      "src": "765:6:7"
                    },
                    "referencedDeclaration": 356,
                    "src": "765:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$356",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a94bd919",
                  "id": 431,
                  "mutability": "mutable",
                  "name": "superchainBadges",
                  "nameLocation": "817:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "801:32:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$278",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 430,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 429,
                      "name": "IERC1155",
                      "nameLocations": [
                        "801:8:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 278,
                      "src": "801:8:7"
                    },
                    "referencedDeclaration": 278,
                    "src": "801:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$278",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e3ac5d26",
                  "id": 433,
                  "mutability": "mutable",
                  "name": "prize",
                  "nameLocation": "855:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "840:20:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "dfbf53ae",
                  "id": 435,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "881:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "866:21:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "866:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cfbd900f",
                  "id": 437,
                  "mutability": "mutable",
                  "name": "ticketCount",
                  "nameLocation": "909:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "894:26:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "50b44712",
                  "id": 441,
                  "mutability": "mutable",
                  "name": "tickets",
                  "nameLocation": "961:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "926:42:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "typeName": {
                    "id": 440,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 438,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "934:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "926:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                      "typeString": "mapping(uint256 => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 439,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "945:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0fe85616",
                  "id": 445,
                  "mutability": "mutable",
                  "name": "ticketsClaimed",
                  "nameLocation": "1009:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "974:49:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 444,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 442,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "982:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "974:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 443,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "993:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "56c77ebe",
                  "id": 448,
                  "mutability": "mutable",
                  "name": "eligibleBadges",
                  "nameLocation": "1047:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "1030:31:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 446,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1030:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 447,
                    "nodeType": "ArrayTypeName",
                    "src": "1030:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6dc3ae8f",
                  "id": 452,
                  "mutability": "mutable",
                  "name": "badgeAllocations",
                  "nameLocation": "1102:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 893,
                  "src": "1067:51:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "typeName": {
                    "id": 451,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 449,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1075:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1067:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                      "typeString": "mapping(uint256 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 450,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1086:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "1486:99:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 467,
                            "name": "superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "1496:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 468,
                            "name": "_superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "1515:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1496:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 470,
                        "nodeType": "ExpressionStatement",
                        "src": "1496:36:7"
                      },
                      {
                        "expression": {
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 471,
                            "name": "superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "1542:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 472,
                            "name": "_superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "1561:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "src": "1542:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 474,
                        "nodeType": "ExpressionStatement",
                        "src": "1542:36:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 453,
                    "nodeType": "StructuredDocumentation",
                    "src": "1125:214:7",
                    "text": "@param _initialOwner The initial owner of the contract\n @param _superchainPoints The address of the SuperchainPoints contract\n @param _superchainBadges The address of the SuperchainBadges contract"
                  },
                  "id": 476,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 464,
                          "name": "_initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 455,
                          "src": "1471:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 465,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 463,
                        "name": "Ownable",
                        "nameLocations": [
                          "1463:7:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1463:7:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1463:22:7"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 462,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "_initialOwner",
                        "nameLocation": "1373:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "1365:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1365:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 458,
                        "mutability": "mutable",
                        "name": "_superchainPoints",
                        "nameLocation": "1403:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "1396:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$356",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 457,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 456,
                            "name": "IERC20",
                            "nameLocations": [
                              "1396:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 356,
                            "src": "1396:6:7"
                          },
                          "referencedDeclaration": 356,
                          "src": "1396:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "_superchainBadges",
                        "nameLocation": "1439:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 476,
                        "src": "1430:26:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$278",
                          "typeString": "contract IERC1155"
                        },
                        "typeName": {
                          "id": 460,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 459,
                            "name": "IERC1155",
                            "nameLocations": [
                              "1430:8:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 278,
                            "src": "1430:8:7"
                          },
                          "referencedDeclaration": 278,
                          "src": "1430:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1355:107:7"
                  },
                  "returnParameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1486:0:7"
                  },
                  "scope": 893,
                  "src": "1344:241:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1066
                  ],
                  "body": {
                    "id": 592,
                    "nodeType": "Block",
                    "src": "1848:943:7",
                    "statements": [
                      {
                        "condition": {
                          "id": 494,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "1862:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 499,
                        "nodeType": "IfStatement",
                        "src": "1858:71:7",
                        "trueBody": {
                          "id": 498,
                          "nodeType": "Block",
                          "src": "1875:54:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 495,
                                  "name": "RaffleAlreadyStarted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 995,
                                  "src": "1896:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1896:22:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 497,
                              "nodeType": "RevertStatement",
                              "src": "1889:29:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 500,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "1977:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1991:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1977:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "1977:18:7"
                      },
                      {
                        "expression": {
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 504,
                            "name": "finished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "2005:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2016:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2005:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 507,
                        "nodeType": "ExpressionStatement",
                        "src": "2005:16:7"
                      },
                      {
                        "expression": {
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 508,
                            "name": "sealedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "2054:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 509,
                            "name": "_sealedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "2067:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2054:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 511,
                        "nodeType": "ExpressionStatement",
                        "src": "2054:24:7"
                      },
                      {
                        "expression": {
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 512,
                            "name": "storedBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2088:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 513,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2108:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2114:6:7",
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "2108:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2123:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2108:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2088:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "2088:36:7"
                      },
                      {
                        "expression": {
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 519,
                            "name": "revealAfterTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "2134:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 520,
                            "name": "_revealAfterTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "2157:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2134:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "2134:44:7"
                      },
                      {
                        "expression": {
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 523,
                            "name": "prize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "2221:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 524,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 483,
                            "src": "2229:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2221:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 526,
                        "nodeType": "ExpressionStatement",
                        "src": "2221:15:7"
                      },
                      {
                        "expression": {
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 527,
                            "name": "eligibleBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "2278:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 531,
                                  "name": "_badges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 486,
                                  "src": "2309:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2317:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2309:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "2295:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 528,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2299:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 529,
                                "nodeType": "ArrayTypeName",
                                "src": "2299:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2295:29:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "2278:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 535,
                        "nodeType": "ExpressionStatement",
                        "src": "2278:46:7"
                      },
                      {
                        "body": {
                          "id": 565,
                          "nodeType": "Block",
                          "src": "2379:119:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 547,
                                    "name": "badgeAllocations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 452,
                                    "src": "2393:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 551,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 548,
                                      "name": "_badges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 486,
                                      "src": "2410:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 550,
                                    "indexExpression": {
                                      "id": 549,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 537,
                                      "src": "2418:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2410:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2393:28:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 552,
                                    "name": "_badgeAllocation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 489,
                                    "src": "2424:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 554,
                                  "indexExpression": {
                                    "id": 553,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 537,
                                    "src": "2441:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2424:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2393:50:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 556,
                              "nodeType": "ExpressionStatement",
                              "src": "2393:50:7"
                            },
                            {
                              "expression": {
                                "id": 563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 557,
                                    "name": "eligibleBadges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 448,
                                    "src": "2457:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 559,
                                  "indexExpression": {
                                    "id": 558,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 537,
                                    "src": "2472:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2457:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 560,
                                    "name": "_badges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 486,
                                    "src": "2477:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 562,
                                  "indexExpression": {
                                    "id": 561,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 537,
                                    "src": "2485:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2477:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2457:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 564,
                              "nodeType": "ExpressionStatement",
                              "src": "2457:30:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 540,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "2354:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 541,
                              "name": "_badges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 486,
                              "src": "2358:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2366:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2358:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2354:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 566,
                        "initializationExpression": {
                          "assignments": [
                            537
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 537,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2347:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 566,
                              "src": "2339:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 536,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2339:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 539,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2351:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2339:13:7"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2374:3:7",
                            "subExpression": {
                              "id": 544,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 537,
                              "src": "2374:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 546,
                          "nodeType": "ExpressionStatement",
                          "src": "2374:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "2334:164:7"
                      },
                      {
                        "assignments": [
                          568
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 568,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2546:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 592,
                            "src": "2541:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 567,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2541:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 579,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 571,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2599:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2603:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2599:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 575,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2631:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$893",
                                    "typeString": "contract SuperchainPointsRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$893",
                                    "typeString": "contract SuperchainPointsRaffle"
                                  }
                                ],
                                "id": 574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2623:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 573,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2623:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2623:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 577,
                              "name": "prize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "2650:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 569,
                              "name": "superchainPoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "2556:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$356",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2573:12:7",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 355,
                            "src": "2556:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2556:109:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2541:124:7"
                      },
                      {
                        "condition": {
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2679:8:7",
                          "subExpression": {
                            "id": 580,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "2680:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 586,
                        "nodeType": "IfStatement",
                        "src": "2675:62:7",
                        "trueBody": {
                          "id": 585,
                          "nodeType": "Block",
                          "src": "2689:48:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 582,
                                  "name": "TransferFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1001,
                                  "src": "2710:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2710:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 584,
                              "nodeType": "RevertStatement",
                              "src": "2703:23:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 588,
                              "name": "sealedSeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "2766:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 589,
                              "name": "prize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "2778:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 587,
                            "name": "RaffleStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1031,
                            "src": "2752:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2752:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 591,
                        "nodeType": "EmitStatement",
                        "src": "2747:37:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 477,
                    "nodeType": "StructuredDocumentation",
                    "src": "1591:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "31e54a2e",
                  "id": 593,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 492,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 491,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1838:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1838:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1838:9:7"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "1644:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "_sealedSeed",
                        "nameLocation": "1672:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "1664:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "_revealAfterTimestamp",
                        "nameLocation": "1701:21:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "1693:29:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1693:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1740:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "1732:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1732:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 486,
                        "mutability": "mutable",
                        "name": "_badges",
                        "nameLocation": "1774:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "1757:24:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 484,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1757:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 485,
                          "nodeType": "ArrayTypeName",
                          "src": "1757:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "_badgeAllocation",
                        "nameLocation": "1808:16:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "1791:33:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 487,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1791:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 488,
                          "nodeType": "ArrayTypeName",
                          "src": "1791:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1654:176:7"
                  },
                  "returnParameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1848:0:7"
                  },
                  "scope": 893,
                  "src": "1635:1156:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1072
                  ],
                  "body": {
                    "id": 705,
                    "nodeType": "Block",
                    "src": "2895:1225:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 601,
                            "name": "finished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "2945:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2957:12:7",
                            "subExpression": {
                              "id": 602,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "2958:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2945:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 609,
                        "nodeType": "IfStatement",
                        "src": "2941:79:7",
                        "trueBody": {
                          "id": 608,
                          "nodeType": "Block",
                          "src": "2971:49:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 605,
                                  "name": "NoOngoingRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 998,
                                  "src": "2992:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2992:17:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 607,
                              "nodeType": "RevertStatement",
                              "src": "2985:24:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 610,
                            "name": "finished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "3098:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3109:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3098:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 613,
                        "nodeType": "ExpressionStatement",
                        "src": "3098:15:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 614,
                            "name": "storedBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "3189:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 615,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3209:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3215:6:7",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "3209:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3189:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 623,
                              "name": "revealAfterTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 425,
                              "src": "3307:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 624,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3330:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3336:9:7",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3330:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3307:38:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 632,
                          "nodeType": "IfStatement",
                          "src": "3303:125:7",
                          "trueBody": {
                            "id": 631,
                            "nodeType": "Block",
                            "src": "3347:81:7",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "id": 628,
                                      "name": "revealAfterTimestamp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 425,
                                      "src": "3396:20:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 627,
                                    "name": "CannotRevealBeforeTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1011,
                                    "src": "3368:27:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
                                      "typeString": "function (uint256) pure returns (error)"
                                    }
                                  },
                                  "id": 629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3368:49:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 630,
                                "nodeType": "RevertStatement",
                                "src": "3361:56:7"
                              }
                            ]
                          }
                        },
                        "id": 633,
                        "nodeType": "IfStatement",
                        "src": "3185:243:7",
                        "trueBody": {
                          "id": 622,
                          "nodeType": "Block",
                          "src": "3223:74:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 619,
                                    "name": "storedBlockNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 423,
                                    "src": "3268:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 618,
                                  "name": "CannotRevealBeforeBlock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1006,
                                  "src": "3244:23:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256) pure returns (error)"
                                  }
                                },
                                "id": 620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3244:42:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 621,
                              "nodeType": "RevertStatement",
                              "src": "3237:49:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 637,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3513:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 638,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3517:6:7",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3513:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 639,
                                    "name": "_seed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 596,
                                    "src": "3525:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 635,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3496:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3500:12:7",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3496:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3496:35:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 634,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3486:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3486:46:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 642,
                            "name": "sealedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "3536:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3486:60:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 648,
                        "nodeType": "IfStatement",
                        "src": "3482:111:7",
                        "trueBody": {
                          "id": 647,
                          "nodeType": "Block",
                          "src": "3548:45:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 644,
                                  "name": "InvalidSeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1014,
                                  "src": "3569:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3569:13:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 646,
                              "nodeType": "RevertStatement",
                              "src": "3562:20:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          650
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 650,
                            "mutability": "mutable",
                            "name": "random",
                            "nameLocation": "3653:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 705,
                            "src": "3645:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 649,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3645:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 663,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 656,
                                      "name": "_seed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 596,
                                      "src": "3710:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 658,
                                          "name": "storedBlockNumber",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 423,
                                          "src": "3727:17:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 657,
                                        "name": "blockhash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -5,
                                        "src": "3717:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3717:28:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 654,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "3693:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3697:12:7",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "3693:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 660,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3693:53:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 653,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "3683:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3683:64:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3662:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 651,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3662:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3662:95:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3645:112:7"
                      },
                      {
                        "expression": {
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 664,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3767:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 665,
                              "name": "tickets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "3776:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 669,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 666,
                                "name": "random",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "3784:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "id": 667,
                                "name": "ticketCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 437,
                                "src": "3793:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3784:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3776:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3767:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 671,
                        "nodeType": "ExpressionStatement",
                        "src": "3767:38:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 672,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "3819:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3837:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3829:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 673,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3829:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3829:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3819:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 682,
                        "nodeType": "IfStatement",
                        "src": "3815:74:7",
                        "trueBody": {
                          "id": 681,
                          "nodeType": "Block",
                          "src": "3841:48:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 678,
                                  "name": "TicketNotFound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1017,
                                  "src": "3862:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3862:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 680,
                              "nodeType": "RevertStatement",
                              "src": "3855:23:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          684
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 684,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3941:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 705,
                            "src": "3936:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 683,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3936:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 692,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 689,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "3985:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 690,
                              "name": "prize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "3993:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 686,
                                  "name": "superchainPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 428,
                                  "src": "3958:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$356",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$356",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 685,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 356,
                                "src": "3951:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$356_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3951:24:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$356",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3976:8:7",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 323,
                            "src": "3951:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3951:48:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3936:63:7"
                      },
                      {
                        "condition": {
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4013:8:7",
                          "subExpression": {
                            "id": 693,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "4014:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 699,
                        "nodeType": "IfStatement",
                        "src": "4009:62:7",
                        "trueBody": {
                          "id": 698,
                          "nodeType": "Block",
                          "src": "4023:48:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 695,
                                  "name": "TransferFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1001,
                                  "src": "4044:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4044:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 697,
                              "nodeType": "RevertStatement",
                              "src": "4037:23:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 701,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "4099:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 702,
                              "name": "prize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "4107:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 700,
                            "name": "RaffleWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "4086:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4086:27:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 704,
                        "nodeType": "EmitStatement",
                        "src": "4081:32:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 594,
                    "nodeType": "StructuredDocumentation",
                    "src": "2797:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "a9a86f4d",
                  "id": 706,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 599,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 598,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2885:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2885:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2885:9:7"
                    }
                  ],
                  "name": "revealWinner",
                  "nameLocation": "2850:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "_seed",
                        "nameLocation": "2871:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "2863:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2863:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2862:15:7"
                  },
                  "returnParameters": {
                    "id": 600,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2895:0:7"
                  },
                  "scope": 893,
                  "src": "2841:1279:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1117
                  ],
                  "body": {
                    "id": 772,
                    "nodeType": "Block",
                    "src": "4201:717:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 710,
                            "name": "finished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "4251:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4263:12:7",
                            "subExpression": {
                              "id": 711,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "4264:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4251:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 718,
                        "nodeType": "IfStatement",
                        "src": "4247:79:7",
                        "trueBody": {
                          "id": 717,
                          "nodeType": "Block",
                          "src": "4277:49:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 714,
                                  "name": "NoOngoingRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 998,
                                  "src": "4298:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4298:17:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 716,
                              "nodeType": "RevertStatement",
                              "src": "4291:24:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          720
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 720,
                            "mutability": "mutable",
                            "name": "ticketsAllocation",
                            "nameLocation": "4402:17:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 772,
                            "src": "4394:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 719,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4394:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 725,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 722,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4442:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4446:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4442:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 721,
                            "name": "getClaimableTickets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "4422:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4422:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4394:59:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 726,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "4467:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4488:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4467:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 733,
                        "nodeType": "IfStatement",
                        "src": "4463:78:7",
                        "trueBody": {
                          "id": 732,
                          "nodeType": "Block",
                          "src": "4491:50:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 729,
                                  "name": "NoTicketsToClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1020,
                                  "src": "4512:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4512:18:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 731,
                              "nodeType": "RevertStatement",
                              "src": "4505:25:7"
                            }
                          ]
                        }
                      },
                      {
                        "body": {
                          "id": 753,
                          "nodeType": "Block",
                          "src": "4705:48:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 746,
                                    "name": "tickets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 441,
                                    "src": "4719:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 748,
                                  "indexExpression": {
                                    "id": 747,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 735,
                                    "src": "4727:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4719:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 749,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4732:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 750,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4736:6:7",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4732:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4719:23:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 752,
                              "nodeType": "ExpressionStatement",
                              "src": "4719:23:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 738,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "4642:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 739,
                              "name": "ticketCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "4646:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 740,
                              "name": "ticketsAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "4660:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4646:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4642:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 754,
                        "initializationExpression": {
                          "assignments": [
                            735
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 735,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4613:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 754,
                              "src": "4605:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 734,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4605:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 737,
                          "initialValue": {
                            "id": 736,
                            "name": "ticketCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "4617:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4605:23:7"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4691:3:7",
                            "subExpression": {
                              "id": 743,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 735,
                              "src": "4691:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 745,
                          "nodeType": "ExpressionStatement",
                          "src": "4691:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "4587:166:7"
                      },
                      {
                        "expression": {
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 755,
                              "name": "ticketsClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 445,
                              "src": "4762:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 758,
                            "indexExpression": {
                              "expression": {
                                "id": 756,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4777:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4781:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4777:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4762:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 759,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "4791:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4762:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 761,
                        "nodeType": "ExpressionStatement",
                        "src": "4762:46:7"
                      },
                      {
                        "expression": {
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 762,
                            "name": "ticketCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 437,
                            "src": "4818:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 763,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "4833:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4818:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 765,
                        "nodeType": "ExpressionStatement",
                        "src": "4818:32:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 767,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4881:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4885:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4881:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 769,
                              "name": "ticketsAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "4893:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 766,
                            "name": "TicketsClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "4866:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4866:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 771,
                        "nodeType": "EmitStatement",
                        "src": "4861:50:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 707,
                    "nodeType": "StructuredDocumentation",
                    "src": "4126:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "81fe4c61",
                  "id": 773,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimTickets",
                  "nameLocation": "4179:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4191:2:7"
                  },
                  "returnParameters": {
                    "id": 709,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4201:0:7"
                  },
                  "scope": 893,
                  "src": "4170:748:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1105
                  ],
                  "body": {
                    "id": 832,
                    "nodeType": "Block",
                    "src": "5041:439:7",
                    "statements": [
                      {
                        "assignments": [
                          782
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 782,
                            "mutability": "mutable",
                            "name": "ticketsAllocation",
                            "nameLocation": "5059:17:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 832,
                            "src": "5051:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 781,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5051:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 784,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5079:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5051:29:7"
                      },
                      {
                        "body": {
                          "id": 824,
                          "nodeType": "Block",
                          "src": "5142:274:7",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 798,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 776,
                                      "src": "5187:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 799,
                                        "name": "eligibleBadges",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 448,
                                        "src": "5193:14:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 801,
                                      "indexExpression": {
                                        "id": 800,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 786,
                                        "src": "5208:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5193:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 796,
                                      "name": "superchainBadges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 431,
                                      "src": "5160:16:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC1155_$278",
                                        "typeString": "contract IERC1155"
                                      }
                                    },
                                    "id": 797,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5177:9:7",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 216,
                                    "src": "5160:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view external returns (uint256)"
                                    }
                                  },
                                  "id": 802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5160:51:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5214:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5160:55:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 823,
                              "nodeType": "IfStatement",
                              "src": "5156:250:7",
                              "trueBody": {
                                "id": 822,
                                "nodeType": "Block",
                                "src": "5217:189:7",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 811,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 805,
                                          "name": "badgeAllocations",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 452,
                                          "src": "5239:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 809,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 806,
                                            "name": "eligibleBadges",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 448,
                                            "src": "5256:14:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                              "typeString": "uint256[] storage ref"
                                            }
                                          },
                                          "id": 808,
                                          "indexExpression": {
                                            "id": 807,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 786,
                                            "src": "5271:1:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5256:17:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5239:35:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 810,
                                        "name": "ticketsAllocation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 782,
                                        "src": "5277:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5239:55:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 821,
                                    "nodeType": "IfStatement",
                                    "src": "5235:157:7",
                                    "trueBody": {
                                      "id": 820,
                                      "nodeType": "Block",
                                      "src": "5296:96:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 818,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 812,
                                              "name": "ticketsAllocation",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 782,
                                              "src": "5318:17:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "baseExpression": {
                                                "id": 813,
                                                "name": "badgeAllocations",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 452,
                                                "src": "5338:16:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                                  "typeString": "mapping(uint256 => uint256)"
                                                }
                                              },
                                              "id": 817,
                                              "indexExpression": {
                                                "baseExpression": {
                                                  "id": 814,
                                                  "name": "eligibleBadges",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 448,
                                                  "src": "5355:14:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                    "typeString": "uint256[] storage ref"
                                                  }
                                                },
                                                "id": 816,
                                                "indexExpression": {
                                                  "id": 815,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 786,
                                                  "src": "5370:1:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "5355:17:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "5338:35:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5318:55:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 819,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5318:55:7"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 789,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 786,
                            "src": "5110:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 790,
                              "name": "eligibleBadges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 448,
                              "src": "5114:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5129:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5114:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5110:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 825,
                        "initializationExpression": {
                          "assignments": [
                            786
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 786,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5103:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 825,
                              "src": "5095:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 785,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5095:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 788,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5107:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5095:13:7"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5137:3:7",
                            "subExpression": {
                              "id": 793,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "5137:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 795,
                          "nodeType": "ExpressionStatement",
                          "src": "5137:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "5090:326:7"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 826,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "5433:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 827,
                              "name": "ticketsClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 445,
                              "src": "5453:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 829,
                            "indexExpression": {
                              "id": 828,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "5468:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5453:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5433:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 780,
                        "id": 831,
                        "nodeType": "Return",
                        "src": "5426:47:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 774,
                    "nodeType": "StructuredDocumentation",
                    "src": "4924:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "d9f483f8",
                  "id": 833,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimableTickets",
                  "nameLocation": "4977:19:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 777,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 776,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "5005:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 833,
                        "src": "4997:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 775,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4997:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4996:14:7"
                  },
                  "returnParameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 833,
                        "src": "5032:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5032:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5031:9:7"
                  },
                  "scope": 893,
                  "src": "4968:512:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1113
                  ],
                  "body": {
                    "id": 845,
                    "nodeType": "Block",
                    "src": "5601:44:7",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 841,
                            "name": "ticketsClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 445,
                            "src": "5618:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 843,
                          "indexExpression": {
                            "id": 842,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 836,
                            "src": "5633:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5618:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 840,
                        "id": 844,
                        "nodeType": "Return",
                        "src": "5611:27:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 834,
                    "nodeType": "StructuredDocumentation",
                    "src": "5486:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "e8a8ee28",
                  "id": 846,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimedTickets",
                  "nameLocation": "5539:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 836,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "5565:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "5557:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5557:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5556:14:7"
                  },
                  "returnParameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "5592:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5592:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5591:9:7"
                  },
                  "scope": 893,
                  "src": "5530:115:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1097
                  ],
                  "body": {
                    "id": 854,
                    "nodeType": "Block",
                    "src": "5752:35:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 852,
                          "name": "ticketCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 437,
                          "src": "5769:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 851,
                        "id": 853,
                        "nodeType": "Return",
                        "src": "5762:18:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 847,
                    "nodeType": "StructuredDocumentation",
                    "src": "5651:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "06e8337f",
                  "id": 855,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalTickets",
                  "nameLocation": "5704:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5719:2:7"
                  },
                  "returnParameters": {
                    "id": 851,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 855,
                        "src": "5743:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5743:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5742:9:7"
                  },
                  "scope": 893,
                  "src": "5695:92:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1091
                  ],
                  "body": {
                    "id": 863,
                    "nodeType": "Block",
                    "src": "5893:29:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 861,
                          "name": "prize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 433,
                          "src": "5910:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 860,
                        "id": 862,
                        "nodeType": "Return",
                        "src": "5903:12:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 856,
                    "nodeType": "StructuredDocumentation",
                    "src": "5793:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "ecca9c2e",
                  "id": 864,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPrizeAmount",
                  "nameLocation": "5846:14:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 857,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5860:2:7"
                  },
                  "returnParameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "5884:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5884:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5883:9:7"
                  },
                  "scope": 893,
                  "src": "5837:85:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1085
                  ],
                  "body": {
                    "id": 873,
                    "nodeType": "Block",
                    "src": "6042:38:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 871,
                          "name": "eligibleBadges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 448,
                          "src": "6059:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 870,
                        "id": 872,
                        "nodeType": "Return",
                        "src": "6052:21:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 865,
                    "nodeType": "StructuredDocumentation",
                    "src": "5928:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "4705ab24",
                  "id": 874,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEligibleBadges",
                  "nameLocation": "5981:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 866,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5998:2:7"
                  },
                  "returnParameters": {
                    "id": 870,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 874,
                        "src": "6024:16:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 867,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6024:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 868,
                          "nodeType": "ArrayTypeName",
                          "src": "6024:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6023:18:7"
                  },
                  "scope": 893,
                  "src": "5972:108:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1123
                  ],
                  "body": {
                    "id": 882,
                    "nodeType": "Block",
                    "src": "6181:32:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 880,
                          "name": "finished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "6198:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 879,
                        "id": 881,
                        "nodeType": "Return",
                        "src": "6191:15:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 875,
                    "nodeType": "StructuredDocumentation",
                    "src": "6086:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "7b352962",
                  "id": 883,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isFinished",
                  "nameLocation": "6139:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6149:2:7"
                  },
                  "returnParameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 883,
                        "src": "6175:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6175:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6174:6:7"
                  },
                  "scope": 893,
                  "src": "6130:83:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1078
                  ],
                  "body": {
                    "id": 891,
                    "nodeType": "Block",
                    "src": "6323:44:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 889,
                          "name": "revealAfterTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 425,
                          "src": "6340:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 888,
                        "id": 890,
                        "nodeType": "Return",
                        "src": "6333:27:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 884,
                    "nodeType": "StructuredDocumentation",
                    "src": "6219:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "4639545f",
                  "id": 892,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRevealedAfter",
                  "nameLocation": "6272:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 885,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6288:2:7"
                  },
                  "returnParameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 887,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 892,
                        "src": "6314:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 886,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6314:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6313:9:7"
                  },
                  "scope": 893,
                  "src": "6263:104:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 894,
              "src": "506:5863:7",
              "usedErrors": [
                13,
                18,
                995,
                998,
                1001,
                1006,
                1011,
                1014,
                1017,
                1020,
                1023
              ],
              "usedEvents": [
                24,
                1031,
                1038,
                1045
              ]
            }
          ],
          "src": "32:6338:7"
        },
        "id": 7
      },
      "contracts/SuperchainPointsRaffleFactory.sol": {
        "ast": {
          "absolutePath": "contracts/SuperchainPointsRaffleFactory.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ],
            "IERC20": [
              356
            ],
            "ISuperchainPointsRaffle": [
              1124
            ],
            "ISuperchainPointsRaffleFactory": [
              1145
            ],
            "Ownable": [
              147
            ],
            "SuperchainPointsRaffle": [
              893
            ],
            "SuperchainPointsRaffleFactory": [
              990
            ]
          },
          "id": 991,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 895,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 897,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 991,
              "sourceUnit": 148,
              "src": "58:67:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 896,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "66:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "id": 899,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 991,
              "sourceUnit": 156,
              "src": "126:69:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 898,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "134:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "id": 901,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 991,
              "sourceUnit": 152,
              "src": "196:73:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 900,
                    "name": "IERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 278,
                    "src": "204:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPointsRaffle.sol",
              "file": "./interfaces/ISuperchainPointsRaffle.sol",
              "id": 903,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 991,
              "sourceUnit": 1125,
              "src": "270:81:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 902,
                    "name": "ISuperchainPointsRaffle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1124,
                    "src": "278:23:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/SuperchainPointsRaffle.sol",
              "file": "./SuperchainPointsRaffle.sol",
              "id": 905,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 991,
              "sourceUnit": 894,
              "src": "352:68:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 904,
                    "name": "SuperchainPointsRaffle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 893,
                    "src": "360:22:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPointsRaffleFactory.sol",
              "file": "./interfaces/ISuperchainPointsRaffleFactory.sol",
              "id": 907,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 991,
              "sourceUnit": 1146,
              "src": "421:95:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 906,
                    "name": "ISuperchainPointsRaffleFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1145,
                    "src": "429:30:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 909,
                    "name": "ISuperchainPointsRaffleFactory",
                    "nameLocations": [
                      "707:30:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1145,
                    "src": "707:30:8"
                  },
                  "id": 910,
                  "nodeType": "InheritanceSpecifier",
                  "src": "707:30:8"
                },
                {
                  "baseName": {
                    "id": 911,
                    "name": "Ownable",
                    "nameLocations": [
                      "739:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "739:7:8"
                  },
                  "id": 912,
                  "nodeType": "InheritanceSpecifier",
                  "src": "739:7:8"
                }
              ],
              "canonicalName": "SuperchainPointsRaffleFactory",
              "contractDependencies": [
                893
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 908,
                "nodeType": "StructuredDocumentation",
                "src": "518:147:8",
                "text": "@title SuperchainPointsRaffleFactory\n @notice Factory for SuperchainPointsRaffle contracts that also acts as a proxy for the current raffle"
              },
              "fullyImplemented": true,
              "id": 990,
              "linearizedBaseContracts": [
                990,
                147,
                386,
                1145,
                1136,
                1130
              ],
              "name": "SuperchainPointsRaffleFactory",
              "nameLocation": "674:29:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "b2ab4ab7",
                  "id": 915,
                  "mutability": "mutable",
                  "name": "superchainPoints",
                  "nameLocation": "767:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "753:30:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$356",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 914,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 913,
                      "name": "IERC20",
                      "nameLocations": [
                        "753:6:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 356,
                      "src": "753:6:8"
                    },
                    "referencedDeclaration": 356,
                    "src": "753:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$356",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a94bd919",
                  "id": 918,
                  "mutability": "mutable",
                  "name": "superchainBadges",
                  "nameLocation": "805:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "789:32:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$278",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 917,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 916,
                      "name": "IERC1155",
                      "nameLocations": [
                        "789:8:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 278,
                      "src": "789:8:8"
                    },
                    "referencedDeclaration": 278,
                    "src": "789:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$278",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a8527cbe",
                  "id": 921,
                  "mutability": "mutable",
                  "name": "currentRaffle",
                  "nameLocation": "859:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 990,
                  "src": "828:44:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1124",
                    "typeString": "contract ISuperchainPointsRaffle"
                  },
                  "typeName": {
                    "id": 920,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 919,
                      "name": "ISuperchainPointsRaffle",
                      "nameLocations": [
                        "828:23:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1124,
                      "src": "828:23:8"
                    },
                    "referencedDeclaration": 1124,
                    "src": "828:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1124",
                      "typeString": "contract ISuperchainPointsRaffle"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 944,
                    "nodeType": "Block",
                    "src": "1240:99:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 936,
                            "name": "superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "1250:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 937,
                            "name": "_superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 927,
                            "src": "1269:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1250:36:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 939,
                        "nodeType": "ExpressionStatement",
                        "src": "1250:36:8"
                      },
                      {
                        "expression": {
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 940,
                            "name": "superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "1296:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 941,
                            "name": "_superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "1315:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "src": "1296:36:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 943,
                        "nodeType": "ExpressionStatement",
                        "src": "1296:36:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 922,
                    "nodeType": "StructuredDocumentation",
                    "src": "879:214:8",
                    "text": "@param _initialOwner The initial owner of the contract\n @param _superchainPoints The address of the SuperchainPoints contract\n @param _superchainBadges The address of the SuperchainBadges contract"
                  },
                  "id": 945,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 933,
                          "name": "_initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 924,
                          "src": "1225:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 934,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 932,
                        "name": "Ownable",
                        "nameLocations": [
                          "1217:7:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1217:7:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1217:22:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "_initialOwner",
                        "nameLocation": "1127:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "1119:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1119:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "_superchainPoints",
                        "nameLocation": "1157:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "1150:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$356",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 926,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 925,
                            "name": "IERC20",
                            "nameLocations": [
                              "1150:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 356,
                            "src": "1150:6:8"
                          },
                          "referencedDeclaration": 356,
                          "src": "1150:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "_superchainBadges",
                        "nameLocation": "1193:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 945,
                        "src": "1184:26:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$278",
                          "typeString": "contract IERC1155"
                        },
                        "typeName": {
                          "id": 929,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 928,
                            "name": "IERC1155",
                            "nameLocations": [
                              "1184:8:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 278,
                            "src": "1184:8:8"
                          },
                          "referencedDeclaration": 278,
                          "src": "1184:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1109:107:8"
                  },
                  "returnParameters": {
                    "id": 935,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1240:0:8"
                  },
                  "scope": 990,
                  "src": "1098:241:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1144
                  ],
                  "body": {
                    "id": 988,
                    "nodeType": "Block",
                    "src": "1386:341:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 952,
                                  "name": "currentRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 921,
                                  "src": "1408:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1124",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1124",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                ],
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1400:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 950,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1400:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1400:22:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 956,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1434:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1426:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 954,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1426:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1426:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1400:36:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 959,
                                  "name": "currentRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 921,
                                  "src": "1440:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1124",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                },
                                "id": 960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1454:10:8",
                                "memberName": "isFinished",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1123,
                                "src": "1440:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                  "typeString": "function () view external returns (bool)"
                                }
                              },
                              "id": 961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1440:26:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "66616c7365",
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1470:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "1440:35:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1400:75:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 969,
                        "nodeType": "IfStatement",
                        "src": "1396:128:8",
                        "trueBody": {
                          "id": 968,
                          "nodeType": "Block",
                          "src": "1477:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 965,
                                  "name": "OngoingRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1129,
                                  "src": "1498:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1498:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 967,
                              "nodeType": "RevertStatement",
                              "src": "1491:22:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 970,
                            "name": "currentRaffle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "1534:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1124",
                              "typeString": "contract ISuperchainPointsRaffle"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 974,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "1590:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1590:7:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 976,
                                "name": "superchainPoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "1611:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$356",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 977,
                                "name": "superchainBadges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 918,
                                "src": "1641:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC1155_$278",
                                  "typeString": "contract IERC1155"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$356",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC1155_$278",
                                  "typeString": "contract IERC1155"
                                }
                              ],
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1550:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_IERC20_$356_$_t_contract$_IERC1155_$278_$returns$_t_contract$_SuperchainPointsRaffle_$893_$",
                                "typeString": "function (address,contract IERC20,contract IERC1155) returns (contract SuperchainPointsRaffle)"
                              },
                              "typeName": {
                                "id": 972,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 971,
                                  "name": "SuperchainPointsRaffle",
                                  "nameLocations": [
                                    "1554:22:8"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 893,
                                  "src": "1554:22:8"
                                },
                                "referencedDeclaration": 893,
                                "src": "1554:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$893",
                                  "typeString": "contract SuperchainPointsRaffle"
                                }
                              }
                            },
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1550:117:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$893",
                              "typeString": "contract SuperchainPointsRaffle"
                            }
                          },
                          "src": "1534:133:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1124",
                            "typeString": "contract ISuperchainPointsRaffle"
                          }
                        },
                        "id": 980,
                        "nodeType": "ExpressionStatement",
                        "src": "1534:133:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 984,
                                  "name": "currentRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 921,
                                  "src": "1705:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1124",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1124",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                ],
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1697:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 982,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1697:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1697:22:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 981,
                            "name": "RaffleCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "1683:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1683:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 987,
                        "nodeType": "EmitStatement",
                        "src": "1678:42:8"
                      }
                    ]
                  },
                  "functionSelector": "485ac2a7",
                  "id": 989,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 948,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 947,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1376:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1376:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1376:9:8"
                    }
                  ],
                  "name": "createRaffle",
                  "nameLocation": "1354:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1366:2:8"
                  },
                  "returnParameters": {
                    "id": 949,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1386:0:8"
                  },
                  "scope": 990,
                  "src": "1345:382:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 991,
              "src": "665:1065:8",
              "usedErrors": [
                13,
                18,
                1129
              ],
              "usedEvents": [
                24,
                1135
              ]
            }
          ],
          "src": "32:1699:8"
        },
        "id": 8
      },
      "contracts/interfaces/ISuperchainPointsRaffle.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ISuperchainPointsRaffle.sol",
          "exportedSymbols": {
            "ISuperchainPointsRaffle": [
              1124
            ],
            "ISuperchainPointsRaffleErrors": [
              1024
            ],
            "ISuperchainPointsRaffleEvents": [
              1046
            ]
          },
          "id": 1125,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 992,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1024,
              "linearizedBaseContracts": [
                1024
              ],
              "name": "ISuperchainPointsRaffleErrors",
              "nameLocation": "68:29:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 993,
                    "nodeType": "StructuredDocumentation",
                    "src": "104:59:9",
                    "text": "@notice Error thrown when the raffle is already started"
                  },
                  "errorSelector": "0dfcbc78",
                  "id": 995,
                  "name": "RaffleAlreadyStarted",
                  "nameLocation": "174:20:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 994,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "194:2:9"
                  },
                  "src": "168:29:9"
                },
                {
                  "documentation": {
                    "id": 996,
                    "nodeType": "StructuredDocumentation",
                    "src": "203:55:9",
                    "text": "@notice Error thrown when the raffle is not started"
                  },
                  "errorSelector": "75d47e7f",
                  "id": 998,
                  "name": "NoOngoingRaffle",
                  "nameLocation": "269:15:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "284:2:9"
                  },
                  "src": "263:24:9"
                },
                {
                  "documentation": {
                    "id": 999,
                    "nodeType": "StructuredDocumentation",
                    "src": "293:51:9",
                    "text": "@notice Error thrown when points transfer fails"
                  },
                  "errorSelector": "90b8ec18",
                  "id": 1001,
                  "name": "TransferFailed",
                  "nameLocation": "355:14:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1000,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "369:2:9"
                  },
                  "src": "349:23:9"
                },
                {
                  "documentation": {
                    "id": 1002,
                    "nodeType": "StructuredDocumentation",
                    "src": "378:73:9",
                    "text": "@notice Random pattern requires seed to be revealed in a future block"
                  },
                  "errorSelector": "a3665c49",
                  "id": 1006,
                  "name": "CannotRevealBeforeBlock",
                  "nameLocation": "462:23:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1005,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1006,
                        "src": "486:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "486:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "485:9:9"
                  },
                  "src": "456:39:9"
                },
                {
                  "documentation": {
                    "id": 1007,
                    "nodeType": "StructuredDocumentation",
                    "src": "501:46:9",
                    "text": "@notice UX requires reveal after timestamp"
                  },
                  "errorSelector": "7498ff66",
                  "id": 1011,
                  "name": "CannotRevealBeforeTimestamp",
                  "nameLocation": "558:27:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1009,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "594:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "586:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1008,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "585:19:9"
                  },
                  "src": "552:53:9"
                },
                {
                  "documentation": {
                    "id": 1012,
                    "nodeType": "StructuredDocumentation",
                    "src": "611:68:9",
                    "text": "@notice Error thrown when the seed doesn't match the sealed seed"
                  },
                  "errorSelector": "863a7486",
                  "id": 1014,
                  "name": "InvalidSeed",
                  "nameLocation": "690:11:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1013,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "701:2:9"
                  },
                  "src": "684:20:9"
                },
                {
                  "documentation": {
                    "id": 1015,
                    "nodeType": "StructuredDocumentation",
                    "src": "710:53:9",
                    "text": "@notice Error thrown when the ticket is not found"
                  },
                  "errorSelector": "0793430c",
                  "id": 1017,
                  "name": "TicketNotFound",
                  "nameLocation": "774:14:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1016,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "788:2:9"
                  },
                  "src": "768:23:9"
                },
                {
                  "documentation": {
                    "id": 1018,
                    "nodeType": "StructuredDocumentation",
                    "src": "797:125:9",
                    "text": "@notice Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed"
                  },
                  "errorSelector": "2da2704e",
                  "id": 1020,
                  "name": "NoTicketsToClaim",
                  "nameLocation": "933:16:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1019,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "949:2:9"
                  },
                  "src": "927:25:9"
                },
                {
                  "documentation": {
                    "id": 1021,
                    "nodeType": "StructuredDocumentation",
                    "src": "958:60:9",
                    "text": "@notice Error thrown when the seed has already been used"
                  },
                  "errorSelector": "c1609d28",
                  "id": 1023,
                  "name": "SeedAlreadyUsed",
                  "nameLocation": "1029:15:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1022,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1044:2:9"
                  },
                  "src": "1023:24:9"
                }
              ],
              "scope": 1125,
              "src": "58:991:9",
              "usedErrors": [
                995,
                998,
                1001,
                1006,
                1011,
                1014,
                1017,
                1020,
                1023
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleEvents",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1046,
              "linearizedBaseContracts": [
                1046
              ],
              "name": "ISuperchainPointsRaffleEvents",
              "nameLocation": "1061:29:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1025,
                    "nodeType": "StructuredDocumentation",
                    "src": "1097:195:9",
                    "text": "@notice Event emitted when a raffle is started\n @param sealedSeed The seed used to generate the raffle\n @param amount The amount of points to be distributed to the raffle winner"
                  },
                  "eventSelector": "3b81d2f4abc4b25cdb3a280f602aba499a20e5e7f079340839d5e4481c2fff17",
                  "id": 1031,
                  "name": "RaffleStarted",
                  "nameLocation": "1303:13:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1030,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1027,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sealedSeed",
                        "nameLocation": "1325:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1317:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1026,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1029,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1345:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1031,
                        "src": "1337:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1028,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1337:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:36:9"
                  },
                  "src": "1297:56:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1032,
                    "nodeType": "StructuredDocumentation",
                    "src": "1359:182:9",
                    "text": "@notice Event emitted when a raffle is finished\n @param winner The address of the raffle winner\n @param amount The amount of points distributed to the raffle winner"
                  },
                  "eventSelector": "7e2ca3905e2a3f4806a624223ea6cdcd30dad54d82e68b44481a5e00f322efc7",
                  "id": 1038,
                  "name": "RaffleWinner",
                  "nameLocation": "1552:12:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1037,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1034,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "1573:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "1565:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1033,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1565:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1036,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1589:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1038,
                        "src": "1581:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1564:32:9"
                  },
                  "src": "1546:51:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1039,
                    "nodeType": "StructuredDocumentation",
                    "src": "1603:151:9",
                    "text": "@notice Event emitted when tickets are claimed\n @param claimer The address of the claimer\n @param amount The amount of points claimed"
                  },
                  "eventSelector": "3492e8dc9c9e6d0557ae45dfe2d8cd4fd614084227839a8a969f39b114895425",
                  "id": 1045,
                  "name": "TicketsClaimed",
                  "nameLocation": "1765:14:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1041,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "claimer",
                        "nameLocation": "1788:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1045,
                        "src": "1780:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1780:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1043,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1805:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1045,
                        "src": "1797:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1797:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1779:33:9"
                  },
                  "src": "1759:54:9"
                }
              ],
              "scope": 1125,
              "src": "1051:764:9",
              "usedErrors": [],
              "usedEvents": [
                1031,
                1038,
                1045
              ]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1047,
                    "name": "ISuperchainPointsRaffleErrors",
                    "nameLocations": [
                      "1858:29:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1024,
                    "src": "1858:29:9"
                  },
                  "id": 1048,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1858:29:9"
                },
                {
                  "baseName": {
                    "id": 1049,
                    "name": "ISuperchainPointsRaffleEvents",
                    "nameLocations": [
                      "1893:29:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1046,
                    "src": "1893:29:9"
                  },
                  "id": 1050,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1893:29:9"
                }
              ],
              "canonicalName": "ISuperchainPointsRaffle",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1124,
              "linearizedBaseContracts": [
                1124,
                1046,
                1024
              ],
              "name": "ISuperchainPointsRaffle",
              "nameLocation": "1827:23:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1051,
                    "nodeType": "StructuredDocumentation",
                    "src": "1929:391:9",
                    "text": "@notice Starts the raffle\n @param _sealedSeed The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\n @param _amount The amount of points to be distributed to the raffle winner\n @param _badges The badges that are eligible to participate in the raffle\n @param _badgeAllocation The number of tickets allocated to each badge"
                  },
                  "functionSelector": "31e54a2e",
                  "id": 1066,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "2334:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1053,
                        "mutability": "mutable",
                        "name": "_sealedSeed",
                        "nameLocation": "2362:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "2354:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1052,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2354:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "_revealAfterTimestamp",
                        "nameLocation": "2391:21:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "2383:29:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2383:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1057,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2430:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "2422:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2422:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "_badges",
                        "nameLocation": "2464:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "2447:24:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1058,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2447:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1059,
                          "nodeType": "ArrayTypeName",
                          "src": "2447:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "_badgeAllocation",
                        "nameLocation": "2498:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "2481:33:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1061,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2481:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1062,
                          "nodeType": "ArrayTypeName",
                          "src": "2481:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2344:176:9"
                  },
                  "returnParameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2529:0:9"
                  },
                  "scope": 1124,
                  "src": "2325:205:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1067,
                    "nodeType": "StructuredDocumentation",
                    "src": "2536:120:9",
                    "text": "@notice Reveals the raffle winner and transfers the points\n @param _seed The seed used to generate the raffle"
                  },
                  "functionSelector": "a9a86f4d",
                  "id": 1072,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revealWinner",
                  "nameLocation": "2670:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1069,
                        "mutability": "mutable",
                        "name": "_seed",
                        "nameLocation": "2691:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "2683:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1068,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2683:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2682:15:9"
                  },
                  "returnParameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2706:0:9"
                  },
                  "scope": 1124,
                  "src": "2661:46:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1073,
                    "nodeType": "StructuredDocumentation",
                    "src": "2713:68:9",
                    "text": "@notice Returns the timestamp at which the seed will be revealed"
                  },
                  "functionSelector": "4639545f",
                  "id": 1078,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRevealedAfter",
                  "nameLocation": "2795:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2811:2:9"
                  },
                  "returnParameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "2837:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2837:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2836:9:9"
                  },
                  "scope": 1124,
                  "src": "2786:60:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1079,
                    "nodeType": "StructuredDocumentation",
                    "src": "2852:77:9",
                    "text": "@notice Returns the badges that are eligible to participate in the raffle"
                  },
                  "functionSelector": "4705ab24",
                  "id": 1085,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEligibleBadges",
                  "nameLocation": "2943:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2960:2:9"
                  },
                  "returnParameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "2986:16:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1081,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2986:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1082,
                          "nodeType": "ArrayTypeName",
                          "src": "2986:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2985:18:9"
                  },
                  "scope": 1124,
                  "src": "2934:70:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1086,
                    "nodeType": "StructuredDocumentation",
                    "src": "3010:82:9",
                    "text": "@notice Returns the amount of points that are distributed to the raffle winner"
                  },
                  "functionSelector": "ecca9c2e",
                  "id": 1091,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPrizeAmount",
                  "nameLocation": "3106:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1087,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3120:2:9"
                  },
                  "returnParameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1091,
                        "src": "3146:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3146:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3145:9:9"
                  },
                  "scope": 1124,
                  "src": "3097:58:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1092,
                    "nodeType": "StructuredDocumentation",
                    "src": "3161:67:9",
                    "text": "@notice Returns the total number of tickets that can be claimed"
                  },
                  "functionSelector": "06e8337f",
                  "id": 1097,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalTickets",
                  "nameLocation": "3242:15:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3257:2:9"
                  },
                  "returnParameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1097,
                        "src": "3283:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1094,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3283:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3282:9:9"
                  },
                  "scope": 1124,
                  "src": "3233:59:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1098,
                    "nodeType": "StructuredDocumentation",
                    "src": "3298:105:9",
                    "text": "@notice Returns the number of tickets that can be claimed\n @param user The address of the user"
                  },
                  "functionSelector": "d9f483f8",
                  "id": 1105,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimableTickets",
                  "nameLocation": "3417:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1101,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3445:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1105,
                        "src": "3437:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3437:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3436:14:9"
                  },
                  "returnParameters": {
                    "id": 1104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1103,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1105,
                        "src": "3474:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3474:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3473:9:9"
                  },
                  "scope": 1124,
                  "src": "3408:75:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1106,
                    "nodeType": "StructuredDocumentation",
                    "src": "3489:101:9",
                    "text": "@notice Returns the number of tickets already claimed\n @param user The address of the user"
                  },
                  "functionSelector": "e8a8ee28",
                  "id": 1113,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimedTickets",
                  "nameLocation": "3604:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1108,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3630:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1113,
                        "src": "3622:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3622:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3621:14:9"
                  },
                  "returnParameters": {
                    "id": 1112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1111,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1113,
                        "src": "3659:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3659:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3658:9:9"
                  },
                  "scope": 1124,
                  "src": "3595:73:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1114,
                    "nodeType": "StructuredDocumentation",
                    "src": "3674:50:9",
                    "text": "@notice Claim tickets to participate in raffle"
                  },
                  "functionSelector": "81fe4c61",
                  "id": 1117,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimTickets",
                  "nameLocation": "3738:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3750:2:9"
                  },
                  "returnParameters": {
                    "id": 1116,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3761:0:9"
                  },
                  "scope": 1124,
                  "src": "3729:33:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1118,
                    "nodeType": "StructuredDocumentation",
                    "src": "3768:50:9",
                    "text": "@notice Returns true if the raffle is finished"
                  },
                  "functionSelector": "7b352962",
                  "id": 1123,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isFinished",
                  "nameLocation": "3832:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1119,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3842:2:9"
                  },
                  "returnParameters": {
                    "id": 1122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1123,
                        "src": "3868:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3868:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3867:6:9"
                  },
                  "scope": 1124,
                  "src": "3823:51:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1125,
              "src": "1817:2059:9",
              "usedErrors": [
                995,
                998,
                1001,
                1006,
                1011,
                1014,
                1017,
                1020,
                1023
              ],
              "usedEvents": [
                1031,
                1038,
                1045
              ]
            }
          ],
          "src": "32:3845:9"
        },
        "id": 9
      },
      "contracts/interfaces/ISuperchainPointsRaffleFactory.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ISuperchainPointsRaffleFactory.sol",
          "exportedSymbols": {
            "ISuperchainPointsRaffleFactory": [
              1145
            ],
            "ISuperchainPointsRaffleFactoryErrors": [
              1130
            ],
            "ISuperchainPointsRaffleFactoryEvents": [
              1136
            ]
          },
          "id": 1146,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1126,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleFactoryErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1130,
              "linearizedBaseContracts": [
                1130
              ],
              "name": "ISuperchainPointsRaffleFactoryErrors",
              "nameLocation": "68:36:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1127,
                    "nodeType": "StructuredDocumentation",
                    "src": "111:60:10",
                    "text": "@notice Cannot create a raffle if one is already started"
                  },
                  "errorSelector": "ac7aae87",
                  "id": 1129,
                  "name": "OngoingRaffle",
                  "nameLocation": "182:13:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1128,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "195:2:10"
                  },
                  "src": "176:22:10"
                }
              ],
              "scope": 1146,
              "src": "58:142:10",
              "usedErrors": [
                1129
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleFactoryEvents",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1136,
              "linearizedBaseContracts": [
                1136
              ],
              "name": "ISuperchainPointsRaffleFactoryEvents",
              "nameLocation": "212:36:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1131,
                    "nodeType": "StructuredDocumentation",
                    "src": "255:44:10",
                    "text": "@notice Emitted when a raffle is created"
                  },
                  "eventSelector": "54ad4cc1960f9b16b4a7fd9f5ee7c05b4de5672cb94bc1dbad3de1ed291c248b",
                  "id": 1135,
                  "name": "RaffleCreated",
                  "nameLocation": "310:13:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1133,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "raffle",
                        "nameLocation": "332:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1135,
                        "src": "324:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "324:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "323:16:10"
                  },
                  "src": "304:36:10"
                }
              ],
              "scope": 1146,
              "src": "202:140:10",
              "usedErrors": [],
              "usedEvents": [
                1135
              ]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1137,
                    "name": "ISuperchainPointsRaffleFactoryErrors",
                    "nameLocations": [
                      "392:36:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1130,
                    "src": "392:36:10"
                  },
                  "id": 1138,
                  "nodeType": "InheritanceSpecifier",
                  "src": "392:36:10"
                },
                {
                  "baseName": {
                    "id": 1139,
                    "name": "ISuperchainPointsRaffleFactoryEvents",
                    "nameLocations": [
                      "434:36:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1136,
                    "src": "434:36:10"
                  },
                  "id": 1140,
                  "nodeType": "InheritanceSpecifier",
                  "src": "434:36:10"
                }
              ],
              "canonicalName": "ISuperchainPointsRaffleFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1145,
              "linearizedBaseContracts": [
                1145,
                1136,
                1130
              ],
              "name": "ISuperchainPointsRaffleFactory",
              "nameLocation": "354:30:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1141,
                    "nodeType": "StructuredDocumentation",
                    "src": "477:65:10",
                    "text": "@notice Checks previous raffle state and creates a new raffle"
                  },
                  "functionSelector": "485ac2a7",
                  "id": 1144,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createRaffle",
                  "nameLocation": "556:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "568:2:10"
                  },
                  "returnParameters": {
                    "id": 1143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "579:0:10"
                  },
                  "scope": 1145,
                  "src": "547:33:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1146,
              "src": "344:238:10",
              "usedErrors": [
                1129
              ],
              "usedEvents": [
                1135
              ]
            }
          ],
          "src": "32:551:10"
        },
        "id": 10
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "IERC1155": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "balanceOf(address,uint256)": "00fdd58e",
              "balanceOfBatch(address[],uint256[])": "4e1273f4",
              "isApprovedForAll(address,address)": "e985e9c5",
              "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
              "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "contracts/SuperchainPointsRaffle.sol": {
        "SuperchainPointsRaffle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_initialOwner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_superchainPoints",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC1155",
                  "name": "_superchainBadges",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeBlock",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeTimestamp",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSeed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoOngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoTicketsToClaim",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RaffleAlreadyStarted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SeedAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TicketNotFound",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "sealedSeed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleWinner",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TicketsClaimed",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "badgeAllocations",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimTickets",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "eligibleBadges",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "finished",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimableTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimedTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEligibleBadges",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPrizeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRevealedAfter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_sealedSeed",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_revealAfterTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badges",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badgeAllocation",
                  "type": "uint256[]"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isFinished",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "prize",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "revealAfterTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_seed",
                  "type": "bytes32"
                }
              ],
              "name": "revealWinner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sealedSeed",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storedBlockNumber",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainBadges",
              "outputs": [
                {
                  "internalType": "contract IERC1155",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainPoints",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ticketCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "tickets",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "ticketsClaimed",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "winner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_476": {
                  "entryPoint": null,
                  "id": 476,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 168,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory": {
                  "entryPoint": 272,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 248,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:909:11",
                    "nodeType": "YulBlock",
                    "src": "0:909:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "59:86:11",
                          "nodeType": "YulBlock",
                          "src": "59:86:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "123:16:11",
                                "nodeType": "YulBlock",
                                "src": "123:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "132:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "132:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "135:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "135:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "125:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:6:11"
                                      },
                                      "nativeSrc": "125:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "125:12:11"
                                    },
                                    "nativeSrc": "125:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "125:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "82:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "93:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "108:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "108:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "113:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "113:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "104:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "104:3:11"
                                                },
                                                "nativeSrc": "104:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "104:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "117:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "117:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "100:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "100:3:11"
                                            },
                                            "nativeSrc": "100:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "100:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "89:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:11"
                                        },
                                        "nativeSrc": "89:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "79:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:11"
                                    },
                                    "nativeSrc": "79:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "72:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:11"
                                },
                                "nativeSrc": "72:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "72:50:11"
                              },
                              "nativeSrc": "69:70:11",
                              "nodeType": "YulIf",
                              "src": "69:70:11"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nativeSrc": "14:131:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "48:5:11",
                            "nodeType": "YulTypedName",
                            "src": "48:5:11",
                            "type": ""
                          }
                        ],
                        "src": "14:131:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "295:404:11",
                          "nodeType": "YulBlock",
                          "src": "295:404:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "341:16:11",
                                "nodeType": "YulBlock",
                                "src": "341:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "350:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "350:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "353:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "353:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "343:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "343:6:11"
                                      },
                                      "nativeSrc": "343:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "343:12:11"
                                    },
                                    "nativeSrc": "343:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "343:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "316:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "316:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "325:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "325:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "312:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "312:3:11"
                                    },
                                    "nativeSrc": "312:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "312:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "337:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "337:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "308:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:3:11"
                                },
                                "nativeSrc": "308:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "308:32:11"
                              },
                              "nativeSrc": "305:52:11",
                              "nodeType": "YulIf",
                              "src": "305:52:11"
                            },
                            {
                              "nativeSrc": "366:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "366:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "385:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "385:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "379:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:5:11"
                                },
                                "nativeSrc": "379:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "379:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "370:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "370:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "429:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "429:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "404:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:24:11"
                                },
                                "nativeSrc": "404:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "404:31:11"
                              },
                              "nativeSrc": "404:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "404:31:11"
                            },
                            {
                              "nativeSrc": "444:15:11",
                              "nodeType": "YulAssignment",
                              "src": "444:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "454:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "454:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "444:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "468:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "468:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "493:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "493:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "504:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "504:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "489:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:3:11"
                                    },
                                    "nativeSrc": "489:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "483:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "483:5:11"
                                },
                                "nativeSrc": "483:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "483:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "472:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "472:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "542:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "542:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "517:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "517:24:11"
                                },
                                "nativeSrc": "517:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "517:33:11"
                              },
                              "nativeSrc": "517:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "517:33:11"
                            },
                            {
                              "nativeSrc": "559:17:11",
                              "nodeType": "YulAssignment",
                              "src": "559:17:11",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "569:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "569:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "559:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "559:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "585:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "585:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "610:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "610:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "621:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "621:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "606:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "606:3:11"
                                    },
                                    "nativeSrc": "606:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "606:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "600:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "600:5:11"
                                },
                                "nativeSrc": "600:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "600:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "589:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "589:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nativeSrc": "659:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "659:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "634:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "634:24:11"
                                },
                                "nativeSrc": "634:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "634:33:11"
                              },
                              "nativeSrc": "634:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "634:33:11"
                            },
                            {
                              "nativeSrc": "676:17:11",
                              "nodeType": "YulAssignment",
                              "src": "676:17:11",
                              "value": {
                                "name": "value_2",
                                "nativeSrc": "686:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "686:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "676:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory",
                        "nativeSrc": "150:549:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "245:9:11",
                            "nodeType": "YulTypedName",
                            "src": "245:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "256:7:11",
                            "nodeType": "YulTypedName",
                            "src": "256:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "268:6:11",
                            "nodeType": "YulTypedName",
                            "src": "268:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "276:6:11",
                            "nodeType": "YulTypedName",
                            "src": "276:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "284:6:11",
                            "nodeType": "YulTypedName",
                            "src": "284:6:11",
                            "type": ""
                          }
                        ],
                        "src": "150:549:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "805:102:11",
                          "nodeType": "YulBlock",
                          "src": "805:102:11",
                          "statements": [
                            {
                              "nativeSrc": "815:26:11",
                              "nodeType": "YulAssignment",
                              "src": "815:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "827:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "838:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "838:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "823:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "823:3:11"
                                },
                                "nativeSrc": "823:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "823:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "815:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "857:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "872:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "872:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "888:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "888:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "893:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "893:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "884:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "884:3:11"
                                            },
                                            "nativeSrc": "884:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "884:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "897:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "897:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "880:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "880:3:11"
                                        },
                                        "nativeSrc": "880:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "880:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "868:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "868:3:11"
                                    },
                                    "nativeSrc": "868:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "868:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "850:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "850:6:11"
                                },
                                "nativeSrc": "850:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "850:51:11"
                              },
                              "nativeSrc": "850:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "850:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "704:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "774:9:11",
                            "nodeType": "YulTypedName",
                            "src": "774:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "785:6:11",
                            "nodeType": "YulTypedName",
                            "src": "785:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "796:4:11",
                            "nodeType": "YulTypedName",
                            "src": "796:4:11",
                            "type": ""
                          }
                        ],
                        "src": "704:203:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x107D CODESIZE SUB DUP1 PUSH2 0x107D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3D SWAP2 PUSH2 0x110 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75 DUP2 PUSH2 0xA8 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x15D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x130 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x141 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x152 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xF11 DUP1 PUSH2 0x16C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA94BD919 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD8C4A454 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD8C4A454 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE8A8EE28 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xECCA9C2E EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xCFBD900F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xD2A8C791 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x50B44712 GT PUSH2 0x12B JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x56C77EBE EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x6DC3AE8F EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xFE85616 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x31E54A2E EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x31F6A017 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x4639545F EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x20E PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x181 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x264 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x370 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP6 DUP2 SSTORE PUSH2 0x3BF SWAP1 NUMBER SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E6 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x424 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4BC JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x443 JUMPI PUSH2 0x443 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x461 JUMPI PUSH2 0x461 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x428 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x59D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5E7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x62E PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x638 PUSH1 0x0 PUSH2 0xB89 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x65C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x685 CALLER PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST DUP2 PUSH1 0x8 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x6AC JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x70C SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x743 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x756 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x778 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD NUMBER LT ISZERO PUSH2 0x7DB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x804 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3A4C7FB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x89E SWAP1 DUP5 PUSH2 0xE8D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xA9059CBB SWAP5 PUSH2 0x925 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 ADD PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x944 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x968 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x9C8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x5 SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP3 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xEAF JUMP JUMPDEST GT ISZERO PUSH2 0xAEB JUMPI DUP2 PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA97 JUMPI PUSH2 0xA97 PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xACE JUMPI PUSH2 0xACE PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9DA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB17 SWAP1 DUP3 PUSH2 0xEC8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB26 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB50 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0xB59 DUP2 PUSH2 0xB89 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x638 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xC14 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC14 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBF9 JUMP JUMPDEST POP PUSH2 0xC20 SWAP3 SWAP2 POP PUSH2 0xC24 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA3 PUSH2 0xC62 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xD0D JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCF5 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD67 DUP9 DUP3 DUP10 ADD PUSH2 0xC78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD90 DUP9 DUP3 DUP10 ADD PUSH2 0xC78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD5 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDB7 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xE0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xE0D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xAB541225FB1563F8CA915666EC195C2DE3C74288D56C84B4FBB DUP7 JUMP CODESIZE 0xC4 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
              "sourceMap": "506:5863:7:-:0;;;603:5;580:28;;-1:-1:-1;;;;614:33:7;;;1344:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1471:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;850:51:11;823:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1496:16:7::1;:36:::0;;-1:-1:-1;;;;;1496:36:7;;::::1;-1:-1:-1::0;;;;;;1496:36:7;;::::1;;::::0;;;1542:16:::1;:36:::0;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;506:5863:7;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:131:11:-;-1:-1:-1;;;;;89:31:11;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:549::-;268:6;276;284;337:2;325:9;316:7;312:23;308:32;305:52;;;353:1;350;343:12;305:52;385:9;379:16;404:31;429:5;404:31;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:33:11;483:25;517:33;:::i;:::-;621:2;606:18;;600:25;569:7;;-1:-1:-1;634:33:11;600:25;634:33;:::i;:::-;686:7;676:17;;;150:549;;;;;:::o;704:203::-;506:5863:7;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_84": {
                  "entryPoint": 2908,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_368": {
                  "entryPoint": null,
                  "id": 368,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 2953,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@badgeAllocations_452": {
                  "entryPoint": null,
                  "id": 452,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@claimTickets_773": {
                  "entryPoint": 1594,
                  "id": 773,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@eligibleBadges_448": {
                  "entryPoint": 1541,
                  "id": 448,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@finished_416": {
                  "entryPoint": null,
                  "id": 416,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getClaimableTickets_833": {
                  "entryPoint": 2517,
                  "id": 833,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getClaimedTickets_846": {
                  "entryPoint": null,
                  "id": 846,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getEligibleBadges_874": {
                  "entryPoint": 1453,
                  "id": 874,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getPrizeAmount_864": {
                  "entryPoint": null,
                  "id": 864,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getRevealedAfter_892": {
                  "entryPoint": null,
                  "id": 892,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getTotalTickets_855": {
                  "entryPoint": null,
                  "id": 855,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@initialize_593": {
                  "entryPoint": 872,
                  "id": 593,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "@isFinished_883": {
                  "entryPoint": null,
                  "id": 883,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@prize_433": {
                  "entryPoint": null,
                  "id": 433,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@renounceOwnership_98": {
                  "entryPoint": 1574,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@revealAfterTimestamp_425": {
                  "entryPoint": null,
                  "id": 425,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@revealWinner_706": {
                  "entryPoint": 1870,
                  "id": 706,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@sealedSeed_421": {
                  "entryPoint": null,
                  "id": 421,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@storedBlockNumber_423": {
                  "entryPoint": null,
                  "id": 423,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainBadges_431": {
                  "entryPoint": null,
                  "id": 431,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainPoints_428": {
                  "entryPoint": null,
                  "id": 428,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@ticketCount_437": {
                  "entryPoint": null,
                  "id": 437,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@ticketsClaimed_445": {
                  "entryPoint": null,
                  "id": 445,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@tickets_441": {
                  "entryPoint": null,
                  "id": 441,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_126": {
                  "entryPoint": 2846,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@winner_435": {
                  "entryPoint": null,
                  "id": 435,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_array_uint256_dyn": {
                  "entryPoint": 3192,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 3129,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 3666,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32t_uint256t_uint256t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 3351,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 3552,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 3759,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 3577,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 3700,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 3485,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 3619,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 3784,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mod_t_uint256": {
                  "entryPoint": 3725,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3597,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 3644,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 3170,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:7303:11",
                    "nodeType": "YulBlock",
                    "src": "0:7303:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "115:76:11",
                          "nodeType": "YulBlock",
                          "src": "115:76:11",
                          "statements": [
                            {
                              "nativeSrc": "125:26:11",
                              "nodeType": "YulAssignment",
                              "src": "125:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "137:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "148:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "133:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:11"
                                },
                                "nativeSrc": "133:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "125:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "167:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "178:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "160:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:11"
                                },
                                "nativeSrc": "160:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:11"
                              },
                              "nativeSrc": "160:25:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "14:177:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "84:9:11",
                            "nodeType": "YulTypedName",
                            "src": "84:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "95:6:11",
                            "nodeType": "YulTypedName",
                            "src": "95:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "106:4:11",
                            "nodeType": "YulTypedName",
                            "src": "106:4:11",
                            "type": ""
                          }
                        ],
                        "src": "14:177:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "266:216:11",
                          "nodeType": "YulBlock",
                          "src": "266:216:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "312:16:11",
                                "nodeType": "YulBlock",
                                "src": "312:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "321:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "321:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "324:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "324:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "314:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "314:6:11"
                                      },
                                      "nativeSrc": "314:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "314:12:11"
                                    },
                                    "nativeSrc": "314:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "314:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "287:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "287:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "296:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "296:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "283:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "283:3:11"
                                    },
                                    "nativeSrc": "283:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "283:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "308:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "308:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "279:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "279:3:11"
                                },
                                "nativeSrc": "279:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "279:32:11"
                              },
                              "nativeSrc": "276:52:11",
                              "nodeType": "YulIf",
                              "src": "276:52:11"
                            },
                            {
                              "nativeSrc": "337:36:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "337:36:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "363:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "363:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "350:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "350:12:11"
                                },
                                "nativeSrc": "350:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "350:23:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "341:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "341:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "436:16:11",
                                "nodeType": "YulBlock",
                                "src": "436:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "445:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "445:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "448:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "448:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "438:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "438:6:11"
                                      },
                                      "nativeSrc": "438:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "438:12:11"
                                    },
                                    "nativeSrc": "438:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "438:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "395:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "395:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "406:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "406:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "421:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "421:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "426:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "426:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "417:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "417:3:11"
                                                },
                                                "nativeSrc": "417:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "417:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "430:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "430:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "413:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "413:3:11"
                                            },
                                            "nativeSrc": "413:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "413:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "402:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "402:3:11"
                                        },
                                        "nativeSrc": "402:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "402:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "392:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "392:2:11"
                                    },
                                    "nativeSrc": "392:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "392:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "385:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "385:6:11"
                                },
                                "nativeSrc": "385:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "385:50:11"
                              },
                              "nativeSrc": "382:70:11",
                              "nodeType": "YulIf",
                              "src": "382:70:11"
                            },
                            {
                              "nativeSrc": "461:15:11",
                              "nodeType": "YulAssignment",
                              "src": "461:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "471:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "471:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "461:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "461:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "196:286:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "232:9:11",
                            "nodeType": "YulTypedName",
                            "src": "232:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "243:7:11",
                            "nodeType": "YulTypedName",
                            "src": "243:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "255:6:11",
                            "nodeType": "YulTypedName",
                            "src": "255:6:11",
                            "type": ""
                          }
                        ],
                        "src": "196:286:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "519:95:11",
                          "nodeType": "YulBlock",
                          "src": "519:95:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "536:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "536:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "543:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "543:3:11",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "548:10:11",
                                        "nodeType": "YulLiteral",
                                        "src": "548:10:11",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "539:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "539:3:11"
                                    },
                                    "nativeSrc": "539:20:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "539:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "529:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "529:6:11"
                                },
                                "nativeSrc": "529:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "529:31:11"
                              },
                              "nativeSrc": "529:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "529:31:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "576:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "576:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "579:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "579:4:11",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "569:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "569:6:11"
                                },
                                "nativeSrc": "569:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "569:15:11"
                              },
                              "nativeSrc": "569:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "569:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "600:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "600:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "603:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "603:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "593:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "593:6:11"
                                },
                                "nativeSrc": "593:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "593:15:11"
                              },
                              "nativeSrc": "593:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "593:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "487:127:11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "487:127:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "683:890:11",
                          "nodeType": "YulBlock",
                          "src": "683:890:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "732:16:11",
                                "nodeType": "YulBlock",
                                "src": "732:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "741:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "741:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "744:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "744:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "734:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "734:6:11"
                                      },
                                      "nativeSrc": "734:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "734:12:11"
                                    },
                                    "nativeSrc": "734:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "734:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "711:6:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "711:6:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "719:4:11",
                                            "nodeType": "YulLiteral",
                                            "src": "719:4:11",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "707:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "707:3:11"
                                        },
                                        "nativeSrc": "707:17:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "707:17:11"
                                      },
                                      {
                                        "name": "end",
                                        "nativeSrc": "726:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "726:3:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "703:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "703:3:11"
                                    },
                                    "nativeSrc": "703:27:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "703:27:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "696:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "696:6:11"
                                },
                                "nativeSrc": "696:35:11",
                                "nodeType": "YulFunctionCall",
                                "src": "696:35:11"
                              },
                              "nativeSrc": "693:55:11",
                              "nodeType": "YulIf",
                              "src": "693:55:11"
                            },
                            {
                              "nativeSrc": "757:34:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "757:34:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "784:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "784:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "771:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "771:12:11"
                                },
                                "nativeSrc": "771:20:11",
                                "nodeType": "YulFunctionCall",
                                "src": "771:20:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "761:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "761:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "834:22:11",
                                "nodeType": "YulBlock",
                                "src": "834:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "836:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "836:16:11"
                                      },
                                      "nativeSrc": "836:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "836:18:11"
                                    },
                                    "nativeSrc": "836:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "836:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "806:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "806:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "814:18:11",
                                    "nodeType": "YulLiteral",
                                    "src": "814:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "803:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "803:2:11"
                                },
                                "nativeSrc": "803:30:11",
                                "nodeType": "YulFunctionCall",
                                "src": "803:30:11"
                              },
                              "nativeSrc": "800:56:11",
                              "nodeType": "YulIf",
                              "src": "800:56:11"
                            },
                            {
                              "nativeSrc": "865:24:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "865:24:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "879:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "879:1:11",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "882:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "882:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "875:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "875:3:11"
                                },
                                "nativeSrc": "875:14:11",
                                "nodeType": "YulFunctionCall",
                                "src": "875:14:11"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "869:2:11",
                                  "nodeType": "YulTypedName",
                                  "src": "869:2:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "898:23:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "898:23:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "918:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "918:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "912:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "912:5:11"
                                },
                                "nativeSrc": "912:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "912:9:11"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "902:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "902:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "930:56:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "930:56:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "952:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "952:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "968:2:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "968:2:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "972:2:11",
                                            "nodeType": "YulLiteral",
                                            "src": "972:2:11",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "964:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "964:3:11"
                                        },
                                        "nativeSrc": "964:11:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "964:11:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "981:2:11",
                                            "nodeType": "YulLiteral",
                                            "src": "981:2:11",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "977:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "977:3:11"
                                        },
                                        "nativeSrc": "977:7:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "977:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "960:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "960:3:11"
                                    },
                                    "nativeSrc": "960:25:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "960:25:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "948:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "948:3:11"
                                },
                                "nativeSrc": "948:38:11",
                                "nodeType": "YulFunctionCall",
                                "src": "948:38:11"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "934:10:11",
                                  "nodeType": "YulTypedName",
                                  "src": "934:10:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1061:22:11",
                                "nodeType": "YulBlock",
                                "src": "1061:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "1063:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1063:16:11"
                                      },
                                      "nativeSrc": "1063:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1063:18:11"
                                    },
                                    "nativeSrc": "1063:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1063:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "1004:10:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1004:10:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1016:18:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1016:18:11",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "1001:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1001:2:11"
                                    },
                                    "nativeSrc": "1001:34:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1001:34:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "1040:10:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1040:10:11"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "1052:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1052:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "1037:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1037:2:11"
                                    },
                                    "nativeSrc": "1037:22:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1037:22:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "998:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "998:2:11"
                                },
                                "nativeSrc": "998:62:11",
                                "nodeType": "YulFunctionCall",
                                "src": "998:62:11"
                              },
                              "nativeSrc": "995:88:11",
                              "nodeType": "YulIf",
                              "src": "995:88:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1099:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1099:2:11",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "1103:10:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1103:10:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1092:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1092:6:11"
                                },
                                "nativeSrc": "1092:22:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1092:22:11"
                              },
                              "nativeSrc": "1092:22:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1092:22:11"
                            },
                            {
                              "nativeSrc": "1123:17:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1123:17:11",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "1134:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "1134:6:11"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nativeSrc": "1127:3:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1127:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "1156:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1156:6:11"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "1164:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1164:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1149:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1149:6:11"
                                },
                                "nativeSrc": "1149:22:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1149:22:11"
                              },
                              "nativeSrc": "1149:22:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1149:22:11"
                            },
                            {
                              "nativeSrc": "1180:24:11",
                              "nodeType": "YulAssignment",
                              "src": "1180:24:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "1191:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1191:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1199:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1199:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1187:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1187:3:11"
                                },
                                "nativeSrc": "1187:17:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1187:17:11"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nativeSrc": "1180:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1180:3:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1213:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1213:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "1235:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1235:6:11"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "1243:2:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1243:2:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1231:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1231:3:11"
                                    },
                                    "nativeSrc": "1231:15:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1231:15:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1248:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1248:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1227:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1227:3:11"
                                },
                                "nativeSrc": "1227:26:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1227:26:11"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nativeSrc": "1217:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1217:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1281:16:11",
                                "nodeType": "YulBlock",
                                "src": "1281:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1290:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1290:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1293:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1293:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1283:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1283:6:11"
                                      },
                                      "nativeSrc": "1283:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1283:12:11"
                                    },
                                    "nativeSrc": "1283:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1283:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nativeSrc": "1268:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1268:6:11"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "1276:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1276:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1265:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1265:2:11"
                                },
                                "nativeSrc": "1265:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1265:15:11"
                              },
                              "nativeSrc": "1262:35:11",
                              "nodeType": "YulIf",
                              "src": "1262:35:11"
                            },
                            {
                              "nativeSrc": "1306:28:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1306:28:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1321:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1321:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1329:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1329:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1317:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1317:3:11"
                                },
                                "nativeSrc": "1317:17:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1317:17:11"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nativeSrc": "1310:3:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1310:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1401:142:11",
                                "nodeType": "YulBlock",
                                "src": "1401:142:11",
                                "statements": [
                                  {
                                    "nativeSrc": "1415:14:11",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1415:14:11",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "1428:1:11",
                                      "nodeType": "YulLiteral",
                                      "src": "1428:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1419:5:11",
                                        "nodeType": "YulTypedName",
                                        "src": "1419:5:11",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "1442:26:11",
                                    "nodeType": "YulAssignment",
                                    "src": "1442:26:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nativeSrc": "1464:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1464:3:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nativeSrc": "1451:12:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1451:12:11"
                                      },
                                      "nativeSrc": "1451:17:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1451:17:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1442:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1442:5:11"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nativeSrc": "1488:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1488:3:11"
                                        },
                                        {
                                          "name": "value",
                                          "nativeSrc": "1493:5:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1493:5:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "1481:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1481:6:11"
                                      },
                                      "nativeSrc": "1481:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1481:18:11"
                                    },
                                    "nativeSrc": "1481:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1481:18:11"
                                  },
                                  {
                                    "nativeSrc": "1512:21:11",
                                    "nodeType": "YulAssignment",
                                    "src": "1512:21:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nativeSrc": "1523:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1523:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1528:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1528:4:11",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1519:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1519:3:11"
                                      },
                                      "nativeSrc": "1519:14:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1519:14:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nativeSrc": "1512:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1512:3:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "1354:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1354:3:11"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nativeSrc": "1359:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1359:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "1351:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1351:2:11"
                                },
                                "nativeSrc": "1351:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1351:15:11"
                              },
                              "nativeSrc": "1343:200:11",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "1367:25:11",
                                "nodeType": "YulBlock",
                                "src": "1367:25:11",
                                "statements": [
                                  {
                                    "nativeSrc": "1369:21:11",
                                    "nodeType": "YulAssignment",
                                    "src": "1369:21:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nativeSrc": "1380:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1380:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1385:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1385:4:11",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1376:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1376:3:11"
                                      },
                                      "nativeSrc": "1376:14:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1376:14:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nativeSrc": "1369:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1369:3:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "1347:3:11",
                                "nodeType": "YulBlock",
                                "src": "1347:3:11",
                                "statements": []
                              },
                              "src": "1343:200:11"
                            },
                            {
                              "nativeSrc": "1552:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1552:15:11",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "1561:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "1561:6:11"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nativeSrc": "1552:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1552:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_uint256_dyn",
                        "nativeSrc": "619:954:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "657:6:11",
                            "nodeType": "YulTypedName",
                            "src": "657:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "665:3:11",
                            "nodeType": "YulTypedName",
                            "src": "665:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nativeSrc": "673:5:11",
                            "nodeType": "YulTypedName",
                            "src": "673:5:11",
                            "type": ""
                          }
                        ],
                        "src": "619:954:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1766:758:11",
                          "nodeType": "YulBlock",
                          "src": "1766:758:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1813:16:11",
                                "nodeType": "YulBlock",
                                "src": "1813:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1822:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1822:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1825:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1825:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1815:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1815:6:11"
                                      },
                                      "nativeSrc": "1815:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1815:12:11"
                                    },
                                    "nativeSrc": "1815:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1815:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1787:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1787:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1796:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1796:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1783:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1783:3:11"
                                    },
                                    "nativeSrc": "1783:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1783:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1808:3:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1808:3:11",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1779:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1779:3:11"
                                },
                                "nativeSrc": "1779:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1779:33:11"
                              },
                              "nativeSrc": "1776:53:11",
                              "nodeType": "YulIf",
                              "src": "1776:53:11"
                            },
                            {
                              "nativeSrc": "1838:14:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1838:14:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1851:1:11",
                                "nodeType": "YulLiteral",
                                "src": "1851:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1842:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1842:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1861:32:11",
                              "nodeType": "YulAssignment",
                              "src": "1861:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1883:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1883:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1870:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1870:12:11"
                                },
                                "nativeSrc": "1870:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1870:23:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1861:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1861:5:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1902:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1902:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1912:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "1912:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1902:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1902:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1926:16:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1926:16:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1941:1:11",
                                "nodeType": "YulLiteral",
                                "src": "1941:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "1930:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1930:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1951:43:11",
                              "nodeType": "YulAssignment",
                              "src": "1951:43:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1979:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1979:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1990:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1990:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1975:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1975:3:11"
                                    },
                                    "nativeSrc": "1975:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1975:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1962:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1962:12:11"
                                },
                                "nativeSrc": "1962:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1962:32:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "1951:7:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1951:7:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2003:17:11",
                              "nodeType": "YulAssignment",
                              "src": "2003:17:11",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "2013:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "2013:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2003:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2003:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2029:16:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2029:16:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2044:1:11",
                                "nodeType": "YulLiteral",
                                "src": "2044:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "2033:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2033:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2054:43:11",
                              "nodeType": "YulAssignment",
                              "src": "2054:43:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2082:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2082:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2093:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "2093:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2078:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2078:3:11"
                                    },
                                    "nativeSrc": "2078:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2078:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2065:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2065:12:11"
                                },
                                "nativeSrc": "2065:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2065:32:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "2054:7:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2054:7:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2106:17:11",
                              "nodeType": "YulAssignment",
                              "src": "2106:17:11",
                              "value": {
                                "name": "value_2",
                                "nativeSrc": "2116:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "2116:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "2106:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2106:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2132:46:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2132:46:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2163:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2163:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2174:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "2174:2:11",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2159:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2159:3:11"
                                    },
                                    "nativeSrc": "2159:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2159:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2146:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2146:12:11"
                                },
                                "nativeSrc": "2146:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2146:32:11"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "2136:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2136:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2221:16:11",
                                "nodeType": "YulBlock",
                                "src": "2221:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2230:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2230:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2233:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2233:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2223:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2223:6:11"
                                      },
                                      "nativeSrc": "2223:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2223:12:11"
                                    },
                                    "nativeSrc": "2223:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2223:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "2193:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2193:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2201:18:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2201:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2190:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2190:2:11"
                                },
                                "nativeSrc": "2190:30:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2190:30:11"
                              },
                              "nativeSrc": "2187:50:11",
                              "nodeType": "YulIf",
                              "src": "2187:50:11"
                            },
                            {
                              "nativeSrc": "2246:71:11",
                              "nodeType": "YulAssignment",
                              "src": "2246:71:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2289:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2289:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "2300:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2300:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2285:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2285:3:11"
                                    },
                                    "nativeSrc": "2285:22:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2285:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "2309:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2309:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nativeSrc": "2256:28:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2256:28:11"
                                },
                                "nativeSrc": "2256:61:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2256:61:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nativeSrc": "2246:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2246:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2326:49:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2326:49:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2359:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2359:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2370:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "2370:3:11",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2355:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2355:3:11"
                                    },
                                    "nativeSrc": "2355:19:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2355:19:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2342:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2342:12:11"
                                },
                                "nativeSrc": "2342:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2342:33:11"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nativeSrc": "2330:8:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2330:8:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2420:16:11",
                                "nodeType": "YulBlock",
                                "src": "2420:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2429:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2429:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2432:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2432:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2422:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2422:6:11"
                                      },
                                      "nativeSrc": "2422:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2422:12:11"
                                    },
                                    "nativeSrc": "2422:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2422:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nativeSrc": "2390:8:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2390:8:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2400:18:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2400:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2387:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2387:2:11"
                                },
                                "nativeSrc": "2387:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2387:32:11"
                              },
                              "nativeSrc": "2384:52:11",
                              "nodeType": "YulIf",
                              "src": "2384:52:11"
                            },
                            {
                              "nativeSrc": "2445:73:11",
                              "nodeType": "YulAssignment",
                              "src": "2445:73:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2488:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2488:9:11"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nativeSrc": "2499:8:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2499:8:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2484:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2484:3:11"
                                    },
                                    "nativeSrc": "2484:24:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2484:24:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "2510:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2510:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nativeSrc": "2455:28:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2455:28:11"
                                },
                                "nativeSrc": "2455:63:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2455:63:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nativeSrc": "2445:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2445:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256t_uint256t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
                        "nativeSrc": "1578:946:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1700:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1700:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1711:7:11",
                            "nodeType": "YulTypedName",
                            "src": "1711:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1723:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1723:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1731:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1731:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1739:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1739:6:11",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nativeSrc": "1747:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1747:6:11",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nativeSrc": "1755:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1755:6:11",
                            "type": ""
                          }
                        ],
                        "src": "1578:946:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "2680:460:11",
                          "nodeType": "YulBlock",
                          "src": "2680:460:11",
                          "statements": [
                            {
                              "nativeSrc": "2690:32:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2690:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2708:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2708:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2719:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2719:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2704:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2704:3:11"
                                },
                                "nativeSrc": "2704:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2704:18:11"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nativeSrc": "2694:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2694:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2738:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2738:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2749:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2749:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2731:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2731:6:11"
                                },
                                "nativeSrc": "2731:21:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2731:21:11"
                              },
                              "nativeSrc": "2731:21:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "2731:21:11"
                            },
                            {
                              "nativeSrc": "2761:17:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2761:17:11",
                              "value": {
                                "name": "tail_1",
                                "nativeSrc": "2772:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "2772:6:11"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "2765:3:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2765:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2787:27:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2787:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "2807:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2807:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2801:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2801:5:11"
                                },
                                "nativeSrc": "2801:13:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2801:13:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "2791:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2791:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nativeSrc": "2830:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2830:6:11"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "2838:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2838:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2823:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2823:6:11"
                                },
                                "nativeSrc": "2823:22:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2823:22:11"
                              },
                              "nativeSrc": "2823:22:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "2823:22:11"
                            },
                            {
                              "nativeSrc": "2854:25:11",
                              "nodeType": "YulAssignment",
                              "src": "2854:25:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2865:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2865:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2876:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2876:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2861:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2861:3:11"
                                },
                                "nativeSrc": "2861:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2861:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "2854:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2854:3:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2888:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2888:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "2906:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2906:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2914:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2914:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2902:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2902:3:11"
                                },
                                "nativeSrc": "2902:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2902:15:11"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nativeSrc": "2892:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2892:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2926:10:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2926:10:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2935:1:11",
                                "nodeType": "YulLiteral",
                                "src": "2935:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "2930:1:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2930:1:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2994:120:11",
                                "nodeType": "YulBlock",
                                "src": "2994:120:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "3015:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3015:3:11"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nativeSrc": "3026:6:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "3026:6:11"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "3020:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "3020:5:11"
                                          },
                                          "nativeSrc": "3020:13:11",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3020:13:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3008:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3008:6:11"
                                      },
                                      "nativeSrc": "3008:26:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3008:26:11"
                                    },
                                    "nativeSrc": "3008:26:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3008:26:11"
                                  },
                                  {
                                    "nativeSrc": "3047:19:11",
                                    "nodeType": "YulAssignment",
                                    "src": "3047:19:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "3058:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3058:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3063:2:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3063:2:11",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3054:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3054:3:11"
                                      },
                                      "nativeSrc": "3054:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3054:12:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "3047:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3047:3:11"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3079:25:11",
                                    "nodeType": "YulAssignment",
                                    "src": "3079:25:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nativeSrc": "3093:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3093:6:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3101:2:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3101:2:11",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3089:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3089:3:11"
                                      },
                                      "nativeSrc": "3089:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3089:15:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nativeSrc": "3079:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3079:6:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "2956:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2956:1:11"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "2959:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2959:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "2953:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2953:2:11"
                                },
                                "nativeSrc": "2953:13:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2953:13:11"
                              },
                              "nativeSrc": "2945:169:11",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "2967:18:11",
                                "nodeType": "YulBlock",
                                "src": "2967:18:11",
                                "statements": [
                                  {
                                    "nativeSrc": "2969:14:11",
                                    "nodeType": "YulAssignment",
                                    "src": "2969:14:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "2978:1:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2978:1:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2981:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2981:1:11",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2974:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2974:3:11"
                                      },
                                      "nativeSrc": "2974:9:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2974:9:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "2969:1:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2969:1:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "2949:3:11",
                                "nodeType": "YulBlock",
                                "src": "2949:3:11",
                                "statements": []
                              },
                              "src": "2945:169:11"
                            },
                            {
                              "nativeSrc": "3123:11:11",
                              "nodeType": "YulAssignment",
                              "src": "3123:11:11",
                              "value": {
                                "name": "pos",
                                "nativeSrc": "3131:3:11",
                                "nodeType": "YulIdentifier",
                                "src": "3131:3:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3123:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3123:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                        "nativeSrc": "2529:611:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2649:9:11",
                            "nodeType": "YulTypedName",
                            "src": "2649:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2660:6:11",
                            "nodeType": "YulTypedName",
                            "src": "2660:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2671:4:11",
                            "nodeType": "YulTypedName",
                            "src": "2671:4:11",
                            "type": ""
                          }
                        ],
                        "src": "2529:611:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3215:156:11",
                          "nodeType": "YulBlock",
                          "src": "3215:156:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3261:16:11",
                                "nodeType": "YulBlock",
                                "src": "3261:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3270:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3270:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3273:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3273:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3263:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3263:6:11"
                                      },
                                      "nativeSrc": "3263:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3263:12:11"
                                    },
                                    "nativeSrc": "3263:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3263:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3236:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3236:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3245:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3245:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3232:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3232:3:11"
                                    },
                                    "nativeSrc": "3232:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3232:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3257:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3257:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3228:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3228:3:11"
                                },
                                "nativeSrc": "3228:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3228:32:11"
                              },
                              "nativeSrc": "3225:52:11",
                              "nodeType": "YulIf",
                              "src": "3225:52:11"
                            },
                            {
                              "nativeSrc": "3286:14:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3286:14:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3299:1:11",
                                "nodeType": "YulLiteral",
                                "src": "3299:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3290:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "3290:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3309:32:11",
                              "nodeType": "YulAssignment",
                              "src": "3309:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3331:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3331:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3318:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3318:12:11"
                                },
                                "nativeSrc": "3318:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3318:23:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3309:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3309:5:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3350:15:11",
                              "nodeType": "YulAssignment",
                              "src": "3350:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "3360:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "3360:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3350:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3350:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "3145:226:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3181:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3181:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3192:7:11",
                            "nodeType": "YulTypedName",
                            "src": "3192:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3204:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3204:6:11",
                            "type": ""
                          }
                        ],
                        "src": "3145:226:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3477:102:11",
                          "nodeType": "YulBlock",
                          "src": "3477:102:11",
                          "statements": [
                            {
                              "nativeSrc": "3487:26:11",
                              "nodeType": "YulAssignment",
                              "src": "3487:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3499:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3499:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3510:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3510:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3495:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3495:3:11"
                                },
                                "nativeSrc": "3495:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3495:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3487:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3487:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3529:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3529:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3544:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3544:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3560:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3560:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3565:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3565:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "3556:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "3556:3:11"
                                            },
                                            "nativeSrc": "3556:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3556:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3569:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "3569:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "3552:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3552:3:11"
                                        },
                                        "nativeSrc": "3552:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3552:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3540:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3540:3:11"
                                    },
                                    "nativeSrc": "3540:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3540:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3522:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3522:6:11"
                                },
                                "nativeSrc": "3522:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3522:51:11"
                              },
                              "nativeSrc": "3522:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "3522:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "3376:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3446:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3446:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3457:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3457:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3468:4:11",
                            "nodeType": "YulTypedName",
                            "src": "3468:4:11",
                            "type": ""
                          }
                        ],
                        "src": "3376:203:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3679:92:11",
                          "nodeType": "YulBlock",
                          "src": "3679:92:11",
                          "statements": [
                            {
                              "nativeSrc": "3689:26:11",
                              "nodeType": "YulAssignment",
                              "src": "3689:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3701:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3701:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3712:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3712:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3697:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3697:3:11"
                                },
                                "nativeSrc": "3697:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3697:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3689:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3689:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3731:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3731:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "3756:6:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "3756:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "3749:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3749:6:11"
                                        },
                                        "nativeSrc": "3749:14:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3749:14:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "3742:6:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3742:6:11"
                                    },
                                    "nativeSrc": "3742:22:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3742:22:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3724:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3724:6:11"
                                },
                                "nativeSrc": "3724:41:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3724:41:11"
                              },
                              "nativeSrc": "3724:41:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "3724:41:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "3584:187:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3648:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3648:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3659:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3659:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3670:4:11",
                            "nodeType": "YulTypedName",
                            "src": "3670:4:11",
                            "type": ""
                          }
                        ],
                        "src": "3584:187:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3893:102:11",
                          "nodeType": "YulBlock",
                          "src": "3893:102:11",
                          "statements": [
                            {
                              "nativeSrc": "3903:26:11",
                              "nodeType": "YulAssignment",
                              "src": "3903:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3915:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3915:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3926:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3926:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3911:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3911:3:11"
                                },
                                "nativeSrc": "3911:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3911:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3903:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3903:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3945:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3945:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3960:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3960:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3976:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3976:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3981:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3981:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "3972:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "3972:3:11"
                                            },
                                            "nativeSrc": "3972:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3972:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3985:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "3985:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "3968:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3968:3:11"
                                        },
                                        "nativeSrc": "3968:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3968:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3956:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3956:3:11"
                                    },
                                    "nativeSrc": "3956:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3956:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3938:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3938:6:11"
                                },
                                "nativeSrc": "3938:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3938:51:11"
                              },
                              "nativeSrc": "3938:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "3938:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed",
                        "nativeSrc": "3776:219:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3862:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3862:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3873:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3873:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3884:4:11",
                            "nodeType": "YulTypedName",
                            "src": "3884:4:11",
                            "type": ""
                          }
                        ],
                        "src": "3776:219:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4070:156:11",
                          "nodeType": "YulBlock",
                          "src": "4070:156:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "4116:16:11",
                                "nodeType": "YulBlock",
                                "src": "4116:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4125:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4125:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4128:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4128:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4118:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4118:6:11"
                                      },
                                      "nativeSrc": "4118:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4118:12:11"
                                    },
                                    "nativeSrc": "4118:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4118:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "4091:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4091:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4100:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4100:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "4087:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4087:3:11"
                                    },
                                    "nativeSrc": "4087:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4087:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4112:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4112:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "4083:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4083:3:11"
                                },
                                "nativeSrc": "4083:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4083:32:11"
                              },
                              "nativeSrc": "4080:52:11",
                              "nodeType": "YulIf",
                              "src": "4080:52:11"
                            },
                            {
                              "nativeSrc": "4141:14:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4141:14:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "4154:1:11",
                                "nodeType": "YulLiteral",
                                "src": "4154:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "4145:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "4145:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4164:32:11",
                              "nodeType": "YulAssignment",
                              "src": "4164:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4186:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4186:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "4173:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4173:12:11"
                                },
                                "nativeSrc": "4173:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4173:23:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "4164:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4164:5:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4205:15:11",
                              "nodeType": "YulAssignment",
                              "src": "4205:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "4215:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "4215:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "4205:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4205:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nativeSrc": "4000:226:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4036:9:11",
                            "nodeType": "YulTypedName",
                            "src": "4036:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "4047:7:11",
                            "nodeType": "YulTypedName",
                            "src": "4047:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "4059:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4059:6:11",
                            "type": ""
                          }
                        ],
                        "src": "4000:226:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4346:102:11",
                          "nodeType": "YulBlock",
                          "src": "4346:102:11",
                          "statements": [
                            {
                              "nativeSrc": "4356:26:11",
                              "nodeType": "YulAssignment",
                              "src": "4356:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4368:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4368:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4379:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4379:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4364:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4364:3:11"
                                },
                                "nativeSrc": "4364:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4364:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4356:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4356:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4398:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4398:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4413:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4413:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4429:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "4429:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4434:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "4434:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "4425:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "4425:3:11"
                                            },
                                            "nativeSrc": "4425:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4425:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4438:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "4438:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4421:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "4421:3:11"
                                        },
                                        "nativeSrc": "4421:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4421:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4409:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4409:3:11"
                                    },
                                    "nativeSrc": "4409:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4409:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4391:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4391:6:11"
                                },
                                "nativeSrc": "4391:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4391:51:11"
                              },
                              "nativeSrc": "4391:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4391:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed",
                        "nativeSrc": "4231:217:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4315:9:11",
                            "nodeType": "YulTypedName",
                            "src": "4315:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4326:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4326:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4337:4:11",
                            "nodeType": "YulTypedName",
                            "src": "4337:4:11",
                            "type": ""
                          }
                        ],
                        "src": "4231:217:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4554:76:11",
                          "nodeType": "YulBlock",
                          "src": "4554:76:11",
                          "statements": [
                            {
                              "nativeSrc": "4564:26:11",
                              "nodeType": "YulAssignment",
                              "src": "4564:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4576:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4576:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4587:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4587:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4572:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4572:3:11"
                                },
                                "nativeSrc": "4572:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4572:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4564:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4564:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4606:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4606:9:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "4617:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4617:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4599:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4599:6:11"
                                },
                                "nativeSrc": "4599:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4599:25:11"
                              },
                              "nativeSrc": "4599:25:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4599:25:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nativeSrc": "4453:177:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4523:9:11",
                            "nodeType": "YulTypedName",
                            "src": "4523:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4534:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4534:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4545:4:11",
                            "nodeType": "YulTypedName",
                            "src": "4545:4:11",
                            "type": ""
                          }
                        ],
                        "src": "4453:177:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4667:95:11",
                          "nodeType": "YulBlock",
                          "src": "4667:95:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4684:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4684:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4691:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4691:3:11",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4696:10:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4696:10:11",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "4687:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4687:3:11"
                                    },
                                    "nativeSrc": "4687:20:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4687:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4677:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4677:6:11"
                                },
                                "nativeSrc": "4677:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4677:31:11"
                              },
                              "nativeSrc": "4677:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4677:31:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4724:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4724:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4727:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4727:4:11",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4717:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4717:6:11"
                                },
                                "nativeSrc": "4717:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4717:15:11"
                              },
                              "nativeSrc": "4717:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4717:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4748:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4748:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4751:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4751:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "4741:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4741:6:11"
                                },
                                "nativeSrc": "4741:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4741:15:11"
                              },
                              "nativeSrc": "4741:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4741:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "4635:127:11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4635:127:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4815:77:11",
                          "nodeType": "YulBlock",
                          "src": "4815:77:11",
                          "statements": [
                            {
                              "nativeSrc": "4825:16:11",
                              "nodeType": "YulAssignment",
                              "src": "4825:16:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4836:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4836:1:11"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4839:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4839:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4832:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4832:3:11"
                                },
                                "nativeSrc": "4832:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4832:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "4825:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4825:3:11"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4864:22:11",
                                "nodeType": "YulBlock",
                                "src": "4864:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4866:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4866:16:11"
                                      },
                                      "nativeSrc": "4866:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4866:18:11"
                                    },
                                    "nativeSrc": "4866:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4866:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4856:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4856:1:11"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "4859:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4859:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4853:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4853:2:11"
                                },
                                "nativeSrc": "4853:10:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4853:10:11"
                              },
                              "nativeSrc": "4850:36:11",
                              "nodeType": "YulIf",
                              "src": "4850:36:11"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "4767:125:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4798:1:11",
                            "nodeType": "YulTypedName",
                            "src": "4798:1:11",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4801:1:11",
                            "nodeType": "YulTypedName",
                            "src": "4801:1:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "4807:3:11",
                            "nodeType": "YulTypedName",
                            "src": "4807:3:11",
                            "type": ""
                          }
                        ],
                        "src": "4767:125:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4929:95:11",
                          "nodeType": "YulBlock",
                          "src": "4929:95:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4946:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4946:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4953:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4953:3:11",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4958:10:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4958:10:11",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "4949:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4949:3:11"
                                    },
                                    "nativeSrc": "4949:20:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4949:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4939:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4939:6:11"
                                },
                                "nativeSrc": "4939:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4939:31:11"
                              },
                              "nativeSrc": "4939:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4939:31:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4986:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4986:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4989:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4989:4:11",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4979:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4979:6:11"
                                },
                                "nativeSrc": "4979:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4979:15:11"
                              },
                              "nativeSrc": "4979:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4979:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5010:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5010:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5013:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5013:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "5003:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5003:6:11"
                                },
                                "nativeSrc": "5003:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5003:15:11"
                              },
                              "nativeSrc": "5003:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5003:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nativeSrc": "4897:127:11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4897:127:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5186:214:11",
                          "nodeType": "YulBlock",
                          "src": "5186:214:11",
                          "statements": [
                            {
                              "nativeSrc": "5196:26:11",
                              "nodeType": "YulAssignment",
                              "src": "5196:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5208:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5208:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5219:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5219:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5204:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5204:3:11"
                                },
                                "nativeSrc": "5204:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5204:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5196:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5196:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5238:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5238:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5253:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5253:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5269:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5269:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5274:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5274:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5265:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "5265:3:11"
                                            },
                                            "nativeSrc": "5265:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5265:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5278:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "5278:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5261:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5261:3:11"
                                        },
                                        "nativeSrc": "5261:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5261:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5249:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5249:3:11"
                                    },
                                    "nativeSrc": "5249:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5249:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5231:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5231:6:11"
                                },
                                "nativeSrc": "5231:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5231:51:11"
                              },
                              "nativeSrc": "5231:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5231:51:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5302:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5302:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5313:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "5313:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5298:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5298:3:11"
                                    },
                                    "nativeSrc": "5298:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5298:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "5322:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5322:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5338:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5338:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5343:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5343:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5334:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "5334:3:11"
                                            },
                                            "nativeSrc": "5334:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5334:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5347:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "5347:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5330:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5330:3:11"
                                        },
                                        "nativeSrc": "5330:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5330:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5318:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5318:3:11"
                                    },
                                    "nativeSrc": "5318:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5318:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5291:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5291:6:11"
                                },
                                "nativeSrc": "5291:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5291:60:11"
                              },
                              "nativeSrc": "5291:60:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5291:60:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5371:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5371:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5382:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "5382:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5367:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5367:3:11"
                                    },
                                    "nativeSrc": "5367:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5367:18:11"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "5387:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5387:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5360:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5360:6:11"
                                },
                                "nativeSrc": "5360:34:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5360:34:11"
                              },
                              "nativeSrc": "5360:34:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5360:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "5029:371:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5139:9:11",
                            "nodeType": "YulTypedName",
                            "src": "5139:9:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "5150:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5150:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5158:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5158:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5166:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5166:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5177:4:11",
                            "nodeType": "YulTypedName",
                            "src": "5177:4:11",
                            "type": ""
                          }
                        ],
                        "src": "5029:371:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5483:199:11",
                          "nodeType": "YulBlock",
                          "src": "5483:199:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "5529:16:11",
                                "nodeType": "YulBlock",
                                "src": "5529:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5538:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5538:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5541:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5541:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5531:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5531:6:11"
                                      },
                                      "nativeSrc": "5531:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5531:12:11"
                                    },
                                    "nativeSrc": "5531:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5531:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "5504:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5504:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5513:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5513:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "5500:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5500:3:11"
                                    },
                                    "nativeSrc": "5500:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5500:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5525:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5525:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "5496:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5496:3:11"
                                },
                                "nativeSrc": "5496:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5496:32:11"
                              },
                              "nativeSrc": "5493:52:11",
                              "nodeType": "YulIf",
                              "src": "5493:52:11"
                            },
                            {
                              "nativeSrc": "5554:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "5554:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5573:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5573:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "5567:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5567:5:11"
                                },
                                "nativeSrc": "5567:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5567:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "5558:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "5558:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5636:16:11",
                                "nodeType": "YulBlock",
                                "src": "5636:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5645:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5645:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5648:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5648:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5638:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5638:6:11"
                                      },
                                      "nativeSrc": "5638:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5638:12:11"
                                    },
                                    "nativeSrc": "5638:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5638:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "5605:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5605:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "5626:5:11",
                                                "nodeType": "YulIdentifier",
                                                "src": "5626:5:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "5619:6:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "5619:6:11"
                                            },
                                            "nativeSrc": "5619:13:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5619:13:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "5612:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5612:6:11"
                                        },
                                        "nativeSrc": "5612:21:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5612:21:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "5602:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5602:2:11"
                                    },
                                    "nativeSrc": "5602:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5602:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "5595:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5595:6:11"
                                },
                                "nativeSrc": "5595:40:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5595:40:11"
                              },
                              "nativeSrc": "5592:60:11",
                              "nodeType": "YulIf",
                              "src": "5592:60:11"
                            },
                            {
                              "nativeSrc": "5661:15:11",
                              "nodeType": "YulAssignment",
                              "src": "5661:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "5671:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "5671:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "5661:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5661:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nativeSrc": "5405:277:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5449:9:11",
                            "nodeType": "YulTypedName",
                            "src": "5449:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "5460:7:11",
                            "nodeType": "YulTypedName",
                            "src": "5460:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "5472:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5472:6:11",
                            "type": ""
                          }
                        ],
                        "src": "5405:277:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5816:119:11",
                          "nodeType": "YulBlock",
                          "src": "5816:119:11",
                          "statements": [
                            {
                              "nativeSrc": "5826:26:11",
                              "nodeType": "YulAssignment",
                              "src": "5826:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5838:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5838:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5849:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5849:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5834:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5834:3:11"
                                },
                                "nativeSrc": "5834:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5834:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5826:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5826:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5868:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5868:9:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5879:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5879:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5861:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5861:6:11"
                                },
                                "nativeSrc": "5861:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5861:25:11"
                              },
                              "nativeSrc": "5861:25:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5861:25:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5906:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5906:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5917:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "5917:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5902:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5902:3:11"
                                    },
                                    "nativeSrc": "5902:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5902:18:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5922:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5922:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5895:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5895:6:11"
                                },
                                "nativeSrc": "5895:34:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5895:34:11"
                              },
                              "nativeSrc": "5895:34:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5895:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
                        "nativeSrc": "5687:248:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5777:9:11",
                            "nodeType": "YulTypedName",
                            "src": "5777:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5788:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5788:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5796:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5796:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5807:4:11",
                            "nodeType": "YulTypedName",
                            "src": "5807:4:11",
                            "type": ""
                          }
                        ],
                        "src": "5687:248:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6069:145:11",
                          "nodeType": "YulBlock",
                          "src": "6069:145:11",
                          "statements": [
                            {
                              "nativeSrc": "6079:26:11",
                              "nodeType": "YulAssignment",
                              "src": "6079:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6091:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6091:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6102:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "6102:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6087:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6087:3:11"
                                },
                                "nativeSrc": "6087:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6087:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "6079:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6079:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6121:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6121:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "6136:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6136:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "6152:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "6152:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "6157:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "6157:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "6148:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "6148:3:11"
                                            },
                                            "nativeSrc": "6148:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "6148:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6161:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "6161:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "6144:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "6144:3:11"
                                        },
                                        "nativeSrc": "6144:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6144:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "6132:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6132:3:11"
                                    },
                                    "nativeSrc": "6132:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6132:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6114:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6114:6:11"
                                },
                                "nativeSrc": "6114:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6114:51:11"
                              },
                              "nativeSrc": "6114:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6114:51:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6185:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6185:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6196:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "6196:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6181:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6181:3:11"
                                    },
                                    "nativeSrc": "6181:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6181:18:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "6201:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6201:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6174:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6174:6:11"
                                },
                                "nativeSrc": "6174:34:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6174:34:11"
                              },
                              "nativeSrc": "6174:34:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6174:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "5940:274:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6030:9:11",
                            "nodeType": "YulTypedName",
                            "src": "6030:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "6041:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6041:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "6049:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6049:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "6060:4:11",
                            "nodeType": "YulTypedName",
                            "src": "6060:4:11",
                            "type": ""
                          }
                        ],
                        "src": "5940:274:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6366:147:11",
                          "nodeType": "YulBlock",
                          "src": "6366:147:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6383:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6383:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6396:2:11",
                                            "nodeType": "YulLiteral",
                                            "src": "6396:2:11",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value0",
                                            "nativeSrc": "6400:6:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "6400:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "6392:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "6392:3:11"
                                        },
                                        "nativeSrc": "6392:15:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6392:15:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6413:26:11",
                                            "nodeType": "YulLiteral",
                                            "src": "6413:26:11",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "6409:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "6409:3:11"
                                        },
                                        "nativeSrc": "6409:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6409:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "6388:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6388:3:11"
                                    },
                                    "nativeSrc": "6388:53:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6388:53:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6376:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6376:6:11"
                                },
                                "nativeSrc": "6376:66:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6376:66:11"
                              },
                              "nativeSrc": "6376:66:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6376:66:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "6462:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6462:3:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6467:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "6467:2:11",
                                        "type": "",
                                        "value": "20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6458:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6458:3:11"
                                    },
                                    "nativeSrc": "6458:12:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6458:12:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "6472:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6472:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6451:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6451:6:11"
                                },
                                "nativeSrc": "6451:28:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6451:28:11"
                              },
                              "nativeSrc": "6451:28:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6451:28:11"
                            },
                            {
                              "nativeSrc": "6488:19:11",
                              "nodeType": "YulAssignment",
                              "src": "6488:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6499:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6499:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6504:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "6504:2:11",
                                    "type": "",
                                    "value": "52"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6495:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6495:3:11"
                                },
                                "nativeSrc": "6495:12:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6495:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "6488:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6488:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nativeSrc": "6219:294:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "6334:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6334:3:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "6339:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6339:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "6347:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6347:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "6358:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6358:3:11",
                            "type": ""
                          }
                        ],
                        "src": "6219:294:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6665:100:11",
                          "nodeType": "YulBlock",
                          "src": "6665:100:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6682:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6682:3:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "6687:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6687:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6675:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6675:6:11"
                                },
                                "nativeSrc": "6675:19:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6675:19:11"
                              },
                              "nativeSrc": "6675:19:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6675:19:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "6714:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6714:3:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6719:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "6719:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6710:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6710:3:11"
                                    },
                                    "nativeSrc": "6710:12:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6710:12:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "6724:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6724:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6703:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6703:6:11"
                                },
                                "nativeSrc": "6703:28:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6703:28:11"
                              },
                              "nativeSrc": "6703:28:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6703:28:11"
                            },
                            {
                              "nativeSrc": "6740:19:11",
                              "nodeType": "YulAssignment",
                              "src": "6740:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6751:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6751:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6756:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "6756:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6747:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6747:3:11"
                                },
                                "nativeSrc": "6747:12:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6747:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "6740:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6740:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nativeSrc": "6518:247:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "6633:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6633:3:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "6638:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6638:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "6646:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6646:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "6657:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6657:3:11",
                            "type": ""
                          }
                        ],
                        "src": "6518:247:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6808:171:11",
                          "nodeType": "YulBlock",
                          "src": "6808:171:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "6839:111:11",
                                "nodeType": "YulBlock",
                                "src": "6839:111:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6860:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6860:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6867:3:11",
                                              "nodeType": "YulLiteral",
                                              "src": "6867:3:11",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6872:10:11",
                                              "nodeType": "YulLiteral",
                                              "src": "6872:10:11",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "6863:3:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "6863:3:11"
                                          },
                                          "nativeSrc": "6863:20:11",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6863:20:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "6853:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6853:6:11"
                                      },
                                      "nativeSrc": "6853:31:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6853:31:11"
                                    },
                                    "nativeSrc": "6853:31:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6853:31:11"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6904:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6904:1:11",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6907:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6907:4:11",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "6897:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6897:6:11"
                                      },
                                      "nativeSrc": "6897:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6897:15:11"
                                    },
                                    "nativeSrc": "6897:15:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6897:15:11"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6932:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6932:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6935:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6935:4:11",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "6925:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6925:6:11"
                                      },
                                      "nativeSrc": "6925:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6925:15:11"
                                    },
                                    "nativeSrc": "6925:15:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6925:15:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "6828:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6828:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "6821:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6821:6:11"
                                },
                                "nativeSrc": "6821:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6821:9:11"
                              },
                              "nativeSrc": "6818:132:11",
                              "nodeType": "YulIf",
                              "src": "6818:132:11"
                            },
                            {
                              "nativeSrc": "6959:14:11",
                              "nodeType": "YulAssignment",
                              "src": "6959:14:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "6968:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6968:1:11"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "6971:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6971:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nativeSrc": "6964:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6964:3:11"
                                },
                                "nativeSrc": "6964:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6964:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "6959:1:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6959:1:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nativeSrc": "6770:209:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "6793:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6793:1:11",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "6796:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6796:1:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "6802:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6802:1:11",
                            "type": ""
                          }
                        ],
                        "src": "6770:209:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "7065:103:11",
                          "nodeType": "YulBlock",
                          "src": "7065:103:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "7111:16:11",
                                "nodeType": "YulBlock",
                                "src": "7111:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7120:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "7120:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7123:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "7123:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "7113:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7113:6:11"
                                      },
                                      "nativeSrc": "7113:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7113:12:11"
                                    },
                                    "nativeSrc": "7113:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7113:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "7086:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7086:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7095:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7095:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "7082:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "7082:3:11"
                                    },
                                    "nativeSrc": "7082:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7082:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7107:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "7107:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "7078:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "7078:3:11"
                                },
                                "nativeSrc": "7078:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "7078:32:11"
                              },
                              "nativeSrc": "7075:52:11",
                              "nodeType": "YulIf",
                              "src": "7075:52:11"
                            },
                            {
                              "nativeSrc": "7136:26:11",
                              "nodeType": "YulAssignment",
                              "src": "7136:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7152:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "7152:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "7146:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "7146:5:11"
                                },
                                "nativeSrc": "7146:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "7146:16:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "7136:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "7136:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nativeSrc": "6984:184:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7031:9:11",
                            "nodeType": "YulTypedName",
                            "src": "7031:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "7042:7:11",
                            "nodeType": "YulTypedName",
                            "src": "7042:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "7054:6:11",
                            "nodeType": "YulTypedName",
                            "src": "7054:6:11",
                            "type": ""
                          }
                        ],
                        "src": "6984:184:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "7222:79:11",
                          "nodeType": "YulBlock",
                          "src": "7222:79:11",
                          "statements": [
                            {
                              "nativeSrc": "7232:17:11",
                              "nodeType": "YulAssignment",
                              "src": "7232:17:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "7244:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "7244:1:11"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "7247:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "7247:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "7240:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "7240:3:11"
                                },
                                "nativeSrc": "7240:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "7240:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nativeSrc": "7232:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "7232:4:11"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "7273:22:11",
                                "nodeType": "YulBlock",
                                "src": "7273:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "7275:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7275:16:11"
                                      },
                                      "nativeSrc": "7275:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7275:18:11"
                                    },
                                    "nativeSrc": "7275:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7275:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nativeSrc": "7264:4:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "7264:4:11"
                                  },
                                  {
                                    "name": "x",
                                    "nativeSrc": "7270:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "7270:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "7261:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "7261:2:11"
                                },
                                "nativeSrc": "7261:11:11",
                                "nodeType": "YulFunctionCall",
                                "src": "7261:11:11"
                              },
                              "nativeSrc": "7258:37:11",
                              "nodeType": "YulIf",
                              "src": "7258:37:11"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nativeSrc": "7173:128:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "7204:1:11",
                            "nodeType": "YulTypedName",
                            "src": "7204:1:11",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "7207:1:11",
                            "nodeType": "YulTypedName",
                            "src": "7207:1:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nativeSrc": "7213:4:11",
                            "nodeType": "YulTypedName",
                            "src": "7213:4:11",
                            "type": ""
                          }
                        ],
                        "src": "7173:128:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _1 := shl(5, length)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_1, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, length)\n        dst := add(memPtr, 0x20)\n        let srcEnd := add(add(offset, _1), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 0x20)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061016e5760003560e01c8063a94bd919116100ce578063d8c4a45411610087578063d8c4a454146102ec578063d9f483f8146102f5578063dfbf53ae14610308578063e3ac5d261461031b578063e8a8ee2814610324578063ecca9c2e1461034d578063f2fde38b1461035557600080fd5b8063a94bd9191461028d578063a9a86f4d146102a0578063b2ab4ab7146102b3578063bef4876b146102c6578063cfbd900f146102da578063d2a8c791146102e357600080fd5b806350b447121161012b57806350b44712146101e557806356c77ebe1461021b5780636dc3ae8f1461022e578063715018a61461024e5780637b3529621461025657806381fe4c61146102745780638da5cb5b1461027c57600080fd5b806306e8337f146101735780630fe856161461018a57806331e54a2e146101aa57806331f6a017146101bf5780634639545f146101c85780634705ab24146101d0575b600080fd5b6008545b6040519081526020015b60405180910390f35b610177610198366004610c39565b600a6020526000908152604090205481565b6101bd6101b8366004610d17565b610368565b005b61017760035481565b600354610177565b6101d86105ad565b6040516101819190610d9d565b61020e6101f3366004610de0565b6009602052600090815260409020546001600160a01b031681565b6040516101819190610df9565b610177610229366004610de0565b610605565b61017761023c366004610de0565b600c6020526000908152604090205481565b6101bd610626565b600054600160a01b900460ff165b6040519015158152602001610181565b6101bd61063a565b6000546001600160a01b031661020e565b60055461020e906001600160a01b031681565b6101bd6102ae366004610de0565b61074e565b60045461020e906001600160a01b031681565b60005461026490600160a01b900460ff1681565b61017760085481565b61017760025481565b61017760015481565b610177610303366004610c39565b6109d5565b60075461020e906001600160a01b031681565b61017760065481565b610177610332366004610c39565b6001600160a01b03166000908152600a602052604090205490565b600654610177565b6101bd610363366004610c39565b610b1e565b610370610b5c565b600054600160a81b900460ff161561039b576040516301bf978f60e31b815260040160405180910390fd5b6000805461ffff60a01b1916600160a81b17905560018581556103bf904390610e23565b60025560038490556006839055815167ffffffffffffffff8111156103e6576103e6610c62565b60405190808252806020026020018201604052801561040f578160200160208202803683370190505b50805161042491600b91602090910190610bd9565b5060005b82518110156104bc5781818151811061044357610443610e3c565b6020026020010151600c600085848151811061046157610461610e3c565b602002602001015181526020019081526020016000208190555082818151811061048d5761048d610e3c565b6020026020010151600b82815481106104a8576104a8610e3c565b600091825260209091200155600101610428565b50600480546006546040516323b872dd60e01b8152339381019390935230602484015260448301526000916001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f9190610e52565b90508061055f576040516312171d8360e31b815260040160405180910390fd5b7f3b81d2f4abc4b25cdb3a280f602aba499a20e5e7f079340839d5e4481c2fff1760015460065460405161059d929190918252602082015260400190565b60405180910390a1505050505050565b6060600b8054806020026020016040519081016040528092919081815260200182805480156105fb57602002820191906000526020600020905b8154815260200190600101908083116105e7575b5050505050905090565b600b818154811061061557600080fd5b600091825260209091200154905081565b61062e610b5c565b6106386000610b89565b565b600054600160a01b900460ff168061065c5750600054600160a81b900460ff16155b1561067a576040516375d47e7f60e01b815260040160405180910390fd5b6000610685336109d5565b9050806000036106a8576040516316d1382760e11b815260040160405180910390fd5b6008545b816008546106ba9190610e23565b8110156106e757600081815260096020526040902080546001600160a01b031916331790556001016106ac565b50336000908152600a602052604081208290556008805483929061070c908490610e23565b90915550506040517f3492e8dc9c9e6d0557ae45dfe2d8cd4fd614084227839a8a969f39b114895425906107439033908490610e74565b60405180910390a150565b610756610b5c565b600054600160a01b900460ff16806107785750600054600160a81b900460ff16155b15610796576040516375d47e7f60e01b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b1790556002544310156107db5760025460405163a3665c4960e01b81526004016107d291815260200190565b60405180910390fd5b42600354111561080457600354604051633a4c7fb360e11b81526004016107d291815260200190565b6001546040516bffffffffffffffffffffffff193360601b1660208201526034810183905260540160405160208183030381529060405280519060200120146108605760405163431d3a4360e11b815260040160405180910390fd5b6002546040805160208082018590529240818301528151808203830181526060909101909152805191012060085460099060009061089e9084610e8d565b8152602081019190915260400160002054600780546001600160a01b0319166001600160a01b0390921691821790556108ea576040516301e4d0c360e21b815260040160405180910390fd5b6004805460075460065460405163a9059cbb60e01b81526000946001600160a01b039485169463a9059cbb9461092594911692909101610e74565b6020604051808303816000875af1158015610944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109689190610e52565b905080610988576040516312171d8360e31b815260040160405180910390fd5b6007546006546040517f7e2ca3905e2a3f4806a624223ea6cdcd30dad54d82e68b44481a5e00f322efc7926109c8926001600160a01b0390911691610e74565b60405180910390a1505050565b600080805b600b54811015610af357600554600b80546000926001600160a01b03169162fdd58e9188919086908110610a1057610a10610e3c565b90600052602060002001546040518363ffffffff1660e01b8152600401610a38929190610e74565b602060405180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190610eaf565b1115610aeb5781600c6000600b8481548110610a9757610a97610e3c565b90600052602060002001548152602001908152602001600020541115610aeb57600c6000600b8381548110610ace57610ace610e3c565b906000526020600020015481526020019081526020016000205491505b6001016109da565b506001600160a01b0383166000908152600a6020526040902054610b179082610ec8565b9392505050565b610b26610b5c565b6001600160a01b038116610b50576000604051631e4fbdf760e01b81526004016107d29190610df9565b610b5981610b89565b50565b6000546001600160a01b03163314610638573360405163118cdaa760e01b81526004016107d29190610df9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610c14579160200282015b82811115610c14578251825591602001919060010190610bf9565b50610c20929150610c24565b5090565b5b80821115610c205760008155600101610c25565b600060208284031215610c4b57600080fd5b81356001600160a01b0381168114610b1757600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c8957600080fd5b813567ffffffffffffffff811115610ca357610ca3610c62565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715610cd057610cd0610c62565b604052918252602081850181019290810186841115610cee57600080fd5b6020860192505b83831015610d0d578235815260209283019201610cf5565b5095945050505050565b600080600080600060a08688031215610d2f57600080fd5b853594506020860135935060408601359250606086013567ffffffffffffffff811115610d5b57600080fd5b610d6788828901610c78565b925050608086013567ffffffffffffffff811115610d8457600080fd5b610d9088828901610c78565b9150509295509295909350565b602080825282518282018190526000918401906040840190835b81811015610dd5578351835260209384019390920191600101610db7565b509095945050505050565b600060208284031215610df257600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610e3657610e36610e0d565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610e6457600080fd5b81518015158114610b1757600080fd5b6001600160a01b03929092168252602082015260400190565b600082610eaa57634e487b7160e01b600052601260045260246000fd5b500690565b600060208284031215610ec157600080fd5b5051919050565b81810381811115610e3657610e36610e0d56fea2646970667358221220790ab541225fb1563f8ca915666ec195c2de3c74288d56c84b4fbb865638c4e964736f6c634300081d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA94BD919 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD8C4A454 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD8C4A454 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE8A8EE28 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xECCA9C2E EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xCFBD900F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xD2A8C791 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x50B44712 GT PUSH2 0x12B JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x56C77EBE EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x6DC3AE8F EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xFE85616 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x31E54A2E EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x31F6A017 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x4639545F EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x20E PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x181 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x264 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x370 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP6 DUP2 SSTORE PUSH2 0x3BF SWAP1 NUMBER SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E6 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x424 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4BC JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x443 JUMPI PUSH2 0x443 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x461 JUMPI PUSH2 0x461 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x428 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x59D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5E7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x62E PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x638 PUSH1 0x0 PUSH2 0xB89 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x65C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x685 CALLER PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST DUP2 PUSH1 0x8 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x6AC JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x70C SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x743 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x756 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x778 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD NUMBER LT ISZERO PUSH2 0x7DB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x804 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3A4C7FB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x89E SWAP1 DUP5 PUSH2 0xE8D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xA9059CBB SWAP5 PUSH2 0x925 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 ADD PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x944 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x968 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x9C8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x5 SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP3 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xEAF JUMP JUMPDEST GT ISZERO PUSH2 0xAEB JUMPI DUP2 PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA97 JUMPI PUSH2 0xA97 PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xACE JUMPI PUSH2 0xACE PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9DA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB17 SWAP1 DUP3 PUSH2 0xEC8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB26 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB50 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0xB59 DUP2 PUSH2 0xB89 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x638 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xC14 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC14 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBF9 JUMP JUMPDEST POP PUSH2 0xC20 SWAP3 SWAP2 POP PUSH2 0xC24 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA3 PUSH2 0xC62 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xD0D JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCF5 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD67 DUP9 DUP3 DUP10 ADD PUSH2 0xC78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD90 DUP9 DUP3 DUP10 ADD PUSH2 0xC78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD5 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDB7 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xE0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xE0D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xAB541225FB1563F8CA915666EC195C2DE3C74288D56C84B4FBB DUP7 JUMP CODESIZE 0xC4 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
              "sourceMap": "506:5863:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5695:92;5769:11;;5695:92;;;160:25:11;;;148:2;133:18;5695:92:7;;;;;;;;974:49;;;;;;:::i;:::-;;;;;;;;;;;;;;1635:1156;;;;;;:::i;:::-;;:::i;:::-;;723:35;;;;;;6263:104;6340:20;;6263:104;;5972:108;;;:::i;:::-;;;;;;;:::i;926:42::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;926:42:7;;;;;;;;;;:::i;1030:31::-;;;;;;:::i;:::-;;:::i;1067:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2293:101:0;;;:::i;6130:83:7:-;6175:4;6198:8;-1:-1:-1;;;6198:8:7;;;;6130:83;;;3749:14:11;;3742:22;3724:41;;3712:2;3697:18;6130:83:7;3584:187:11;4170:748:7;;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;801:32:7;;;;;-1:-1:-1;;;;;801:32:7;;;2841:1279;;;;;;:::i;:::-;;:::i;765:30::-;;;;;-1:-1:-1;;;;;765:30:7;;;580:28;;;;;-1:-1:-1;;;580:28:7;;;;;;894:26;;;;;;685:32;;;;;;654:25;;;;;;4968:512;;;;;;:::i;:::-;;:::i;866:21::-;;;;;-1:-1:-1;;;;;866:21:7;;;840:20;;;;;;5530:115;;;;;;:::i;:::-;-1:-1:-1;;;;;5618:20:7;5592:7;5618:20;;;:14;:20;;;;;;;5530:115;5837:85;5910:5;;5837:85;;2543:215:0;;;;;;:::i;:::-;;:::i;1635:1156:7:-;1531:13:0;:11;:13::i;:::-;1862:11:7::1;::::0;-1:-1:-1;;;1862:11:7;::::1;;;1858:71;;;1896:22;;-1:-1:-1::0;;;1896:22:7::1;;;;;;;;;;;1858:71;1977:11;:18:::0;;-1:-1:-1;;;;2005:16:7;-1:-1:-1;;;2005:16:7;;;1991:4:::1;2054:24:::0;;;2108:16:::1;::::0;:12:::1;::::0;:16:::1;:::i;:::-;2088:17;:36:::0;2134:20:::1;:44:::0;;;2221:5:::1;:15:::0;;;2309:14;;2295:29:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2295:29:7::1;-1:-1:-1::0;2278:46:7;;::::1;::::0;:14:::1;::::0;:46:::1;::::0;;::::1;::::0;::::1;:::i;:::-;;2339:9;2334:164;2358:7;:14;2354:1;:18;2334:164;;;2424:16;2441:1;2424:19;;;;;;;;:::i;:::-;;;;;;;2393:16;:28;2410:7;2418:1;2410:10;;;;;;;;:::i;:::-;;;;;;;2393:28;;;;;;;;;;;:50;;;;2477:7;2485:1;2477:10;;;;;;;;:::i;:::-;;;;;;;2457:14;2472:1;2457:17;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;:30:::0;2374:3:::1;;2334:164;;;-1:-1:-1::0;2556:16:7::1;::::0;;2650:5:::1;::::0;2556:109:::1;::::0;-1:-1:-1;;;2556:109:7;;2599:10:::1;2556:109:::0;;::::1;5231:51:11::0;;;;2631:4:7::1;5298:18:11::0;;;5291:60;5367:18;;;5360:34;2541:12:7::1;::::0;-1:-1:-1;;;;;2556:16:7;;::::1;::::0;:29:::1;::::0;5204:18:11;;2556:109:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2541:124;;2680:7;2675:62;;2710:16;;-1:-1:-1::0;;;2710:16:7::1;;;;;;;;;;;2675:62;2752:32;2766:10;;2778:5;;2752:32;;;;;;5861:25:11::0;;;5917:2;5902:18;;5895:34;5849:2;5834:18;;5687:248;2752:32:7::1;;;;;;;;1848:943;1635:1156:::0;;;;;:::o;5972:108::-;6024:16;6059:14;6052:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5972:108;:::o;1030:31::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1030:31:7;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4170:748:7:-;4251:8;;-1:-1:-1;;;4251:8:7;;;;;:24;;-1:-1:-1;4264:11:7;;-1:-1:-1;;;4264:11:7;;;;4263:12;4251:24;4247:79;;;4298:17;;-1:-1:-1;;;4298:17:7;;;;;;;;;;;4247:79;4394:25;4422:31;4442:10;4422:19;:31::i;:::-;4394:59;;4467:17;4488:1;4467:22;4463:78;;4512:18;;-1:-1:-1;;;4512:18:7;;;;;;;;;;;4463:78;4617:11;;4587:166;4660:17;4646:11;;:31;;;;:::i;:::-;4642:1;:35;4587:166;;;4719:10;;;;:7;:10;;;;;:23;;-1:-1:-1;;;;;;4719:23:7;4732:10;4719:23;;;;4691:3;4587:166;;;-1:-1:-1;4777:10:7;4762:26;;;;:14;:26;;;;;:46;;;4818:11;:32;;4791:17;;4762:26;4818:32;;4791:17;;4818:32;:::i;:::-;;;;-1:-1:-1;;4866:45:7;;;;;;4881:10;;4893:17;;4866:45;:::i;:::-;;;;;;;;4201:717;4170:748::o;2841:1279::-;1531:13:0;:11;:13::i;:::-;2945:8:7::1;::::0;-1:-1:-1;;;2945:8:7;::::1;;;::::0;:24:::1;;-1:-1:-1::0;2958:11:7::1;::::0;-1:-1:-1;;;2958:11:7;::::1;;;2957:12;2945:24;2941:79;;;2992:17;;-1:-1:-1::0;;;2992:17:7::1;;;;;;;;;;;2941:79;3098:8;:15:::0;;-1:-1:-1;;;;3098:15:7::1;-1:-1:-1::0;;;3098:15:7::1;::::0;;3189:17:::1;::::0;3209:12:::1;-1:-1:-1::0;3185:243:7::1;;;3268:17;;3244:42;;-1:-1:-1::0;;;3244:42:7::1;;;;;;160:25:11::0;;148:2;133:18;;14:177;3244:42:7::1;;;;;;;;3185:243;3330:15;3307:20;;:38;3303:125;;;3396:20;;3368:49;;-1:-1:-1::0;;;3368:49:7::1;;;;;;160:25:11::0;;148:2;133:18;;14:177;3303:125:7::1;3536:10;::::0;3496:35:::1;::::0;-1:-1:-1;;3513:10:7::1;6396:2:11::0;6392:15;6388:53;3496:35:7::1;::::0;::::1;6376:66:11::0;6458:12;;;6451:28;;;6495:12;;3496:35:7::1;;;;;;;;;;;;3486:46;;;;;;:60;3482:111;;3569:13;;-1:-1:-1::0;;;3569:13:7::1;;;;;;;;;;;3482:111;3727:17;::::0;3693:53:::1;::::0;;::::1;::::0;;::::1;6675:19:11::0;;;3717:28:7;::::1;6710:12:11::0;;;6703:28;3693:53:7;;;;;;;;;6747:12:11;;;;3693:53:7;;;3683:64;;;::::1;::::0;3793:11:::1;::::0;3776:7:::1;::::0;-1:-1:-1;;3784:20:7::1;::::0;3683:64;3784:20:::1;:::i;:::-;3776:29:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3776:29:7;;3767:6:::1;:38:::0;;-1:-1:-1;;;;;;3767:38:7::1;-1:-1:-1::0;;;;;3776:29:7;;::::1;3767:38:::0;;::::1;::::0;;3815:74:::1;;3862:16;;-1:-1:-1::0;;;3862:16:7::1;;;;;;;;;;;3815:74;3958:16;::::0;;3985:6:::1;::::0;3993:5:::1;::::0;3951:48:::1;::::0;-1:-1:-1;;;3951:48:7;;3936:12:::1;::::0;-1:-1:-1;;;;;3958:16:7;;::::1;::::0;3951:33:::1;::::0;:48:::1;::::0;3985:6;::::1;::::0;3993:5;;3951:48:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3936:63;;4014:7;4009:62;;4044:16;;-1:-1:-1::0;;;4044:16:7::1;;;;;;;;;;;4009:62;4099:6;::::0;4107:5:::1;::::0;4086:27:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4099:6:7;;::::1;::::0;4086:27:::1;:::i;:::-;;;;;;;;2895:1225;;2841:1279:::0;:::o;4968:512::-;5032:7;;;5090:326;5114:14;:21;5110:25;;5090:326;;;5160:16;;5193:14;:17;;5214:1;;-1:-1:-1;;;;;5160:16:7;;:26;;5187:4;;5193:14;5208:1;;5193:17;;;;;;:::i;:::-;;;;;;;;;5160:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;5156:250;;;5277:17;5239:16;:35;5256:14;5271:1;5256:17;;;;;;;;:::i;:::-;;;;;;;;;5239:35;;;;;;;;;;;;:55;5235:157;;;5338:16;:35;5355:14;5370:1;5355:17;;;;;;;;:::i;:::-;;;;;;;;;5338:35;;;;;;;;;;;;5318:55;;5235:157;5137:3;;5090:326;;;-1:-1:-1;;;;;;5453:20:7;;;;;;:14;:20;;;;;;5433:40;;:17;:40;:::i;:::-;5426:47;4968:512;-1:-1:-1;;;4968:512:7:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;735:10:5;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2912:187::-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:286:11;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;350:23;;-1:-1:-1;;;;;402:31:11;;392:42;;382:70;;448:1;445;438:12;487:127;548:10;543:3;539:20;536:1;529:31;579:4;576:1;569:15;603:4;600:1;593:15;619:954;673:5;726:3;719:4;711:6;707:17;703:27;693:55;;744:1;741;734:12;693:55;784:6;771:20;814:18;806:6;803:30;800:56;;;836:18;;:::i;:::-;882:6;879:1;875:14;918:2;912:9;981:2;977:7;972:2;968;964:11;960:25;952:6;948:38;1052:6;1040:10;1037:22;1016:18;1004:10;1001:34;998:62;995:88;;;1063:18;;:::i;:::-;1099:2;1092:22;1149;;;1199:4;1231:15;;;1227:26;;;1149:22;1187:17;;1265:15;;;1262:35;;;1293:1;1290;1283:12;1262:35;1329:4;1321:6;1317:17;1306:28;;1343:200;1359:6;1354:3;1351:15;1343:200;;;1451:17;;1481:18;;1528:4;1376:14;;;;1519;1343:200;;;-1:-1:-1;1561:6:11;619:954;-1:-1:-1;;;;;619:954:11:o;1578:946::-;1723:6;1731;1739;1747;1755;1808:3;1796:9;1787:7;1783:23;1779:33;1776:53;;;1825:1;1822;1815:12;1776:53;1870:23;;;-1:-1:-1;1990:2:11;1975:18;;1962:32;;-1:-1:-1;2093:2:11;2078:18;;2065:32;;-1:-1:-1;2174:2:11;2159:18;;2146:32;2201:18;2190:30;;2187:50;;;2233:1;2230;2223:12;2187:50;2256:61;2309:7;2300:6;2289:9;2285:22;2256:61;:::i;:::-;2246:71;;;2370:3;2359:9;2355:19;2342:33;2400:18;2390:8;2387:32;2384:52;;;2432:1;2429;2422:12;2384:52;2455:63;2510:7;2499:8;2488:9;2484:24;2455:63;:::i;:::-;2445:73;;;1578:946;;;;;;;;:::o;2529:611::-;2719:2;2731:21;;;2801:13;;2704:18;;;2823:22;;;2671:4;;2902:15;;;2876:2;2861:18;;;2671:4;2945:169;2959:6;2956:1;2953:13;2945:169;;;3020:13;;3008:26;;3063:2;3089:15;;;;3054:12;;;;2981:1;2974:9;2945:169;;;-1:-1:-1;3131:3:11;;2529:611;-1:-1:-1;;;;;2529:611:11:o;3145:226::-;3204:6;3257:2;3245:9;3236:7;3232:23;3228:32;3225:52;;;3273:1;3270;3263:12;3225:52;-1:-1:-1;3318:23:11;;3145:226;-1:-1:-1;3145:226:11:o;3376:203::-;-1:-1:-1;;;;;3540:32:11;;;;3522:51;;3510:2;3495:18;;3376:203::o;4635:127::-;4696:10;4691:3;4687:20;4684:1;4677:31;4727:4;4724:1;4717:15;4751:4;4748:1;4741:15;4767:125;4832:9;;;4853:10;;;4850:36;;;4866:18;;:::i;:::-;4767:125;;;;:::o;4897:127::-;4958:10;4953:3;4949:20;4946:1;4939:31;4989:4;4986:1;4979:15;5013:4;5010:1;5003:15;5405:277;5472:6;5525:2;5513:9;5504:7;5500:23;5496:32;5493:52;;;5541:1;5538;5531:12;5493:52;5573:9;5567:16;5626:5;5619:13;5612:21;5605:5;5602:32;5592:60;;5648:1;5645;5638:12;5940:274;-1:-1:-1;;;;;6132:32:11;;;;6114:51;;6196:2;6181:18;;6174:34;6102:2;6087:18;;5940:274::o;6770:209::-;6802:1;6828;6818:132;;6872:10;6867:3;6863:20;6860:1;6853:31;6907:4;6904:1;6897:15;6935:4;6932:1;6925:15;6818:132;-1:-1:-1;6964:9:11;;6770:209::o;6984:184::-;7054:6;7107:2;7095:9;7086:7;7082:23;7078:32;7075:52;;;7123:1;7120;7113:12;7075:52;-1:-1:-1;7146:16:11;;6984:184;-1:-1:-1;6984:184:11:o;7173:128::-;7240:9;;;7261:11;;;7258:37;;;7275:18;;:::i"
            },
            "methodIdentifiers": {
              "badgeAllocations(uint256)": "6dc3ae8f",
              "claimTickets()": "81fe4c61",
              "eligibleBadges(uint256)": "56c77ebe",
              "finished()": "bef4876b",
              "getClaimableTickets(address)": "d9f483f8",
              "getClaimedTickets(address)": "e8a8ee28",
              "getEligibleBadges()": "4705ab24",
              "getPrizeAmount()": "ecca9c2e",
              "getRevealedAfter()": "4639545f",
              "getTotalTickets()": "06e8337f",
              "initialize(bytes32,uint256,uint256,uint256[],uint256[])": "31e54a2e",
              "isFinished()": "7b352962",
              "owner()": "8da5cb5b",
              "prize()": "e3ac5d26",
              "renounceOwnership()": "715018a6",
              "revealAfterTimestamp()": "31f6a017",
              "revealWinner(bytes32)": "a9a86f4d",
              "sealedSeed()": "d8c4a454",
              "storedBlockNumber()": "d2a8c791",
              "superchainBadges()": "a94bd919",
              "superchainPoints()": "b2ab4ab7",
              "ticketCount()": "cfbd900f",
              "tickets(uint256)": "50b44712",
              "ticketsClaimed(address)": "0fe85616",
              "transferOwnership(address)": "f2fde38b",
              "winner()": "dfbf53ae"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_superchainPoints\",\"type\":\"address\"},{\"internalType\":\"contract IERC1155\",\"name\":\"_superchainBadges\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeBlock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTicketsToClaim\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RaffleAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeedAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sealedSeed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketsClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"badgeAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eligibleBadges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimableTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimedTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEligibleBadges\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevealedAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_sealedSeed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_revealAfterTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_badges\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_badgeAllocation\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealAfterTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_seed\",\"type\":\"bytes32\"}],\"name\":\"revealWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sealedSeed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storedBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainBadges\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainPoints\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ticketsClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of points to be distributed to the raffle winner\",\"sealedSeed\":\"The seed used to generate the raffle\"}},\"RaffleWinner(address,uint256)\":{\"params\":{\"amount\":\"The amount of points distributed to the raffle winner\",\"winner\":\"The address of the raffle winner\"}},\"TicketsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The amount of points claimed\",\"claimer\":\"The address of the claimer\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_initialOwner\":\"The initial owner of the contract\",\"_superchainBadges\":\"The address of the SuperchainBadges contract\",\"_superchainPoints\":\"The address of the SuperchainPoints contract\"}},\"getClaimableTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"getClaimedTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"initialize(bytes32,uint256,uint256,uint256[],uint256[])\":{\"params\":{\"_amount\":\"The amount of points to be distributed to the raffle winner\",\"_badgeAllocation\":\"The number of tickets allocated to each badge\",\"_badges\":\"The badges that are eligible to participate in the raffle\",\"_sealedSeed\":\"The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revealWinner(bytes32)\":{\"params\":{\"_seed\":\"The seed used to generate the raffle\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SuperchainPointsRaffle\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotRevealBeforeBlock(uint256)\":[{\"notice\":\"Random pattern requires seed to be revealed in a future block\"}],\"CannotRevealBeforeTimestamp(uint256)\":[{\"notice\":\"UX requires reveal after timestamp\"}],\"InvalidSeed()\":[{\"notice\":\"Error thrown when the seed doesn't match the sealed seed\"}],\"NoOngoingRaffle()\":[{\"notice\":\"Error thrown when the raffle is not started\"}],\"NoTicketsToClaim()\":[{\"notice\":\"Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\"}],\"RaffleAlreadyStarted()\":[{\"notice\":\"Error thrown when the raffle is already started\"}],\"SeedAlreadyUsed()\":[{\"notice\":\"Error thrown when the seed has already been used\"}],\"TicketNotFound()\":[{\"notice\":\"Error thrown when the ticket is not found\"}],\"TransferFailed()\":[{\"notice\":\"Error thrown when points transfer fails\"}]},\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"notice\":\"Event emitted when a raffle is started\"},\"RaffleWinner(address,uint256)\":{\"notice\":\"Event emitted when a raffle is finished\"},\"TicketsClaimed(address,uint256)\":{\"notice\":\"Event emitted when tickets are claimed\"}},\"kind\":\"user\",\"methods\":{\"claimTickets()\":{\"notice\":\"Claim tickets to participate in raffle\"},\"getClaimableTickets(address)\":{\"notice\":\"Returns the number of tickets that can be claimed\"},\"getClaimedTickets(address)\":{\"notice\":\"Returns the number of tickets already claimed\"},\"getEligibleBadges()\":{\"notice\":\"Returns the badges that are eligible to participate in the raffle\"},\"getPrizeAmount()\":{\"notice\":\"Returns the amount of points that are distributed to the raffle winner\"},\"getRevealedAfter()\":{\"notice\":\"Returns the timestamp at which the seed will be revealed\"},\"getTotalTickets()\":{\"notice\":\"Returns the total number of tickets that can be claimed\"},\"initialize(bytes32,uint256,uint256,uint256[],uint256[])\":{\"notice\":\"Starts the raffle\"},\"isFinished()\":{\"notice\":\"Returns true if the raffle is finished\"},\"revealWinner(bytes32)\":{\"notice\":\"Reveals the raffle winner and transfers the points\"}},\"notice\":\"A raffle contract using https://fravoll.github.io/solidity-patterns/randomness.html pattern for randomness\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperchainPointsRaffle.sol\":\"SuperchainPointsRaffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x1528f3ef49ef2750b428564df007feb2d5c7a792bf79c6d125409c96322a4c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://663f59a9b1e3b1d831edeeb83590e8d9582d560c603e91327372502c64534bd6\",\"dweb:/ipfs/QmeGBrXcnomfBriPJEWXwSs1t2j9C4H7AhjuZVWHknSd6A\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/SuperchainPointsRaffle.sol\":{\"keccak256\":\"0xdcdd765155ad2caf206fd97744295e57850a69a5419bc4ec1025b2ac7ce6a7b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d1df8120ffc3c6450fd2e3776eae4e1a04e6c1fc4b4cbd83df4bafe92a83436\",\"dweb:/ipfs/QmZWbozuwnXDNTBnBmQb3FxcTdeBuZ8bYuisr1m82w1Q7U\"]},\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0xad4e1dbc2920ad64dd9c193820db0eee4bc0168fbfbd20f6315ab26cc29f325c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d367cc2dac84241a2f7d3e85ea044c8b7bd4678d2c2ea3766dc4bd13c82334a6\",\"dweb:/ipfs/QmesRD2bnZi85dhxdMbdrTuVkxCDMfR6nLTe15UmPxdHrd\"]}},\"version\":1}"
        }
      },
      "contracts/SuperchainPointsRaffleFactory.sol": {
        "SuperchainPointsRaffleFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_initialOwner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_superchainPoints",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC1155",
                  "name": "_superchainBadges",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "OngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "raffle",
                  "type": "address"
                }
              ],
              "name": "RaffleCreated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "createRaffle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "currentRaffle",
              "outputs": [
                {
                  "internalType": "contract ISuperchainPointsRaffle",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainBadges",
              "outputs": [
                {
                  "internalType": "contract IERC1155",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainPoints",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_945": {
                  "entryPoint": null,
                  "id": 945,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 154,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory": {
                  "entryPoint": 258,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 234,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:909:11",
                    "nodeType": "YulBlock",
                    "src": "0:909:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "59:86:11",
                          "nodeType": "YulBlock",
                          "src": "59:86:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "123:16:11",
                                "nodeType": "YulBlock",
                                "src": "123:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "132:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "132:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "135:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "135:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "125:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:6:11"
                                      },
                                      "nativeSrc": "125:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "125:12:11"
                                    },
                                    "nativeSrc": "125:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "125:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "82:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "93:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "108:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "108:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "113:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "113:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "104:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "104:3:11"
                                                },
                                                "nativeSrc": "104:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "104:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "117:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "117:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "100:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "100:3:11"
                                            },
                                            "nativeSrc": "100:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "100:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "89:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:11"
                                        },
                                        "nativeSrc": "89:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "79:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:11"
                                    },
                                    "nativeSrc": "79:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "72:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:11"
                                },
                                "nativeSrc": "72:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "72:50:11"
                              },
                              "nativeSrc": "69:70:11",
                              "nodeType": "YulIf",
                              "src": "69:70:11"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nativeSrc": "14:131:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "48:5:11",
                            "nodeType": "YulTypedName",
                            "src": "48:5:11",
                            "type": ""
                          }
                        ],
                        "src": "14:131:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "295:404:11",
                          "nodeType": "YulBlock",
                          "src": "295:404:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "341:16:11",
                                "nodeType": "YulBlock",
                                "src": "341:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "350:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "350:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "353:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "353:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "343:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "343:6:11"
                                      },
                                      "nativeSrc": "343:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "343:12:11"
                                    },
                                    "nativeSrc": "343:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "343:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "316:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "316:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "325:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "325:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "312:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "312:3:11"
                                    },
                                    "nativeSrc": "312:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "312:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "337:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "337:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "308:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:3:11"
                                },
                                "nativeSrc": "308:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "308:32:11"
                              },
                              "nativeSrc": "305:52:11",
                              "nodeType": "YulIf",
                              "src": "305:52:11"
                            },
                            {
                              "nativeSrc": "366:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "366:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "385:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "385:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "379:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:5:11"
                                },
                                "nativeSrc": "379:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "379:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "370:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "370:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "429:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "429:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "404:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:24:11"
                                },
                                "nativeSrc": "404:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "404:31:11"
                              },
                              "nativeSrc": "404:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "404:31:11"
                            },
                            {
                              "nativeSrc": "444:15:11",
                              "nodeType": "YulAssignment",
                              "src": "444:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "454:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "454:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "444:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "468:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "468:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "493:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "493:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "504:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "504:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "489:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:3:11"
                                    },
                                    "nativeSrc": "489:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "483:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "483:5:11"
                                },
                                "nativeSrc": "483:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "483:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "472:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "472:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "542:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "542:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "517:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "517:24:11"
                                },
                                "nativeSrc": "517:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "517:33:11"
                              },
                              "nativeSrc": "517:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "517:33:11"
                            },
                            {
                              "nativeSrc": "559:17:11",
                              "nodeType": "YulAssignment",
                              "src": "559:17:11",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "569:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "569:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "559:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "559:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "585:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "585:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "610:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "610:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "621:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "621:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "606:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "606:3:11"
                                    },
                                    "nativeSrc": "606:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "606:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "600:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "600:5:11"
                                },
                                "nativeSrc": "600:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "600:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "589:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "589:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nativeSrc": "659:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "659:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "634:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "634:24:11"
                                },
                                "nativeSrc": "634:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "634:33:11"
                              },
                              "nativeSrc": "634:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "634:33:11"
                            },
                            {
                              "nativeSrc": "676:17:11",
                              "nodeType": "YulAssignment",
                              "src": "676:17:11",
                              "value": {
                                "name": "value_2",
                                "nativeSrc": "686:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "686:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "676:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory",
                        "nativeSrc": "150:549:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "245:9:11",
                            "nodeType": "YulTypedName",
                            "src": "245:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "256:7:11",
                            "nodeType": "YulTypedName",
                            "src": "256:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "268:6:11",
                            "nodeType": "YulTypedName",
                            "src": "268:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "276:6:11",
                            "nodeType": "YulTypedName",
                            "src": "276:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "284:6:11",
                            "nodeType": "YulTypedName",
                            "src": "284:6:11",
                            "type": ""
                          }
                        ],
                        "src": "150:549:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "805:102:11",
                          "nodeType": "YulBlock",
                          "src": "805:102:11",
                          "statements": [
                            {
                              "nativeSrc": "815:26:11",
                              "nodeType": "YulAssignment",
                              "src": "815:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "827:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "838:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "838:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "823:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "823:3:11"
                                },
                                "nativeSrc": "823:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "823:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "815:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "857:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "872:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "872:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "888:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "888:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "893:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "893:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "884:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "884:3:11"
                                            },
                                            "nativeSrc": "884:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "884:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "897:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "897:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "880:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "880:3:11"
                                        },
                                        "nativeSrc": "880:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "880:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "868:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "868:3:11"
                                    },
                                    "nativeSrc": "868:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "868:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "850:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "850:6:11"
                                },
                                "nativeSrc": "850:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "850:51:11"
                              },
                              "nativeSrc": "850:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "850:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "704:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "774:9:11",
                            "nodeType": "YulTypedName",
                            "src": "774:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "785:6:11",
                            "nodeType": "YulTypedName",
                            "src": "785:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "796:4:11",
                            "nodeType": "YulTypedName",
                            "src": "796:4:11",
                            "type": ""
                          }
                        ],
                        "src": "704:203:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x15C5 CODESIZE SUB DUP1 PUSH2 0x15C5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x102 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x9A JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x14F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x122 DUP2 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x133 DUP2 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x144 DUP2 PUSH2 0xEA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1467 DUP1 PUSH2 0x15E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x485AC2A7 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA8527CBE EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xFB PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x189 JUMPI POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7B352962 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC7AAE87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x1D5 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x54AD4CC1960F9B16B4A7FD9F5EE7C05B4DE5672CB94BC1DBAD3DE1ED291C248B SWAP2 PUSH2 0x25F SWAP2 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x27B PUSH1 0x0 PUSH2 0x2F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x285 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x2F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27B JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x107D DUP1 PUSH2 0x3B5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x107D CODESIZE SUB DUP1 PUSH2 0x107D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3D SWAP2 PUSH2 0x110 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75 DUP2 PUSH2 0xA8 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x15D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x130 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x141 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x152 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xF11 DUP1 PUSH2 0x16C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA94BD919 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD8C4A454 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD8C4A454 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE8A8EE28 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xECCA9C2E EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xCFBD900F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xD2A8C791 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x50B44712 GT PUSH2 0x12B JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x56C77EBE EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x6DC3AE8F EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xFE85616 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x31E54A2E EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x31F6A017 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x4639545F EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x20E PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x181 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x264 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x370 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP6 DUP2 SSTORE PUSH2 0x3BF SWAP1 NUMBER SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E6 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x424 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4BC JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x443 JUMPI PUSH2 0x443 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x461 JUMPI PUSH2 0x461 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x428 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x59D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5E7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x62E PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x638 PUSH1 0x0 PUSH2 0xB89 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x65C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x685 CALLER PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST DUP2 PUSH1 0x8 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x6AC JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x70C SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x743 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x756 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x778 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD NUMBER LT ISZERO PUSH2 0x7DB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x804 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3A4C7FB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x89E SWAP1 DUP5 PUSH2 0xE8D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xA9059CBB SWAP5 PUSH2 0x925 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 ADD PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x944 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x968 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x9C8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x5 SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP3 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xEAF JUMP JUMPDEST GT ISZERO PUSH2 0xAEB JUMPI DUP2 PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA97 JUMPI PUSH2 0xA97 PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xACE JUMPI PUSH2 0xACE PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9DA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB17 SWAP1 DUP3 PUSH2 0xEC8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB26 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB50 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0xB59 DUP2 PUSH2 0xB89 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x638 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xC14 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC14 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBF9 JUMP JUMPDEST POP PUSH2 0xC20 SWAP3 SWAP2 POP PUSH2 0xC24 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA3 PUSH2 0xC62 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xD0D JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCF5 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD67 DUP9 DUP3 DUP10 ADD PUSH2 0xC78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD90 DUP9 DUP3 DUP10 ADD PUSH2 0xC78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD5 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDB7 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xE0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xE0D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xAB541225FB1563F8CA915666EC195C2DE3C74288D56C84B4FBB DUP7 JUMP CODESIZE 0xC4 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 PUSH8 0x940A81D2C542896D 0xD LOG0 PUSH6 0xF47D312B8EE5 0xA8 SWAP14 PUSH8 0x6D49D372166E5EF5 PUSH4 0x5E64736F PUSH13 0x634300081D0033000000000000 ",
              "sourceMap": "665:1065:8:-:0;;;1098:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1225:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;850:51:11;823:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1250:16:8::1;:36:::0;;-1:-1:-1;;;;;1250:36:8;;::::1;-1:-1:-1::0;;;;;;1250:36:8;;::::1;;::::0;;;1296:16:::1;:36:::0;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;665:1065:8;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:131:11:-;-1:-1:-1;;;;;89:31:11;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:549::-;268:6;276;284;337:2;325:9;316:7;312:23;308:32;305:52;;;353:1;350;343:12;305:52;385:9;379:16;404:31;429:5;404:31;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:33:11;483:25;517:33;:::i;:::-;621:2;606:18;;600:25;569:7;;-1:-1:-1;634:33:11;600:25;634:33;:::i;:::-;686:7;676:17;;;150:549;;;;;:::o;704:203::-;665:1065:8;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_84": {
                  "entryPoint": 708,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_368": {
                  "entryPoint": null,
                  "id": 368,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 753,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@createRaffle_989": {
                  "entryPoint": 243,
                  "id": 989,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@currentRaffle_921": {
                  "entryPoint": null,
                  "id": 921,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@renounceOwnership_98": {
                  "entryPoint": 617,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainBadges_918": {
                  "entryPoint": null,
                  "id": 918,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainPoints_915": {
                  "entryPoint": null,
                  "id": 915,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_126": {
                  "entryPoint": 637,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 866,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 914,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 846,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_contract$_IERC20_$356_t_contract$_IERC1155_$278__to_t_address_t_address_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_ISuperchainPointsRaffle_$1124__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:1910:11",
                    "nodeType": "YulBlock",
                    "src": "0:1910:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "115:102:11",
                          "nodeType": "YulBlock",
                          "src": "115:102:11",
                          "statements": [
                            {
                              "nativeSrc": "125:26:11",
                              "nodeType": "YulAssignment",
                              "src": "125:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "137:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "148:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "133:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:11"
                                },
                                "nativeSrc": "133:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "125:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "167:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "182:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "182:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "198:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "198:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "203:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "203:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "194:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "194:3:11"
                                            },
                                            "nativeSrc": "194:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "194:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "207:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "207:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "190:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "190:3:11"
                                        },
                                        "nativeSrc": "190:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "190:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "178:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "178:3:11"
                                    },
                                    "nativeSrc": "178:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "178:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "160:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:11"
                                },
                                "nativeSrc": "160:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "160:51:11"
                              },
                              "nativeSrc": "160:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "160:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "14:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "84:9:11",
                            "nodeType": "YulTypedName",
                            "src": "84:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "95:6:11",
                            "nodeType": "YulTypedName",
                            "src": "95:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "106:4:11",
                            "nodeType": "YulTypedName",
                            "src": "106:4:11",
                            "type": ""
                          }
                        ],
                        "src": "14:203:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "355:102:11",
                          "nodeType": "YulBlock",
                          "src": "355:102:11",
                          "statements": [
                            {
                              "nativeSrc": "365:26:11",
                              "nodeType": "YulAssignment",
                              "src": "365:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "377:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "377:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "388:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "388:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "373:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "373:3:11"
                                },
                                "nativeSrc": "373:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "373:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "365:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "365:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "407:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "407:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "422:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "422:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "438:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "438:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "443:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "443:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "434:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "434:3:11"
                                            },
                                            "nativeSrc": "434:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "434:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "447:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "447:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "430:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "430:3:11"
                                        },
                                        "nativeSrc": "430:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "430:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "418:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "418:3:11"
                                    },
                                    "nativeSrc": "418:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "418:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "400:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:6:11"
                                },
                                "nativeSrc": "400:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "400:51:11"
                              },
                              "nativeSrc": "400:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "400:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperchainPointsRaffle_$1124__to_t_address__fromStack_reversed",
                        "nativeSrc": "222:235:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "324:9:11",
                            "nodeType": "YulTypedName",
                            "src": "324:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "335:6:11",
                            "nodeType": "YulTypedName",
                            "src": "335:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "346:4:11",
                            "nodeType": "YulTypedName",
                            "src": "346:4:11",
                            "type": ""
                          }
                        ],
                        "src": "222:235:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "579:102:11",
                          "nodeType": "YulBlock",
                          "src": "579:102:11",
                          "statements": [
                            {
                              "nativeSrc": "589:26:11",
                              "nodeType": "YulAssignment",
                              "src": "589:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "601:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "601:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "612:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "612:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "597:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "597:3:11"
                                },
                                "nativeSrc": "597:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "597:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "589:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "589:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "631:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "631:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "646:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "646:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "662:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "662:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "667:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "667:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "658:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "658:3:11"
                                            },
                                            "nativeSrc": "658:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "658:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "671:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "671:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "654:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "654:3:11"
                                        },
                                        "nativeSrc": "654:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "654:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "642:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "642:3:11"
                                    },
                                    "nativeSrc": "642:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "642:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "624:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:6:11"
                                },
                                "nativeSrc": "624:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "624:51:11"
                              },
                              "nativeSrc": "624:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "624:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed",
                        "nativeSrc": "462:219:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "548:9:11",
                            "nodeType": "YulTypedName",
                            "src": "548:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "559:6:11",
                            "nodeType": "YulTypedName",
                            "src": "559:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "570:4:11",
                            "nodeType": "YulTypedName",
                            "src": "570:4:11",
                            "type": ""
                          }
                        ],
                        "src": "462:219:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "801:102:11",
                          "nodeType": "YulBlock",
                          "src": "801:102:11",
                          "statements": [
                            {
                              "nativeSrc": "811:26:11",
                              "nodeType": "YulAssignment",
                              "src": "811:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "823:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "823:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "834:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "834:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "819:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "819:3:11"
                                },
                                "nativeSrc": "819:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "819:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "811:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "811:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "853:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "853:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "868:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "868:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "884:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "884:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "889:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "889:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "880:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "880:3:11"
                                            },
                                            "nativeSrc": "880:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "880:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "893:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "893:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "876:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "876:3:11"
                                        },
                                        "nativeSrc": "876:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "876:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "864:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "864:3:11"
                                    },
                                    "nativeSrc": "864:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "864:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "846:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "846:6:11"
                                },
                                "nativeSrc": "846:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "846:51:11"
                              },
                              "nativeSrc": "846:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "846:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed",
                        "nativeSrc": "686:217:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "770:9:11",
                            "nodeType": "YulTypedName",
                            "src": "770:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "781:6:11",
                            "nodeType": "YulTypedName",
                            "src": "781:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "792:4:11",
                            "nodeType": "YulTypedName",
                            "src": "792:4:11",
                            "type": ""
                          }
                        ],
                        "src": "686:217:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "978:216:11",
                          "nodeType": "YulBlock",
                          "src": "978:216:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1024:16:11",
                                "nodeType": "YulBlock",
                                "src": "1024:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1033:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1033:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1036:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1036:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1026:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1026:6:11"
                                      },
                                      "nativeSrc": "1026:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1026:12:11"
                                    },
                                    "nativeSrc": "1026:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1026:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "999:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "999:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1008:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1008:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "995:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "995:3:11"
                                    },
                                    "nativeSrc": "995:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "995:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1020:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1020:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "991:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "991:3:11"
                                },
                                "nativeSrc": "991:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "991:32:11"
                              },
                              "nativeSrc": "988:52:11",
                              "nodeType": "YulIf",
                              "src": "988:52:11"
                            },
                            {
                              "nativeSrc": "1049:36:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1049:36:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1075:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1075:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1062:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1062:12:11"
                                },
                                "nativeSrc": "1062:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1062:23:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1053:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1053:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1148:16:11",
                                "nodeType": "YulBlock",
                                "src": "1148:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1157:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1157:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1160:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1160:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1150:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1150:6:11"
                                      },
                                      "nativeSrc": "1150:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1150:12:11"
                                    },
                                    "nativeSrc": "1150:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1150:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1107:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1107:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "1118:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "1118:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1133:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1133:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1138:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1138:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1129:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1129:3:11"
                                                },
                                                "nativeSrc": "1129:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1129:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1142:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1142:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "1125:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1125:3:11"
                                            },
                                            "nativeSrc": "1125:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1125:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "1114:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1114:3:11"
                                        },
                                        "nativeSrc": "1114:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1114:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1104:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1104:2:11"
                                    },
                                    "nativeSrc": "1104:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1104:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1097:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1097:6:11"
                                },
                                "nativeSrc": "1097:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1097:50:11"
                              },
                              "nativeSrc": "1094:70:11",
                              "nodeType": "YulIf",
                              "src": "1094:70:11"
                            },
                            {
                              "nativeSrc": "1173:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1173:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1183:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "1183:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1173:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1173:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "908:286:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "944:9:11",
                            "nodeType": "YulTypedName",
                            "src": "944:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "955:7:11",
                            "nodeType": "YulTypedName",
                            "src": "955:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "967:6:11",
                            "nodeType": "YulTypedName",
                            "src": "967:6:11",
                            "type": ""
                          }
                        ],
                        "src": "908:286:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1277:199:11",
                          "nodeType": "YulBlock",
                          "src": "1277:199:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1323:16:11",
                                "nodeType": "YulBlock",
                                "src": "1323:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1332:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1332:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1335:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1335:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1325:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1325:6:11"
                                      },
                                      "nativeSrc": "1325:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1325:12:11"
                                    },
                                    "nativeSrc": "1325:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1325:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1298:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1298:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1307:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1307:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1294:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1294:3:11"
                                    },
                                    "nativeSrc": "1294:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1294:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1319:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1319:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1290:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1290:3:11"
                                },
                                "nativeSrc": "1290:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1290:32:11"
                              },
                              "nativeSrc": "1287:52:11",
                              "nodeType": "YulIf",
                              "src": "1287:52:11"
                            },
                            {
                              "nativeSrc": "1348:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1348:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1367:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1367:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1361:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1361:5:11"
                                },
                                "nativeSrc": "1361:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1361:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1352:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1352:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1430:16:11",
                                "nodeType": "YulBlock",
                                "src": "1430:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1439:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1439:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1442:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1442:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1432:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1432:6:11"
                                      },
                                      "nativeSrc": "1432:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1432:12:11"
                                    },
                                    "nativeSrc": "1432:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1432:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1399:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1399:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "1420:5:11",
                                                "nodeType": "YulIdentifier",
                                                "src": "1420:5:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "1413:6:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1413:6:11"
                                            },
                                            "nativeSrc": "1413:13:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1413:13:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "1406:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1406:6:11"
                                        },
                                        "nativeSrc": "1406:21:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1406:21:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1396:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1396:2:11"
                                    },
                                    "nativeSrc": "1396:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1396:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1389:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1389:6:11"
                                },
                                "nativeSrc": "1389:40:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1389:40:11"
                              },
                              "nativeSrc": "1386:60:11",
                              "nodeType": "YulIf",
                              "src": "1386:60:11"
                            },
                            {
                              "nativeSrc": "1455:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1455:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1465:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "1465:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1455:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nativeSrc": "1199:277:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1243:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1243:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1254:7:11",
                            "nodeType": "YulTypedName",
                            "src": "1254:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1266:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1266:6:11",
                            "type": ""
                          }
                        ],
                        "src": "1199:277:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1668:240:11",
                          "nodeType": "YulBlock",
                          "src": "1668:240:11",
                          "statements": [
                            {
                              "nativeSrc": "1678:26:11",
                              "nodeType": "YulAssignment",
                              "src": "1678:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1690:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1690:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1701:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1701:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1686:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1686:3:11"
                                },
                                "nativeSrc": "1686:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1686:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1678:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1678:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1720:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1720:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1735:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1735:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1751:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1751:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1756:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1756:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1747:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1747:3:11"
                                            },
                                            "nativeSrc": "1747:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1747:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1760:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1760:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1743:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1743:3:11"
                                        },
                                        "nativeSrc": "1743:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1743:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1731:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1731:3:11"
                                    },
                                    "nativeSrc": "1731:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1731:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1713:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1713:6:11"
                                },
                                "nativeSrc": "1713:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1713:51:11"
                              },
                              "nativeSrc": "1713:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1713:51:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1784:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1784:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1795:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1795:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1780:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1780:3:11"
                                    },
                                    "nativeSrc": "1780:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1780:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "1804:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1804:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1820:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1820:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1825:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1825:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1816:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1816:3:11"
                                            },
                                            "nativeSrc": "1816:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1816:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1829:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1829:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1812:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1812:3:11"
                                        },
                                        "nativeSrc": "1812:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1812:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1800:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1800:3:11"
                                    },
                                    "nativeSrc": "1800:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1800:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1773:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1773:6:11"
                                },
                                "nativeSrc": "1773:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1773:60:11"
                              },
                              "nativeSrc": "1773:60:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1773:60:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1853:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1853:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1864:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1864:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1849:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1849:3:11"
                                    },
                                    "nativeSrc": "1849:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1849:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nativeSrc": "1873:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1873:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1889:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1889:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1894:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1894:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1885:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1885:3:11"
                                            },
                                            "nativeSrc": "1885:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1885:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1898:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1898:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1881:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1881:3:11"
                                        },
                                        "nativeSrc": "1881:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1881:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1869:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1869:3:11"
                                    },
                                    "nativeSrc": "1869:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1869:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1842:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1842:6:11"
                                },
                                "nativeSrc": "1842:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1842:60:11"
                              },
                              "nativeSrc": "1842:60:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1842:60:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_contract$_IERC20_$356_t_contract$_IERC1155_$278__to_t_address_t_address_t_address__fromStack_reversed",
                        "nativeSrc": "1481:427:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1621:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1621:9:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1632:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1632:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1640:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1640:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1648:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1648:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1659:4:11",
                            "nodeType": "YulTypedName",
                            "src": "1659:4:11",
                            "type": ""
                          }
                        ],
                        "src": "1481:427:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ISuperchainPointsRaffle_$1124__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_contract$_IERC20_$356_t_contract$_IERC1155_$278__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x485AC2A7 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA8527CBE EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xFB PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x189 JUMPI POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7B352962 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC7AAE87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x1D5 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x54AD4CC1960F9B16B4A7FD9F5EE7C05B4DE5672CB94BC1DBAD3DE1ED291C248B SWAP2 PUSH2 0x25F SWAP2 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x27B PUSH1 0x0 PUSH2 0x2F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x285 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x2F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27B JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x107D DUP1 PUSH2 0x3B5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x107D CODESIZE SUB DUP1 PUSH2 0x107D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3D SWAP2 PUSH2 0x110 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75 DUP2 PUSH2 0xA8 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x15D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x130 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x141 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x152 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xF11 DUP1 PUSH2 0x16C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA94BD919 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xD8C4A454 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD8C4A454 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0xE8A8EE28 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xECCA9C2E EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xCFBD900F EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0xD2A8C791 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x50B44712 GT PUSH2 0x12B JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x56C77EBE EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x6DC3AE8F EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xFE85616 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x31E54A2E EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x31F6A017 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x4639545F EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x1D0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD17 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x177 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x1D8 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH2 0x20E PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x181 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x63A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x2AE CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x74E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x264 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x20E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x370 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x39B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP6 DUP2 SSTORE PUSH2 0x3BF SWAP1 NUMBER SWAP1 PUSH2 0xE23 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E6 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x424 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4BC JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x443 JUMPI PUSH2 0x443 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x461 JUMPI PUSH2 0x461 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4A8 JUMPI PUSH2 0x4A8 PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x428 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x59D SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5E7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x62E PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x638 PUSH1 0x0 PUSH2 0xB89 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x65C JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x685 CALLER PUSH2 0x9D5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST DUP2 PUSH1 0x8 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0xE23 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x6E7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x6AC JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x70C SWAP1 DUP5 SWAP1 PUSH2 0xE23 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x743 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x756 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x778 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x796 JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD NUMBER LT ISZERO PUSH2 0x7DB JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x804 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3A4C7FB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x89E SWAP1 DUP5 PUSH2 0xE8D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xA9059CBB SWAP5 PUSH2 0x925 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 ADD PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x944 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x968 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x988 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x9C8 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x5 SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0xA10 JUMPI PUSH2 0xA10 PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP3 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0xEAF JUMP JUMPDEST GT ISZERO PUSH2 0xAEB JUMPI DUP2 PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA97 JUMPI PUSH2 0xA97 PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xAEB JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xACE JUMPI PUSH2 0xACE PUSH2 0xE3C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9DA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB17 SWAP1 DUP3 PUSH2 0xEC8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB26 PUSH2 0xB5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB50 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0xB59 DUP2 PUSH2 0xB89 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x638 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xC14 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC14 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xBF9 JUMP JUMPDEST POP PUSH2 0xC20 SWAP3 SWAP2 POP PUSH2 0xC24 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH2 0xCA3 PUSH2 0xC62 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCD0 JUMPI PUSH2 0xCD0 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xD0D JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCF5 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD67 DUP9 DUP3 DUP10 ADD PUSH2 0xC78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD90 DUP9 DUP3 DUP10 ADD PUSH2 0xC78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD5 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDB7 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xE0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEAA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xE36 JUMPI PUSH2 0xE36 PUSH2 0xE0D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xAB541225FB1563F8CA915666EC195C2DE3C74288D56C84B4FBB DUP7 JUMP CODESIZE 0xC4 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 PUSH8 0x940A81D2C542896D 0xD LOG0 PUSH6 0xF47D312B8EE5 0xA8 SWAP14 PUSH8 0x6D49D372166E5EF5 PUSH4 0x5E64736F PUSH13 0x634300081D0033000000000000 ",
              "sourceMap": "665:1065:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:382;;;:::i;:::-;;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;;;;;:::i;:::-;;;;;;;;828:44:8;;;;;-1:-1:-1;;;;;828:44:8;;;789:32;;;;;-1:-1:-1;;;;;789:32:8;;;753:30;;;;;-1:-1:-1;;;;;753:30:8;;;2543:215:0;;;;;;:::i;:::-;;:::i;1345:382:8:-;1531:13:0;:11;:13::i;:::-;1408::8::1;::::0;-1:-1:-1;;;;;1408:13:8::1;1400:36:::0;;::::1;::::0;:75:::1;;;1440:13;;;;;;;;;-1:-1:-1::0;;;;;1440:13:8::1;-1:-1:-1::0;;;;;1440:24:8::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;1400:75;1396:128;;;1498:15;;-1:-1:-1::0;;;1498:15:8::1;;;;;;;;;;;1396:128;1684:7:0::0;1710:6;-1:-1:-1;;;;;1710:6:0;1611:16:8::1;::::0;1641::::1;::::0;1550:117:::1;::::0;-1:-1:-1;;;;;1611:16:8;;::::1;::::0;1641;;::::1;::::0;1550:117:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;1731:32:11;;;1713:51;;1800:32;;;1795:2;1780:18;;1773:60;1869:32;;;1864:2;1849:18;;1842:60;1701:2;1686:18;1550:117:8::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1534:13:8::1;:133:::0;;-1:-1:-1;;;;;;1534:133:8::1;-1:-1:-1::0;;;;;1534:133:8;;;::::1;::::0;;::::1;::::0;;1683:37:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;1345:382::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;735:10:5;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2912:187::-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;:::o;14:203:11:-;-1:-1:-1;;;;;178:32:11;;;;160:51;;148:2;133:18;;14:203::o;908:286::-;967:6;1020:2;1008:9;999:7;995:23;991:32;988:52;;;1036:1;1033;1026:12;988:52;1062:23;;-1:-1:-1;;;;;1114:31:11;;1104:42;;1094:70;;1160:1;1157;1150:12;1094:70;1183:5;908:286;-1:-1:-1;;;908:286:11:o;1199:277::-;1266:6;1319:2;1307:9;1298:7;1294:23;1290:32;1287:52;;;1335:1;1332;1325:12;1287:52;1367:9;1361:16;1420:5;1413:13;1406:21;1399:5;1396:32;1386:60;;1442:1;1439;1432:12"
            },
            "methodIdentifiers": {
              "createRaffle()": "485ac2a7",
              "currentRaffle()": "a8527cbe",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "superchainBadges()": "a94bd919",
              "superchainPoints()": "b2ab4ab7",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_superchainPoints\",\"type\":\"address\"},{\"internalType\":\"contract IERC1155\",\"name\":\"_superchainBadges\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OngoingRaffle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"raffle\",\"type\":\"address\"}],\"name\":\"RaffleCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRaffle\",\"outputs\":[{\"internalType\":\"contract ISuperchainPointsRaffle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainBadges\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainPoints\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_initialOwner\":\"The initial owner of the contract\",\"_superchainBadges\":\"The address of the SuperchainBadges contract\",\"_superchainPoints\":\"The address of the SuperchainPoints contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SuperchainPointsRaffleFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"OngoingRaffle()\":[{\"notice\":\"Cannot create a raffle if one is already started\"}]},\"events\":{\"RaffleCreated(address)\":{\"notice\":\"Emitted when a raffle is created\"}},\"kind\":\"user\",\"methods\":{\"createRaffle()\":{\"notice\":\"Checks previous raffle state and creates a new raffle\"}},\"notice\":\"Factory for SuperchainPointsRaffle contracts that also acts as a proxy for the current raffle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperchainPointsRaffleFactory.sol\":\"SuperchainPointsRaffleFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x1528f3ef49ef2750b428564df007feb2d5c7a792bf79c6d125409c96322a4c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://663f59a9b1e3b1d831edeeb83590e8d9582d560c603e91327372502c64534bd6\",\"dweb:/ipfs/QmeGBrXcnomfBriPJEWXwSs1t2j9C4H7AhjuZVWHknSd6A\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/SuperchainPointsRaffle.sol\":{\"keccak256\":\"0xdcdd765155ad2caf206fd97744295e57850a69a5419bc4ec1025b2ac7ce6a7b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d1df8120ffc3c6450fd2e3776eae4e1a04e6c1fc4b4cbd83df4bafe92a83436\",\"dweb:/ipfs/QmZWbozuwnXDNTBnBmQb3FxcTdeBuZ8bYuisr1m82w1Q7U\"]},\"contracts/SuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x420596fa983187203d7c346854ca7fe119dfe348922aea18e8adeeb4e9d5cd89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12dbba3f099a1d84abd9d96551b46f39d3b23a0cf58787960e507983be360e90\",\"dweb:/ipfs/QmXgpu4RvpnSuVPJxf57fqPhmhCVMMXKgXguP6B28AHYg2\"]},\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0xad4e1dbc2920ad64dd9c193820db0eee4bc0168fbfbd20f6315ab26cc29f325c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d367cc2dac84241a2f7d3e85ea044c8b7bd4678d2c2ea3766dc4bd13c82334a6\",\"dweb:/ipfs/QmesRD2bnZi85dhxdMbdrTuVkxCDMfR6nLTe15UmPxdHrd\"]},\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ISuperchainPointsRaffle.sol": {
        "ISuperchainPointsRaffle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeBlock",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeTimestamp",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSeed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoOngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoTicketsToClaim",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RaffleAlreadyStarted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SeedAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TicketNotFound",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "sealedSeed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleWinner",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TicketsClaimed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "claimTickets",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimableTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimedTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEligibleBadges",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPrizeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRevealedAfter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_sealedSeed",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_revealAfterTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badges",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badgeAllocation",
                  "type": "uint256[]"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isFinished",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_seed",
                  "type": "bytes32"
                }
              ],
              "name": "revealWinner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "claimTickets()": "81fe4c61",
              "getClaimableTickets(address)": "d9f483f8",
              "getClaimedTickets(address)": "e8a8ee28",
              "getEligibleBadges()": "4705ab24",
              "getPrizeAmount()": "ecca9c2e",
              "getRevealedAfter()": "4639545f",
              "getTotalTickets()": "06e8337f",
              "initialize(bytes32,uint256,uint256,uint256[],uint256[])": "31e54a2e",
              "isFinished()": "7b352962",
              "revealWinner(bytes32)": "a9a86f4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeBlock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTicketsToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RaffleAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeedAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sealedSeed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketsClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimableTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimedTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEligibleBadges\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevealedAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_sealedSeed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_revealAfterTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_badges\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_badgeAllocation\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_seed\",\"type\":\"bytes32\"}],\"name\":\"revealWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of points to be distributed to the raffle winner\",\"sealedSeed\":\"The seed used to generate the raffle\"}},\"RaffleWinner(address,uint256)\":{\"params\":{\"amount\":\"The amount of points distributed to the raffle winner\",\"winner\":\"The address of the raffle winner\"}},\"TicketsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The amount of points claimed\",\"claimer\":\"The address of the claimer\"}}},\"kind\":\"dev\",\"methods\":{\"getClaimableTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"getClaimedTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"initialize(bytes32,uint256,uint256,uint256[],uint256[])\":{\"params\":{\"_amount\":\"The amount of points to be distributed to the raffle winner\",\"_badgeAllocation\":\"The number of tickets allocated to each badge\",\"_badges\":\"The badges that are eligible to participate in the raffle\",\"_sealedSeed\":\"The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\"}},\"revealWinner(bytes32)\":{\"params\":{\"_seed\":\"The seed used to generate the raffle\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CannotRevealBeforeBlock(uint256)\":[{\"notice\":\"Random pattern requires seed to be revealed in a future block\"}],\"CannotRevealBeforeTimestamp(uint256)\":[{\"notice\":\"UX requires reveal after timestamp\"}],\"InvalidSeed()\":[{\"notice\":\"Error thrown when the seed doesn't match the sealed seed\"}],\"NoOngoingRaffle()\":[{\"notice\":\"Error thrown when the raffle is not started\"}],\"NoTicketsToClaim()\":[{\"notice\":\"Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\"}],\"RaffleAlreadyStarted()\":[{\"notice\":\"Error thrown when the raffle is already started\"}],\"SeedAlreadyUsed()\":[{\"notice\":\"Error thrown when the seed has already been used\"}],\"TicketNotFound()\":[{\"notice\":\"Error thrown when the ticket is not found\"}],\"TransferFailed()\":[{\"notice\":\"Error thrown when points transfer fails\"}]},\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"notice\":\"Event emitted when a raffle is started\"},\"RaffleWinner(address,uint256)\":{\"notice\":\"Event emitted when a raffle is finished\"},\"TicketsClaimed(address,uint256)\":{\"notice\":\"Event emitted when tickets are claimed\"}},\"kind\":\"user\",\"methods\":{\"claimTickets()\":{\"notice\":\"Claim tickets to participate in raffle\"},\"getClaimableTickets(address)\":{\"notice\":\"Returns the number of tickets that can be claimed\"},\"getClaimedTickets(address)\":{\"notice\":\"Returns the number of tickets already claimed\"},\"getEligibleBadges()\":{\"notice\":\"Returns the badges that are eligible to participate in the raffle\"},\"getPrizeAmount()\":{\"notice\":\"Returns the amount of points that are distributed to the raffle winner\"},\"getRevealedAfter()\":{\"notice\":\"Returns the timestamp at which the seed will be revealed\"},\"getTotalTickets()\":{\"notice\":\"Returns the total number of tickets that can be claimed\"},\"initialize(bytes32,uint256,uint256,uint256[],uint256[])\":{\"notice\":\"Starts the raffle\"},\"isFinished()\":{\"notice\":\"Returns true if the raffle is finished\"},\"revealWinner(bytes32)\":{\"notice\":\"Reveals the raffle winner and transfers the points\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":\"ISuperchainPointsRaffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0xad4e1dbc2920ad64dd9c193820db0eee4bc0168fbfbd20f6315ab26cc29f325c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d367cc2dac84241a2f7d3e85ea044c8b7bd4678d2c2ea3766dc4bd13c82334a6\",\"dweb:/ipfs/QmesRD2bnZi85dhxdMbdrTuVkxCDMfR6nLTe15UmPxdHrd\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleErrors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeBlock",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeTimestamp",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSeed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoOngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoTicketsToClaim",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RaffleAlreadyStarted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SeedAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TicketNotFound",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeBlock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTicketsToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RaffleAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeedAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"CannotRevealBeforeBlock(uint256)\":[{\"notice\":\"Random pattern requires seed to be revealed in a future block\"}],\"CannotRevealBeforeTimestamp(uint256)\":[{\"notice\":\"UX requires reveal after timestamp\"}],\"InvalidSeed()\":[{\"notice\":\"Error thrown when the seed doesn't match the sealed seed\"}],\"NoOngoingRaffle()\":[{\"notice\":\"Error thrown when the raffle is not started\"}],\"NoTicketsToClaim()\":[{\"notice\":\"Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\"}],\"RaffleAlreadyStarted()\":[{\"notice\":\"Error thrown when the raffle is already started\"}],\"SeedAlreadyUsed()\":[{\"notice\":\"Error thrown when the seed has already been used\"}],\"TicketNotFound()\":[{\"notice\":\"Error thrown when the ticket is not found\"}],\"TransferFailed()\":[{\"notice\":\"Error thrown when points transfer fails\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":\"ISuperchainPointsRaffleErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0xad4e1dbc2920ad64dd9c193820db0eee4bc0168fbfbd20f6315ab26cc29f325c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d367cc2dac84241a2f7d3e85ea044c8b7bd4678d2c2ea3766dc4bd13c82334a6\",\"dweb:/ipfs/QmesRD2bnZi85dhxdMbdrTuVkxCDMfR6nLTe15UmPxdHrd\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "sealedSeed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleWinner",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TicketsClaimed",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sealedSeed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketsClaimed\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of points to be distributed to the raffle winner\",\"sealedSeed\":\"The seed used to generate the raffle\"}},\"RaffleWinner(address,uint256)\":{\"params\":{\"amount\":\"The amount of points distributed to the raffle winner\",\"winner\":\"The address of the raffle winner\"}},\"TicketsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The amount of points claimed\",\"claimer\":\"The address of the claimer\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"notice\":\"Event emitted when a raffle is started\"},\"RaffleWinner(address,uint256)\":{\"notice\":\"Event emitted when a raffle is finished\"},\"TicketsClaimed(address,uint256)\":{\"notice\":\"Event emitted when tickets are claimed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":\"ISuperchainPointsRaffleEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0xad4e1dbc2920ad64dd9c193820db0eee4bc0168fbfbd20f6315ab26cc29f325c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d367cc2dac84241a2f7d3e85ea044c8b7bd4678d2c2ea3766dc4bd13c82334a6\",\"dweb:/ipfs/QmesRD2bnZi85dhxdMbdrTuVkxCDMfR6nLTe15UmPxdHrd\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ISuperchainPointsRaffleFactory.sol": {
        "ISuperchainPointsRaffleFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "OngoingRaffle",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "raffle",
                  "type": "address"
                }
              ],
              "name": "RaffleCreated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "createRaffle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createRaffle()": "485ac2a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OngoingRaffle\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"raffle\",\"type\":\"address\"}],\"name\":\"RaffleCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"OngoingRaffle()\":[{\"notice\":\"Cannot create a raffle if one is already started\"}]},\"events\":{\"RaffleCreated(address)\":{\"notice\":\"Emitted when a raffle is created\"}},\"kind\":\"user\",\"methods\":{\"createRaffle()\":{\"notice\":\"Checks previous raffle state and creates a new raffle\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":\"ISuperchainPointsRaffleFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleFactoryErrors": {
          "abi": [
            {
              "inputs": [],
              "name": "OngoingRaffle",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OngoingRaffle\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"OngoingRaffle()\":[{\"notice\":\"Cannot create a raffle if one is already started\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":\"ISuperchainPointsRaffleFactoryErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleFactoryEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "raffle",
                  "type": "address"
                }
              ],
              "name": "RaffleCreated",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"raffle\",\"type\":\"address\"}],\"name\":\"RaffleCreated\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"RaffleCreated(address)\":{\"notice\":\"Emitted when a raffle is created\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":\"ISuperchainPointsRaffleFactoryEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        }
      }
    }
  }
}