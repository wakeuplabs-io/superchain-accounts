{
  "id": "80574eb99d9752874f1065b0b0f819f1",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.29",
  "solcLongVersion": "0.8.29+commit.ab55807c",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "contracts/interfaces/IERC7802.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\nimport {IERC165} from \"@openzeppelin/contracts/interfaces/IERC165.sol\";\n\n/// @title IERC7802\n/// @notice Defines the interface for crosschain ERC20 transfers.\ninterface IERC7802 is IERC165 {\n    /// @notice Emitted when a crosschain transfer mints tokens.\n    /// @param to       Address of the account tokens are being minted for.\n    /// @param amount   Amount of tokens minted.\n    /// @param sender   Address of the account that finilized the crosschain transfer.\n    event CrosschainMint(address indexed to, uint256 amount, address indexed sender);\n\n    /// @notice Emitted when a crosschain transfer burns tokens.\n    /// @param from     Address of the account tokens are being burned from.\n    /// @param amount   Amount of tokens burned.\n    /// @param sender   Address of the account that initiated the crosschain transfer.\n    event CrosschainBurn(address indexed from, uint256 amount, address indexed sender);\n\n    /// @notice Mint tokens through a crosschain transfer.\n    /// @param _to     Address to mint tokens to.\n    /// @param _amount Amount of tokens to mint.\n    function crosschainMint(address _to, uint256 _amount) external;\n\n    /// @notice Burn tokens through a crosschain transfer.\n    /// @param _from   Address to burn tokens from.\n    /// @param _amount Amount of tokens to burn.\n    function crosschainBurn(address _from, uint256 _amount) external;\n}"
      },
      "contracts/interfaces/ISuperchainPoints.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC7802} from \"./IERC7802.sol\";\n\ninterface ISuperchainPointsErrors {\n    /// @dev Unauthorized error\n    error Unauthorized();\n\n    /// @dev Nothing to claim\n    error NothingToClaim();\n\n    /// @dev Length mismatch\n    error LengthMismatch();\n}\n\ninterface ISuperchainPointsEvents {\n    /// @notice Emitted when tokens are added to be claimable by users.\n    /// @param account The account that added the tokens\n    /// @param amount The amount of tokens added\n    event TokensAdded(address account, uint256 amount);\n\n    /// @notice Emitted when tokens are claimed\n    /// @param account The account that claimed the tokens\n    /// @param amount The amount of tokens claimed\n    event Claimed(address account, uint256 amount);\n}\n\ninterface ISuperchainPoints is\n    IERC20,\n    IERC7802,\n    ISuperchainPointsErrors,\n    ISuperchainPointsEvents\n{\n    /// @notice Owner adds tokens to be claimable by users.\n    /// @param users Array of user addresses.\n    /// @param amounts Array of claimable amounts (added to existing claimable).\n    function addClaimable(\n        address[] calldata users,\n        uint256[] calldata amounts\n    ) external;\n\n    /// @notice View how much a user can still claim\n    /// @param account The account to check\n    function getClaimable(address account) external view returns (uint256);\n\n    /// @notice Claim the tokens assigned to the caller.\n    function claim() external;\n}\n"
      },
      "contracts/libraries/SuperchainPredeployAddresses.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title PredeployAddresses\n/// @notice Subset of the Predeploys.sol library.\n\nlibrary PredeployAddresses {\n    /// @notice Address of the canonical WETH contract.\n    address internal constant WETH = 0x4200000000000000000000000000000000000006;\n\n    /// @notice Address of the CrossL2Inbox predeploy.\n    address internal constant CROSS_L2_INBOX =\n        0x4200000000000000000000000000000000000022;\n\n    /// @notice Address of the L2ToL2CrossDomainMessenger predeploy.\n    address internal constant L2_TO_L2_CROSS_DOMAIN_MESSENGER =\n        0x4200000000000000000000000000000000000023;\n\n    /// @notice Address of the SuperchainWETH predeploy.\n    address internal constant SUPERCHAIN_WETH =\n        0x4200000000000000000000000000000000000024;\n\n    /// @notice Address of the ETHLiquidity predeploy.\n    address internal constant ETH_LIQUIDITY =\n        0x4200000000000000000000000000000000000025;\n\n    /// @notice Address of the SuperchainTokenBridge predeploy.\n    address internal constant SUPERCHAIN_TOKEN_BRIDGE =\n        0x4200000000000000000000000000000000000028;\n\n    /// @notice Address of Promise.sol. This is likely to change.\n    address internal constant PROMISE =\n        0xFcdC08d2DFf80DCDf1e954c4759B3316BdE86464;\n}\n"
      },
      "contracts/SuperchainPoints.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\nimport {ISuperchainPoints} from \"./interfaces/ISuperchainPoints.sol\";\nimport {IERC7802, IERC165} from \"./interfaces/IERC7802.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {ERC20, IERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {PredeployAddresses} from \"./libraries/SuperchainPredeployAddresses.sol\";\n\n/// @title SuperchainPoints\n/// @notice A standard ERC20 extension implementing IERC7802 for unified cross-chain fungibility across\n///         the Superchain. Allows the SuperchainTokenBridge to mint and burn tokens as needed.\ncontract SuperchainPoints is ISuperchainPoints, ERC20, Ownable {\n    mapping(address => uint256) internal claimable;\n    mapping(address => uint256) internal claimed;\n\n    constructor(\n        address owner,\n        string memory name,\n        string memory symbol\n    ) ERC20(name, symbol) Ownable(owner) {}\n\n    /// @inheritdoc ISuperchainPoints\n    function addClaimable(\n        address[] calldata users,\n        uint256[] calldata amounts\n    ) external onlyOwner {\n        if (users.length != amounts.length) {\n            revert LengthMismatch();\n        }\n\n        for (uint256 i = 0; i < users.length; i++) {\n            claimable[users[i]] += amounts[i];\n            emit TokensAdded(users[i], amounts[i]);\n        }\n    }\n\n    /// @inheritdoc ISuperchainPoints\n    function getClaimable(address user) external view returns (uint256) {\n        return claimable[user] - claimed[user];\n    }\n\n    /// @inheritdoc ISuperchainPoints\n    function claim() external {\n        uint256 total = claimable[msg.sender];\n        uint256 alreadyClaimed = claimed[msg.sender];\n        if (total <= alreadyClaimed) {\n            revert NothingToClaim();\n        }\n\n        uint256 amountToClaim = total - alreadyClaimed;\n        claimed[msg.sender] = total;\n\n        _mint(msg.sender, amountToClaim);\n\n        emit Claimed(msg.sender, amountToClaim);\n    }\n\n    /// @notice Allows owner to mint tokens\n    /// @param to address that receives the tokens\n    /// @param amount token amount\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    /// @inheritdoc IERC7802\n    function crosschainMint(address _to, uint256 _amount) external {\n        if (msg.sender != PredeployAddresses.SUPERCHAIN_TOKEN_BRIDGE) {\n            revert Unauthorized();\n        }\n\n        _mint(_to, _amount);\n\n        emit CrosschainMint(_to, _amount, msg.sender);\n    }\n\n    /// @inheritdoc IERC7802\n    function crosschainBurn(address _from, uint256 _amount) external {\n        if (msg.sender != PredeployAddresses.SUPERCHAIN_TOKEN_BRIDGE) {\n            revert Unauthorized();\n        }\n\n        _burn(_from, _amount);\n\n        emit CrosschainBurn(_from, _amount, msg.sender);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(\n        bytes4 _interfaceId\n    ) public view virtual returns (bool) {\n        return\n            _interfaceId == type(IERC7802).interfaceId ||\n            _interfaceId == type(IERC20).interfaceId ||\n            _interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              937
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 938,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 937,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 937,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                937
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 919,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              949
            ]
          },
          "id": 152,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../utils/introspection/IERC165.sol",
              "id": 151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 152,
              "sourceUnit": 950,
              "src": "132:59:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 150,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 949,
                    "src": "140:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "106:86:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              288
            ],
            "IERC20Errors": [
              193
            ],
            "IERC721Errors": [
              241
            ]
          },
          "id": 289,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 153,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 154,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:2",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 193,
              "linearizedBaseContracts": [
                193
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 155,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 163,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "654:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "670:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "687:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:2"
                  },
                  "src": "623:80:2"
                },
                {
                  "documentation": {
                    "id": 164,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 168,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "891:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:2"
                  },
                  "src": "866:41:2"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 173,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 173,
                        "src": "1104:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:2"
                  },
                  "src": "1077:45:2"
                },
                {
                  "documentation": {
                    "id": 174,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:2",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 182,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1511:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1528:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1547:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:2"
                  },
                  "src": "1478:85:2"
                },
                {
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 187,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 187,
                        "src": "1775:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:2"
                  },
                  "src": "1748:45:2"
                },
                {
                  "documentation": {
                    "id": 188,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:2",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 192,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "2025:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:2"
                  },
                  "src": "1999:43:2"
                }
              ],
              "scope": 289,
              "src": "280:1764:2",
              "usedErrors": [
                163,
                168,
                173,
                182,
                187,
                192
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 194,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:2",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 241,
              "linearizedBaseContracts": [
                241
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 195,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:2",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 199,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "2469:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:2"
                  },
                  "src": "2444:40:2"
                },
                {
                  "documentation": {
                    "id": 200,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:2",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 204,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 202,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "2656:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:2"
                  },
                  "src": "2627:46:2"
                },
                {
                  "documentation": {
                    "id": 205,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:2",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 213,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "3000:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "3016:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "3033:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:2"
                  },
                  "src": "2973:75:2"
                },
                {
                  "documentation": {
                    "id": 214,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 218,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 218,
                        "src": "3237:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:2"
                  },
                  "src": "3211:42:2"
                },
                {
                  "documentation": {
                    "id": 219,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 223,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "3451:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:2"
                  },
                  "src": "3423:46:2"
                },
                {
                  "documentation": {
                    "id": 224,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 230,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 230,
                        "src": "3760:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 230,
                        "src": "3778:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:2"
                  },
                  "src": "3727:68:2"
                },
                {
                  "documentation": {
                    "id": 231,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 235,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 235,
                        "src": "4008:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:2"
                  },
                  "src": "3980:46:2"
                },
                {
                  "documentation": {
                    "id": 236,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 240,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "4262:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:2"
                  },
                  "src": "4234:46:2"
                }
              ],
              "scope": 289,
              "src": "2190:2092:2",
              "usedErrors": [
                199,
                204,
                213,
                218,
                223,
                230,
                235,
                240
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 242,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:2",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 288,
              "linearizedBaseContracts": [
                288
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 243,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 253,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "4860:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "4876:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "4893:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "4909:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:2"
                  },
                  "src": "4827:99:2"
                },
                {
                  "documentation": {
                    "id": 254,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 258,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "5116:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:2"
                  },
                  "src": "5089:43:2"
                },
                {
                  "documentation": {
                    "id": 259,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 263,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "5331:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:2"
                  },
                  "src": "5302:47:2"
                },
                {
                  "documentation": {
                    "id": 264,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 270,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "5651:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "5669:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:2"
                  },
                  "src": "5616:68:2"
                },
                {
                  "documentation": {
                    "id": 271,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 275,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 275,
                        "src": "5898:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:2"
                  },
                  "src": "5869:47:2"
                },
                {
                  "documentation": {
                    "id": 276,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 280,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "6153:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:2"
                  },
                  "src": "6124:47:2"
                },
                {
                  "documentation": {
                    "id": 281,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:2",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 287,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 287,
                        "src": "6494:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 287,
                        "src": "6513:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:2"
                  },
                  "src": "6462:73:2"
                }
              ],
              "scope": 289,
              "src": "4430:2107:2",
              "usedErrors": [
                253,
                258,
                263,
                270,
                275,
                280,
                287
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              937
            ],
            "ERC20": [
              803
            ],
            "IERC20": [
              881
            ],
            "IERC20Errors": [
              193
            ],
            "IERC20Metadata": [
              907
            ]
          },
          "id": 804,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 290,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 292,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 804,
              "sourceUnit": 882,
              "src": "131:36:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 291,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 881,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 294,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 804,
              "sourceUnit": 908,
              "src": "168:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 293,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 907,
                    "src": "176:14:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 296,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 804,
              "sourceUnit": 938,
              "src": "232:48:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 295,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 937,
                    "src": "240:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 298,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 804,
              "sourceUnit": 289,
              "src": "281:65:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 297,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 193,
                    "src": "289:12:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 300,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 937,
                    "src": "1133:7:3"
                  },
                  "id": 301,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:3"
                },
                {
                  "baseName": {
                    "id": 302,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 881,
                    "src": "1142:6:3"
                  },
                  "id": 303,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:3"
                },
                {
                  "baseName": {
                    "id": 304,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 907,
                    "src": "1150:14:3"
                  },
                  "id": 305,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:3"
                },
                {
                  "baseName": {
                    "id": 306,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 193,
                    "src": "1166:12:3"
                  },
                  "id": 307,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:3"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 299,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:3",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 803,
              "linearizedBaseContracts": [
                803,
                193,
                907,
                881,
                937
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1185:53:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 310,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:3",
                    "keyType": {
                      "id": 308,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 309,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1245:83:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 316,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:3",
                    "keyType": {
                      "id": 312,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 315,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:3",
                      "keyType": {
                        "id": 313,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 314,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1335:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 321,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1370:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "1396:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 339,
                    "nodeType": "Block",
                    "src": "1638:57:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 331,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "1648:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 332,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 326,
                            "src": "1656:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:3"
                      },
                      {
                        "expression": {
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 335,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 323,
                            "src": "1671:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 336,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "1681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 338,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 324,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:3",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 340,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1594:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "1615:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:3"
                  },
                  "returnParameters": {
                    "id": 330,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:3"
                  },
                  "scope": 803,
                  "src": "1582:113:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    894
                  ],
                  "body": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "1820:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 346,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "1837:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 345,
                        "id": 347,
                        "nodeType": "Return",
                        "src": "1830:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 341,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 349,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:3"
                  },
                  "returnParameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "1805:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:3"
                  },
                  "scope": 803,
                  "src": "1760:89:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    900
                  ],
                  "body": {
                    "id": 357,
                    "nodeType": "Block",
                    "src": "2024:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 355,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "2041:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 354,
                        "id": 356,
                        "nodeType": "Return",
                        "src": "2034:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 350,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:3",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 358,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:3"
                  },
                  "returnParameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "2009:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:3"
                  },
                  "scope": 803,
                  "src": "1962:93:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    906
                  ],
                  "body": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "2744:26:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 363,
                        "id": 365,
                        "nodeType": "Return",
                        "src": "2754:9:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 359,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:3",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 367,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:3"
                  },
                  "returnParameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 367,
                        "src": "2737:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:3"
                  },
                  "scope": 803,
                  "src": "2688:82:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    830
                  ],
                  "body": {
                    "id": 375,
                    "nodeType": "Block",
                    "src": "2891:36:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 373,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2908:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 372,
                        "id": 374,
                        "nodeType": "Return",
                        "src": "2901:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 368,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:3",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 376,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 369,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:3"
                  },
                  "returnParameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "2882:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:3"
                  },
                  "scope": 803,
                  "src": "2830:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    838
                  ],
                  "body": {
                    "id": 388,
                    "nodeType": "Block",
                    "src": "3059:42:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 384,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "3076:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 386,
                          "indexExpression": {
                            "id": 385,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 379,
                            "src": "3086:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 383,
                        "id": 387,
                        "nodeType": "Return",
                        "src": "3069:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 377,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:3",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 389,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "3004:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:3"
                  },
                  "returnParameters": {
                    "id": 383,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 382,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 389,
                        "src": "3050:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:3"
                  },
                  "scope": 803,
                  "src": "2985:116:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    848
                  ],
                  "body": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "3371:103:3",
                    "statements": [
                      {
                        "assignments": [
                          400
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 400,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 412,
                            "src": "3381:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 399,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 403,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 401,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "3397:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 405,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "3429:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 406,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 392,
                              "src": "3436:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 407,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "3440:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 404,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "3419:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 398,
                        "id": 411,
                        "nodeType": "Return",
                        "src": "3456:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 390,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:3",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 413,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "3314:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "3326:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:3"
                  },
                  "returnParameters": {
                    "id": 398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 397,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "3365:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 396,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:3"
                  },
                  "scope": 803,
                  "src": "3296:178:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    858
                  ],
                  "body": {
                    "id": 429,
                    "nodeType": "Block",
                    "src": "3621:51:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 423,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 317,
                              "src": "3638:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 425,
                            "indexExpression": {
                              "id": 424,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "3650:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 427,
                          "indexExpression": {
                            "id": 426,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "3657:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 422,
                        "id": 428,
                        "nodeType": "Return",
                        "src": "3631:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 414,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:3",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 430,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3551:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 418,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3566:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 417,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:3"
                  },
                  "returnParameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "3612:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:3"
                  },
                  "scope": 803,
                  "src": "3532:140:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    868
                  ],
                  "body": {
                    "id": 453,
                    "nodeType": "Block",
                    "src": "4058:107:3",
                    "statements": [
                      {
                        "assignments": [
                          441
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 441,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 453,
                            "src": "4068:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 440,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 444,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 442,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "4084:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 446,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 441,
                              "src": "4115:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 447,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "4122:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 448,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "4131:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 445,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              694,
                              754
                            ],
                            "referencedDeclaration": 694,
                            "src": "4106:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 450,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 439,
                        "id": 452,
                        "nodeType": "Return",
                        "src": "4147:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 431,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:3",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 454,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "3996:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "4013:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:3"
                  },
                  "returnParameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 454,
                        "src": "4052:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:3"
                  },
                  "scope": 803,
                  "src": "3979:186:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    880
                  ],
                  "body": {
                    "id": 485,
                    "nodeType": "Block",
                    "src": "4850:151:3",
                    "statements": [
                      {
                        "assignments": [
                          467
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 467,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 485,
                            "src": "4860:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 466,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 470,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 468,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "4878:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 472,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4916:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 473,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 467,
                              "src": "4922:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 474,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "4931:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 471,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 802,
                            "src": "4900:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 476,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 478,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4957:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 479,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "4963:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 480,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "4967:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 477,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "4947:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 482,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 465,
                        "id": 484,
                        "nodeType": "Return",
                        "src": "4983:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 455,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:3",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 486,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 462,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "4779:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "4793:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "4805:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:3"
                  },
                  "returnParameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 464,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "4844:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 463,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:3"
                  },
                  "scope": 803,
                  "src": "4757:244:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 532,
                    "nodeType": "Block",
                    "src": "5443:231:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 496,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "5457:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 497,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 510,
                        "nodeType": "IfStatement",
                        "src": "5453:86:3",
                        "trueBody": {
                          "id": 509,
                          "nodeType": "Block",
                          "src": "5477:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 505,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 504,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 503,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 506,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 502,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 168,
                                  "src": "5498:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 508,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 511,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "5552:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 512,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 525,
                        "nodeType": "IfStatement",
                        "src": "5548:86:3",
                        "trueBody": {
                          "id": 524,
                          "nodeType": "Block",
                          "src": "5570:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 520,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 519,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 518,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 517,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 173,
                                  "src": "5591:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 523,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 527,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5651:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 528,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "5657:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 529,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 493,
                              "src": "5661:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 526,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "5643:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 531,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 487,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 533,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 533,
                        "src": "5393:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 533,
                        "src": "5407:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 533,
                        "src": "5419:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:3"
                  },
                  "returnParameters": {
                    "id": 495,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:3"
                  },
                  "scope": 803,
                  "src": "5374:300:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 609,
                    "nodeType": "Block",
                    "src": "6064:1032:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 543,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "6078:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 544,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 580,
                          "nodeType": "Block",
                          "src": "6252:362:3",
                          "statements": [
                            {
                              "assignments": [
                                555
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 555,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 580,
                                  "src": "6266:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 554,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 559,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 556,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 311,
                                  "src": "6288:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 558,
                                "indexExpression": {
                                  "id": 557,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6298:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 560,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 555,
                                  "src": "6321:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 561,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 540,
                                  "src": "6335:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 570,
                              "nodeType": "IfStatement",
                              "src": "6317:115:3",
                              "trueBody": {
                                "id": 569,
                                "nodeType": "Block",
                                "src": "6342:90:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 564,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 536,
                                          "src": "6392:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 565,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 555,
                                          "src": "6398:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 566,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 540,
                                          "src": "6411:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 563,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 163,
                                        "src": "6367:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 567,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 568,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 579,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 577,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 571,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 311,
                                        "src": "6552:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 573,
                                      "indexExpression": {
                                        "id": 572,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 536,
                                        "src": "6562:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 576,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 574,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 555,
                                        "src": "6570:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 575,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 540,
                                        "src": "6584:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 578,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 581,
                        "nodeType": "IfStatement",
                        "src": "6074:540:3",
                        "trueBody": {
                          "id": 553,
                          "nodeType": "Block",
                          "src": "6098:148:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 549,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 319,
                                  "src": "6214:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 550,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 540,
                                  "src": "6230:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 552,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 582,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "6628:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 583,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 601,
                          "nodeType": "Block",
                          "src": "6843:206:3",
                          "statements": [
                            {
                              "id": 600,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 598,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 594,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 311,
                                        "src": "7002:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 596,
                                      "indexExpression": {
                                        "id": 595,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "7012:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 597,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 540,
                                      "src": "7019:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 599,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 602,
                        "nodeType": "IfStatement",
                        "src": "6624:425:3",
                        "trueBody": {
                          "id": 593,
                          "nodeType": "Block",
                          "src": "6646:191:3",
                          "statements": [
                            {
                              "id": 592,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 588,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 319,
                                      "src": "6791:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 589,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 540,
                                      "src": "6807:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 591,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 604,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "7073:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 605,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 538,
                              "src": "7079:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 606,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "7083:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 603,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "7064:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 608,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 534,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:3",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 610,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 541,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "6006:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 538,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "6020:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 537,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 540,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "6032:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:3"
                  },
                  "returnParameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:3"
                  },
                  "scope": 803,
                  "src": "5989:1107:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 642,
                    "nodeType": "Block",
                    "src": "7495:152:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 618,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "7509:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 619,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 632,
                        "nodeType": "IfStatement",
                        "src": "7505:91:3",
                        "trueBody": {
                          "id": 631,
                          "nodeType": "Block",
                          "src": "7532:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 627,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 626,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 625,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 628,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 624,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 173,
                                  "src": "7553:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 630,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 634,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 638,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "7625:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 639,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "7634:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 633,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "7605:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 641,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 611,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:3",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 643,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 616,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 613,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "7454:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 615,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 643,
                        "src": "7471:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 614,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:3"
                  },
                  "returnParameters": {
                    "id": 617,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:3"
                  },
                  "scope": 803,
                  "src": "7439:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 675,
                    "nodeType": "Block",
                    "src": "8021:150:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 651,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 646,
                            "src": "8035:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 652,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 665,
                        "nodeType": "IfStatement",
                        "src": "8031:89:3",
                        "trueBody": {
                          "id": 664,
                          "nodeType": "Block",
                          "src": "8058:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 660,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 658,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 661,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 657,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 168,
                                  "src": "8079:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 663,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 667,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 646,
                              "src": "8137:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 670,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 668,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 672,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 648,
                              "src": "8158:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 666,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "8129:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 674,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 644,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:3",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 676,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 646,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "7980:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "7997:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:3"
                  },
                  "returnParameters": {
                    "id": 650,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:3"
                  },
                  "scope": 803,
                  "src": "7965:206:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 693,
                    "nodeType": "Block",
                    "src": "8781:54:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 687,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "8800:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 688,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "8807:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 689,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "8816:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 686,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              694,
                              754
                            ],
                            "referencedDeclaration": 754,
                            "src": "8791:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 692,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 677,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:3",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 694,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 694,
                        "src": "8725:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 694,
                        "src": "8740:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 694,
                        "src": "8757:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:3"
                  },
                  "returnParameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:3"
                  },
                  "scope": 803,
                  "src": "8707:128:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 753,
                    "nodeType": "Block",
                    "src": "9780:334:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 706,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "9794:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 707,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 720,
                        "nodeType": "IfStatement",
                        "src": "9790:89:3",
                        "trueBody": {
                          "id": 719,
                          "nodeType": "Block",
                          "src": "9815:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 715,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 714,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 713,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 712,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 187,
                                  "src": "9836:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 718,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 721,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "9892:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 724,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 722,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 735,
                        "nodeType": "IfStatement",
                        "src": "9888:90:3",
                        "trueBody": {
                          "id": 734,
                          "nodeType": "Block",
                          "src": "9915:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 730,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 729,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 728,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 727,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 192,
                                  "src": "9936:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 733,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 736,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 317,
                                "src": "9987:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 739,
                              "indexExpression": {
                                "id": 737,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 697,
                                "src": "9999:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 740,
                            "indexExpression": {
                              "id": 738,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "10006:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 741,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "10017:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 743,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:3"
                      },
                      {
                        "condition": {
                          "id": 744,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 703,
                          "src": "10036:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 752,
                        "nodeType": "IfStatement",
                        "src": "10032:76:3",
                        "trueBody": {
                          "id": 751,
                          "nodeType": "Block",
                          "src": "10047:61:3",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 746,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "10075:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 747,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 699,
                                    "src": "10082:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 748,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 701,
                                    "src": "10091:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 745,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 824,
                                  "src": "10066:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 750,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 695,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:3",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 754,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "9700:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "9715:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "9732:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "9747:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:3"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:3"
                  },
                  "scope": 803,
                  "src": "9682:432:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 801,
                    "nodeType": "Block",
                    "src": "10485:387:3",
                    "statements": [
                      {
                        "assignments": [
                          765
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 765,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 801,
                            "src": "10495:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 764,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 770,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 767,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 757,
                              "src": "10532:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 768,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 759,
                              "src": "10539:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 766,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "10522:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 771,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "10561:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 773,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 772,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10580:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:3",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 800,
                        "nodeType": "IfStatement",
                        "src": "10557:309:3",
                        "trueBody": {
                          "id": 799,
                          "nodeType": "Block",
                          "src": "10599:267:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 778,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 765,
                                  "src": "10617:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 779,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "10636:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 788,
                              "nodeType": "IfStatement",
                              "src": "10613:130:3",
                              "trueBody": {
                                "id": 787,
                                "nodeType": "Block",
                                "src": "10643:100:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 782,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 759,
                                          "src": "10695:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 783,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 765,
                                          "src": "10704:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 784,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10722:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 781,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 182,
                                        "src": "10668:26:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 785,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 786,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 798,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 790,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 757,
                                        "src": "10793:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 791,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 759,
                                        "src": "10800:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 794,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 792,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 765,
                                          "src": "10809:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 793,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10828:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 795,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 789,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        694,
                                        754
                                      ],
                                      "referencedDeclaration": 754,
                                      "src": "10784:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 797,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:3"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 755,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:3",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 802,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "10421:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 759,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "10436:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 758,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 761,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 802,
                        "src": "10453:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 760,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:3"
                  },
                  "returnParameters": {
                    "id": 763,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:3"
                  },
                  "scope": 803,
                  "src": "10396:476:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 804,
              "src": "1106:9768:3",
              "usedErrors": [
                163,
                168,
                173,
                182,
                187,
                192
              ],
              "usedEvents": [
                815,
                824
              ]
            }
          ],
          "src": "105:10770:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              881
            ]
          },
          "id": 882,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 805,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 806,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:4",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 881,
              "linearizedBaseContracts": [
                881
              ],
              "name": "IERC20",
              "nameLocation": "214:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 807,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 815,
                  "name": "Transfer",
                  "nameLocation": "396:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 814,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 809,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "405:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 811,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 813,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "447:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:4"
                  },
                  "src": "390:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 816,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 824,
                  "name": "Approval",
                  "nameLocation": "627:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 818,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 824,
                        "src": "636:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 820,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 824,
                        "src": "659:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 822,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 824,
                        "src": "684:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:4"
                  },
                  "src": "621:78:4"
                },
                {
                  "documentation": {
                    "id": 825,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 830,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:4"
                  },
                  "returnParameters": {
                    "id": 829,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 828,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 830,
                        "src": "821:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 827,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:4"
                  },
                  "scope": 881,
                  "src": "775:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 831,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 838,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 833,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 838,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 832,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 836,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 838,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 881,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 839,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 848,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 841,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "1222:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 840,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "1234:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:4"
                  },
                  "returnParameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 846,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "1267:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:4"
                  },
                  "scope": 881,
                  "src": "1204:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 849,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 858,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 851,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "1567:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "1582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:4"
                  },
                  "returnParameters": {
                    "id": 857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 856,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "1622:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 855,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:4"
                  },
                  "scope": 881,
                  "src": "1548:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 859,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 868,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 861,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 868,
                        "src": "2326:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 860,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 863,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 868,
                        "src": "2343:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 862,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:4"
                  },
                  "returnParameters": {
                    "id": 867,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 868,
                        "src": "2376:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:4"
                  },
                  "scope": 881,
                  "src": "2309:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 869,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 880,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "2712:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 873,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "2726:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "2738:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:4"
                  },
                  "returnParameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 880,
                        "src": "2771:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:4"
                  },
                  "scope": 881,
                  "src": "2690:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 882,
              "src": "204:2575:4",
              "usedErrors": [],
              "usedEvents": [
                815,
                824
              ]
            }
          ],
          "src": "106:2674:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              881
            ],
            "IERC20Metadata": [
              907
            ]
          },
          "id": 908,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 883,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 885,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 908,
              "sourceUnit": 882,
              "src": "151:37:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 884,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 881,
                    "src": "159:6:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 887,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 881,
                    "src": "306:6:5"
                  },
                  "id": 888,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:5"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 886,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:5",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 907,
              "linearizedBaseContracts": [
                907,
                881
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 889,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:5",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 894,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 890,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:5"
                  },
                  "returnParameters": {
                    "id": 893,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 892,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 894,
                        "src": "417:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 891,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:5"
                  },
                  "scope": 907,
                  "src": "378:54:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 895,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:5",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 900,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 896,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:5"
                  },
                  "returnParameters": {
                    "id": 899,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 898,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 900,
                        "src": "540:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 897,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:5"
                  },
                  "scope": 907,
                  "src": "499:56:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 901,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:5",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 906,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 902,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:5"
                  },
                  "returnParameters": {
                    "id": 905,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 904,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 906,
                        "src": "674:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 903,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:5"
                  },
                  "scope": 907,
                  "src": "631:50:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 908,
              "src": "278:405:5",
              "usedErrors": [],
              "usedEvents": [
                815,
                824
              ]
            }
          ],
          "src": "125:559:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              937
            ]
          },
          "id": 938,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 909,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:6"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 910,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:6",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 937,
              "linearizedBaseContracts": [
                937
              ],
              "name": "Context",
              "nameLocation": "642:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 918,
                    "nodeType": "Block",
                    "src": "718:34:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 915,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 914,
                        "id": 917,
                        "nodeType": "Return",
                        "src": "728:17:6"
                      }
                    ]
                  },
                  "id": 919,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:6"
                  },
                  "returnParameters": {
                    "id": 914,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 913,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "709:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 912,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:6"
                  },
                  "scope": 937,
                  "src": "656:96:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 927,
                    "nodeType": "Block",
                    "src": "825:32:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 924,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:6",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 923,
                        "id": 926,
                        "nodeType": "Return",
                        "src": "835:15:6"
                      }
                    ]
                  },
                  "id": 928,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 920,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:6"
                  },
                  "returnParameters": {
                    "id": 923,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 928,
                        "src": "809:14:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:6"
                  },
                  "scope": 937,
                  "src": "758:99:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 935,
                    "nodeType": "Block",
                    "src": "935:25:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 932,
                        "id": 934,
                        "nodeType": "Return",
                        "src": "945:8:6"
                      }
                    ]
                  },
                  "id": 936,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 929,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:6"
                  },
                  "returnParameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 931,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 936,
                        "src": "926:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 930,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:6"
                  },
                  "scope": 937,
                  "src": "863:97:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 938,
              "src": "624:338:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              949
            ]
          },
          "id": 950,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 939,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 940,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:7",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 949,
              "linearizedBaseContracts": [
                949
              ],
              "name": "IERC165",
              "nameLocation": "432:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 941,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:7",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 948,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 944,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 943,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 948,
                        "src": "818:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 942,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:7"
                  },
                  "returnParameters": {
                    "id": 947,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 946,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 948,
                        "src": "861:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 945,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:7"
                  },
                  "scope": 949,
                  "src": "791:76:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 950,
              "src": "422:447:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:7"
        },
        "id": 7
      },
      "contracts/SuperchainPoints.sol": {
        "ast": {
          "absolutePath": "contracts/SuperchainPoints.sol",
          "exportedSymbols": {
            "ERC20": [
              803
            ],
            "IERC165": [
              949
            ],
            "IERC20": [
              881
            ],
            "IERC7802": [
              1270
            ],
            "ISuperchainPoints": [
              1332
            ],
            "Ownable": [
              147
            ],
            "PredeployAddresses": [
              1364
            ],
            "SuperchainPoints": [
              1228
            ]
          },
          "id": 1229,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 951,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:8"
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPoints.sol",
              "file": "./interfaces/ISuperchainPoints.sol",
              "id": 953,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1229,
              "sourceUnit": 1333,
              "src": "58:69:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 952,
                    "name": "ISuperchainPoints",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1332,
                    "src": "66:17:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IERC7802.sol",
              "file": "./interfaces/IERC7802.sol",
              "id": 956,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1229,
              "sourceUnit": 1271,
              "src": "128:60:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 954,
                    "name": "IERC7802",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1270,
                    "src": "136:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 955,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 949,
                    "src": "146:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 958,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1229,
              "sourceUnit": 148,
              "src": "189:67:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 957,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "197:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 961,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1229,
              "sourceUnit": 804,
              "src": "257:76:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 959,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 803,
                    "src": "265:5:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 960,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 881,
                    "src": "272:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/libraries/SuperchainPredeployAddresses.sol",
              "file": "./libraries/SuperchainPredeployAddresses.sol",
              "id": 963,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1229,
              "sourceUnit": 1365,
              "src": "334:80:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 962,
                    "name": "PredeployAddresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1364,
                    "src": "342:18:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 965,
                    "name": "ISuperchainPoints",
                    "nameLocations": [
                      "673:17:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1332,
                    "src": "673:17:8"
                  },
                  "id": 966,
                  "nodeType": "InheritanceSpecifier",
                  "src": "673:17:8"
                },
                {
                  "baseName": {
                    "id": 967,
                    "name": "ERC20",
                    "nameLocations": [
                      "692:5:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 803,
                    "src": "692:5:8"
                  },
                  "id": 968,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:5:8"
                },
                {
                  "baseName": {
                    "id": 969,
                    "name": "Ownable",
                    "nameLocations": [
                      "699:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "699:7:8"
                  },
                  "id": 970,
                  "nodeType": "InheritanceSpecifier",
                  "src": "699:7:8"
                }
              ],
              "canonicalName": "SuperchainPoints",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 964,
                "nodeType": "StructuredDocumentation",
                "src": "416:228:8",
                "text": "@title SuperchainPoints\n @notice A standard ERC20 extension implementing IERC7802 for unified cross-chain fungibility across\n         the Superchain. Allows the SuperchainTokenBridge to mint and burn tokens as needed."
              },
              "fullyImplemented": true,
              "id": 1228,
              "linearizedBaseContracts": [
                1228,
                147,
                803,
                193,
                907,
                1332,
                1301,
                1286,
                1270,
                949,
                881,
                937
              ],
              "name": "SuperchainPoints",
              "nameLocation": "653:16:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "claimable",
                  "nameLocation": "750:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1228,
                  "src": "713:46:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 973,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 971,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "721:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "713:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 972,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "732:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 978,
                  "mutability": "mutable",
                  "name": "claimed",
                  "nameLocation": "802:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1228,
                  "src": "765:44:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 977,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 975,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "773:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "765:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 976,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "784:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 994,
                    "nodeType": "Block",
                    "src": "950:2:8",
                    "statements": []
                  },
                  "id": 995,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 987,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 982,
                          "src": "921:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 988,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 984,
                          "src": "927:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 989,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 986,
                        "name": "ERC20",
                        "nameLocations": [
                          "915:5:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 803,
                        "src": "915:5:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "915:19:8"
                    },
                    {
                      "arguments": [
                        {
                          "id": 991,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 980,
                          "src": "943:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 992,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 990,
                        "name": "Ownable",
                        "nameLocations": [
                          "935:7:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "935:7:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "935:14:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "845:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "837:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 982,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "874:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "860:18:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 981,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "860:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "902:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "888:20:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "888:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "827:87:8"
                  },
                  "returnParameters": {
                    "id": 993,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "950:0:8"
                  },
                  "scope": 1228,
                  "src": "816:136:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1319
                  ],
                  "body": {
                    "id": 1049,
                    "nodeType": "Block",
                    "src": "1113:263:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1007,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "1127:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 1008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1133:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1127:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1009,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1002,
                              "src": "1143:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1151:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1143:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1127:30:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1016,
                        "nodeType": "IfStatement",
                        "src": "1123:84:8",
                        "trueBody": {
                          "id": 1015,
                          "nodeType": "Block",
                          "src": "1159:48:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1012,
                                  "name": "LengthMismatch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1285,
                                  "src": "1180:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1180:16:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1014,
                              "nodeType": "RevertStatement",
                              "src": "1173:23:8"
                            }
                          ]
                        }
                      },
                      {
                        "body": {
                          "id": 1047,
                          "nodeType": "Block",
                          "src": "1260:110:8",
                          "statements": [
                            {
                              "expression": {
                                "id": 1036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1028,
                                    "name": "claimable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 974,
                                    "src": "1274:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1032,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 1029,
                                      "name": "users",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 999,
                                      "src": "1284:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1031,
                                    "indexExpression": {
                                      "id": 1030,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1018,
                                      "src": "1290:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1284:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1274:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1033,
                                    "name": "amounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1002,
                                    "src": "1297:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 1035,
                                  "indexExpression": {
                                    "id": 1034,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1018,
                                    "src": "1305:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1297:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1274:33:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1037,
                              "nodeType": "ExpressionStatement",
                              "src": "1274:33:8"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1039,
                                      "name": "users",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 999,
                                      "src": "1338:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1041,
                                    "indexExpression": {
                                      "id": 1040,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1018,
                                      "src": "1344:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1338:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1042,
                                      "name": "amounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1002,
                                      "src": "1348:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 1044,
                                    "indexExpression": {
                                      "id": 1043,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1018,
                                      "src": "1356:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1348:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1038,
                                  "name": "TokensAdded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1293,
                                  "src": "1326:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1326:33:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1046,
                              "nodeType": "EmitStatement",
                              "src": "1321:38:8"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1021,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1018,
                            "src": "1237:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1022,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "1241:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1247:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1241:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1237:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1048,
                        "initializationExpression": {
                          "assignments": [
                            1018
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1018,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1230:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 1048,
                              "src": "1222:9:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1017,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1222:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1020,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1234:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1222:13:8"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1255:3:8",
                            "subExpression": {
                              "id": 1025,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1018,
                              "src": "1255:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1027,
                          "nodeType": "ExpressionStatement",
                          "src": "1255:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "1217:153:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 996,
                    "nodeType": "StructuredDocumentation",
                    "src": "958:33:8",
                    "text": "@inheritdoc ISuperchainPoints"
                  },
                  "functionSelector": "9bdd8013",
                  "id": 1050,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1005,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1004,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1103:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1103:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1103:9:8"
                    }
                  ],
                  "name": "addClaimable",
                  "nameLocation": "1005:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1003,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 999,
                        "mutability": "mutable",
                        "name": "users",
                        "nameLocation": "1046:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1050,
                        "src": "1027:24:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 997,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1027:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 998,
                          "nodeType": "ArrayTypeName",
                          "src": "1027:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1002,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "1080:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1050,
                        "src": "1061:26:8",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1000,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1061:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1001,
                          "nodeType": "ArrayTypeName",
                          "src": "1061:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1017:76:8"
                  },
                  "returnParameters": {
                    "id": 1006,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1113:0:8"
                  },
                  "scope": 1228,
                  "src": "996:380:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1327
                  ],
                  "body": {
                    "id": 1066,
                    "nodeType": "Block",
                    "src": "1488:55:8",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1058,
                              "name": "claimable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 974,
                              "src": "1505:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1060,
                            "indexExpression": {
                              "id": 1059,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "1515:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1505:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1061,
                              "name": "claimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "1523:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1063,
                            "indexExpression": {
                              "id": 1062,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "1531:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1523:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1505:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1057,
                        "id": 1065,
                        "nodeType": "Return",
                        "src": "1498:38:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1051,
                    "nodeType": "StructuredDocumentation",
                    "src": "1382:33:8",
                    "text": "@inheritdoc ISuperchainPoints"
                  },
                  "functionSelector": "a583024b",
                  "id": 1067,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimable",
                  "nameLocation": "1429:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1053,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1450:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "1442:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1052,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1442:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1441:14:8"
                  },
                  "returnParameters": {
                    "id": 1057,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1056,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "1479:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1479:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1478:9:8"
                  },
                  "scope": 1228,
                  "src": "1420:123:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1331
                  ],
                  "body": {
                    "id": 1118,
                    "nodeType": "Block",
                    "src": "1613:381:8",
                    "statements": [
                      {
                        "assignments": [
                          1072
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1072,
                            "mutability": "mutable",
                            "name": "total",
                            "nameLocation": "1631:5:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1118,
                            "src": "1623:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1071,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1623:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1077,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1073,
                            "name": "claimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "1639:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1076,
                          "indexExpression": {
                            "expression": {
                              "id": 1074,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1649:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1653:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1649:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1639:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1623:37:8"
                      },
                      {
                        "assignments": [
                          1079
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1079,
                            "mutability": "mutable",
                            "name": "alreadyClaimed",
                            "nameLocation": "1678:14:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1118,
                            "src": "1670:22:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1078,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1670:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1084,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1080,
                            "name": "claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "1695:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1083,
                          "indexExpression": {
                            "expression": {
                              "id": 1081,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1703:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1707:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1703:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1695:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1670:44:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1085,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "1728:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1086,
                            "name": "alreadyClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "1737:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1728:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1092,
                        "nodeType": "IfStatement",
                        "src": "1724:77:8",
                        "trueBody": {
                          "id": 1091,
                          "nodeType": "Block",
                          "src": "1753:48:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1088,
                                  "name": "NothingToClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1282,
                                  "src": "1774:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1774:16:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1090,
                              "nodeType": "RevertStatement",
                              "src": "1767:23:8"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1094
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1094,
                            "mutability": "mutable",
                            "name": "amountToClaim",
                            "nameLocation": "1819:13:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1118,
                            "src": "1811:21:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1093,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1811:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1098,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1095,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "1835:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1096,
                            "name": "alreadyClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "1843:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1835:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1811:46:8"
                      },
                      {
                        "expression": {
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1099,
                              "name": "claimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 978,
                              "src": "1867:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1102,
                            "indexExpression": {
                              "expression": {
                                "id": 1100,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1875:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1879:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1875:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1867:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1103,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "1889:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1867:27:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "1867:27:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1107,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1911:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1915:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1911:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1109,
                              "name": "amountToClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1094,
                              "src": "1923:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1106,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "1905:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1905:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1111,
                        "nodeType": "ExpressionStatement",
                        "src": "1905:32:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1113,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1961:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1965:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1961:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1115,
                              "name": "amountToClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1094,
                              "src": "1973:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1112,
                            "name": "Claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1300,
                            "src": "1953:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1953:34:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1117,
                        "nodeType": "EmitStatement",
                        "src": "1948:39:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1068,
                    "nodeType": "StructuredDocumentation",
                    "src": "1549:33:8",
                    "text": "@inheritdoc ISuperchainPoints"
                  },
                  "functionSelector": "4e71d92d",
                  "id": 1119,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claim",
                  "nameLocation": "1596:5:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1069,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1601:2:8"
                  },
                  "returnParameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1613:0:8"
                  },
                  "scope": 1228,
                  "src": "1587:407:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1134,
                    "nodeType": "Block",
                    "src": "2191:34:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1130,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "2207:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1131,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1124,
                              "src": "2211:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1129,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "2201:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2201:17:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1133,
                        "nodeType": "ExpressionStatement",
                        "src": "2201:17:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1120,
                    "nodeType": "StructuredDocumentation",
                    "src": "2000:125:8",
                    "text": "@notice Allows owner to mint tokens\n @param to address that receives the tokens\n @param amount token amount"
                  },
                  "functionSelector": "40c10f19",
                  "id": 1135,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1127,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1126,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2181:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2181:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2181:9:8"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "2139:4:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2152:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1135,
                        "src": "2144:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2144:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2164:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1135,
                        "src": "2156:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2156:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2143:28:8"
                  },
                  "returnParameters": {
                    "id": 1128,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2191:0:8"
                  },
                  "scope": 1228,
                  "src": "2130:95:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1261
                  ],
                  "body": {
                    "id": 1165,
                    "nodeType": "Block",
                    "src": "2323:210:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1143,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2337:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2341:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2337:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1145,
                              "name": "PredeployAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1364,
                              "src": "2351:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PredeployAddresses_$1364_$",
                                "typeString": "type(library PredeployAddresses)"
                              }
                            },
                            "id": 1146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2370:23:8",
                            "memberName": "SUPERCHAIN_TOKEN_BRIDGE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1359,
                            "src": "2351:42:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2337:56:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1152,
                        "nodeType": "IfStatement",
                        "src": "2333:108:8",
                        "trueBody": {
                          "id": 1151,
                          "nodeType": "Block",
                          "src": "2395:46:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1148,
                                  "name": "Unauthorized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1279,
                                  "src": "2416:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2416:14:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1150,
                              "nodeType": "RevertStatement",
                              "src": "2409:21:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1154,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1138,
                              "src": "2457:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1155,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "2462:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1153,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "2451:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2451:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1157,
                        "nodeType": "ExpressionStatement",
                        "src": "2451:19:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1159,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1138,
                              "src": "2501:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1160,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1140,
                              "src": "2506:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1161,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2515:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2519:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2515:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1158,
                            "name": "CrosschainMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1244,
                            "src": "2486:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address)"
                            }
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2486:40:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1164,
                        "nodeType": "EmitStatement",
                        "src": "2481:45:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1136,
                    "nodeType": "StructuredDocumentation",
                    "src": "2231:24:8",
                    "text": "@inheritdoc IERC7802"
                  },
                  "functionSelector": "18bf5077",
                  "id": 1166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "crosschainMint",
                  "nameLocation": "2269:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1138,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "2292:3:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1166,
                        "src": "2284:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1137,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2284:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1140,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2305:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1166,
                        "src": "2297:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1139,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2297:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2283:30:8"
                  },
                  "returnParameters": {
                    "id": 1142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2323:0:8"
                  },
                  "scope": 1228,
                  "src": "2260:273:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1269
                  ],
                  "body": {
                    "id": 1196,
                    "nodeType": "Block",
                    "src": "2633:214:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1174,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2647:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2651:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2647:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1176,
                              "name": "PredeployAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1364,
                              "src": "2661:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PredeployAddresses_$1364_$",
                                "typeString": "type(library PredeployAddresses)"
                              }
                            },
                            "id": 1177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2680:23:8",
                            "memberName": "SUPERCHAIN_TOKEN_BRIDGE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1359,
                            "src": "2661:42:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2647:56:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1183,
                        "nodeType": "IfStatement",
                        "src": "2643:108:8",
                        "trueBody": {
                          "id": 1182,
                          "nodeType": "Block",
                          "src": "2705:46:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1179,
                                  "name": "Unauthorized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1279,
                                  "src": "2726:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2726:14:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1181,
                              "nodeType": "RevertStatement",
                              "src": "2719:21:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1185,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1169,
                              "src": "2767:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1186,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "2774:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1184,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 676,
                            "src": "2761:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2761:21:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1188,
                        "nodeType": "ExpressionStatement",
                        "src": "2761:21:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1190,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1169,
                              "src": "2813:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1191,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1171,
                              "src": "2820:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1192,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2829:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2833:6:8",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2829:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1189,
                            "name": "CrosschainBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "2798:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (address,uint256,address)"
                            }
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2798:42:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1195,
                        "nodeType": "EmitStatement",
                        "src": "2793:47:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1167,
                    "nodeType": "StructuredDocumentation",
                    "src": "2539:24:8",
                    "text": "@inheritdoc IERC7802"
                  },
                  "functionSelector": "2b8c49e3",
                  "id": 1197,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "crosschainBurn",
                  "nameLocation": "2577:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1169,
                        "mutability": "mutable",
                        "name": "_from",
                        "nameLocation": "2600:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1197,
                        "src": "2592:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2615:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1197,
                        "src": "2607:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2607:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:32:8"
                  },
                  "returnParameters": {
                    "id": 1173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2633:0:8"
                  },
                  "scope": 1228,
                  "src": "2568:279:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    948
                  ],
                  "body": {
                    "id": 1226,
                    "nodeType": "Block",
                    "src": "2978:191:8",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1205,
                                "name": "_interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "3007:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1207,
                                      "name": "IERC7802",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1270,
                                      "src": "3028:8:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC7802_$1270_$",
                                        "typeString": "type(contract IERC7802)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_IERC7802_$1270_$",
                                        "typeString": "type(contract IERC7802)"
                                      }
                                    ],
                                    "id": 1206,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "3023:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 1208,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3023:14:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_IERC7802_$1270",
                                    "typeString": "type(contract IERC7802)"
                                  }
                                },
                                "id": 1209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3038:11:8",
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "3023:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "3007:42:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 1216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1211,
                                "name": "_interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1200,
                                "src": "3065:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1213,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 881,
                                      "src": "3086:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$881_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$881_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    ],
                                    "id": 1212,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "3081:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 1214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3081:12:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20_$881",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "3094:11:8",
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "3081:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "3065:40:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3007:98:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 1223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1218,
                              "name": "_interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "3121:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1220,
                                    "name": "IERC165",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 949,
                                    "src": "3142:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC165_$949_$",
                                      "typeString": "type(contract IERC165)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IERC165_$949_$",
                                      "typeString": "type(contract IERC165)"
                                    }
                                  ],
                                  "id": 1219,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3137:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3137:13:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$949",
                                  "typeString": "type(contract IERC165)"
                                }
                              },
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3151:11:8",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "3137:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "3121:41:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3007:155:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1204,
                        "id": 1225,
                        "nodeType": "Return",
                        "src": "2988:174:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1198,
                    "nodeType": "StructuredDocumentation",
                    "src": "2853:23:8",
                    "text": "@inheritdoc IERC165"
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1227,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2890:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1200,
                        "mutability": "mutable",
                        "name": "_interfaceId",
                        "nameLocation": "2924:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "2917:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1199,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2917:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2907:35:8"
                  },
                  "returnParameters": {
                    "id": 1204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "2972:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2972:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2971:6:8"
                  },
                  "scope": 1228,
                  "src": "2881:288:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1229,
              "src": "644:2527:8",
              "usedErrors": [
                13,
                18,
                163,
                168,
                173,
                182,
                187,
                192,
                1279,
                1282,
                1285
              ],
              "usedEvents": [
                24,
                815,
                824,
                1244,
                1253,
                1293,
                1300
              ]
            }
          ],
          "src": "32:3140:8"
        },
        "id": 8
      },
      "contracts/interfaces/IERC7802.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IERC7802.sol",
          "exportedSymbols": {
            "IERC165": [
              949
            ],
            "IERC7802": [
              1270
            ]
          },
          "id": 1271,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1230,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC165.sol",
              "id": 1232,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1271,
              "sourceUnit": 152,
              "src": "58:71:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1231,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 949,
                    "src": "66:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1234,
                    "name": "IERC165",
                    "nameLocations": [
                      "239:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 949,
                    "src": "239:7:9"
                  },
                  "id": 1235,
                  "nodeType": "InheritanceSpecifier",
                  "src": "239:7:9"
                }
              ],
              "canonicalName": "IERC7802",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1233,
                "nodeType": "StructuredDocumentation",
                "src": "131:86:9",
                "text": "@title IERC7802\n @notice Defines the interface for crosschain ERC20 transfers."
              },
              "fullyImplemented": false,
              "id": 1270,
              "linearizedBaseContracts": [
                1270,
                949
              ],
              "name": "IERC7802",
              "nameLocation": "227:8:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1236,
                    "nodeType": "StructuredDocumentation",
                    "src": "253:272:9",
                    "text": "@notice Emitted when a crosschain transfer mints tokens.\n @param to       Address of the account tokens are being minted for.\n @param amount   Amount of tokens minted.\n @param sender   Address of the account that finilized the crosschain transfer."
                  },
                  "eventSelector": "de22baff038e3a3e08407cbdf617deed74e869a7ba517df611e33131c6e6ea04",
                  "id": 1244,
                  "name": "CrosschainMint",
                  "nameLocation": "536:14:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1238,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "567:2:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1244,
                        "src": "551:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "551:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1240,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "579:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1244,
                        "src": "571:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1239,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "571:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1242,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "603:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1244,
                        "src": "587:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "587:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "550:60:9"
                  },
                  "src": "530:81:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1245,
                    "nodeType": "StructuredDocumentation",
                    "src": "617:273:9",
                    "text": "@notice Emitted when a crosschain transfer burns tokens.\n @param from     Address of the account tokens are being burned from.\n @param amount   Amount of tokens burned.\n @param sender   Address of the account that initiated the crosschain transfer."
                  },
                  "eventSelector": "b90795a66650155983e242cac3e1ac1a4dc26f8ed2987f3ce416a34e00111fd4",
                  "id": 1253,
                  "name": "CrosschainBurn",
                  "nameLocation": "901:14:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1247,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "932:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "916:20:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1246,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "916:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1249,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "946:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "938:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "938:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1251,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "970:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1253,
                        "src": "954:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "954:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "915:62:9"
                  },
                  "src": "895:83:9"
                },
                {
                  "documentation": {
                    "id": 1254,
                    "nodeType": "StructuredDocumentation",
                    "src": "984:153:9",
                    "text": "@notice Mint tokens through a crosschain transfer.\n @param _to     Address to mint tokens to.\n @param _amount Amount of tokens to mint."
                  },
                  "functionSelector": "18bf5077",
                  "id": 1261,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "crosschainMint",
                  "nameLocation": "1151:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "1174:3:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "1166:11:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1166:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1258,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1187:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "1179:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1257,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1179:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1165:30:9"
                  },
                  "returnParameters": {
                    "id": 1260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1204:0:9"
                  },
                  "scope": 1270,
                  "src": "1142:63:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1262,
                    "nodeType": "StructuredDocumentation",
                    "src": "1211:155:9",
                    "text": "@notice Burn tokens through a crosschain transfer.\n @param _from   Address to burn tokens from.\n @param _amount Amount of tokens to burn."
                  },
                  "functionSelector": "2b8c49e3",
                  "id": 1269,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "crosschainBurn",
                  "nameLocation": "1380:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1264,
                        "mutability": "mutable",
                        "name": "_from",
                        "nameLocation": "1403:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1269,
                        "src": "1395:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1395:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1418:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1269,
                        "src": "1410:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1410:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1394:32:9"
                  },
                  "returnParameters": {
                    "id": 1268,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1435:0:9"
                  },
                  "scope": 1270,
                  "src": "1371:65:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1271,
              "src": "217:1221:9",
              "usedErrors": [],
              "usedEvents": [
                1244,
                1253
              ]
            }
          ],
          "src": "32:1406:9"
        },
        "id": 9
      },
      "contracts/interfaces/ISuperchainPoints.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ISuperchainPoints.sol",
          "exportedSymbols": {
            "IERC20": [
              881
            ],
            "IERC7802": [
              1270
            ],
            "ISuperchainPoints": [
              1332
            ],
            "ISuperchainPointsErrors": [
              1286
            ],
            "ISuperchainPointsEvents": [
              1301
            ]
          },
          "id": 1333,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1272,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:10"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1274,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1333,
              "sourceUnit": 882,
              "src": "58:70:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1273,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 881,
                    "src": "66:6:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IERC7802.sol",
              "file": "./IERC7802.sol",
              "id": 1276,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1333,
              "sourceUnit": 1271,
              "src": "129:40:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1275,
                    "name": "IERC7802",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1270,
                    "src": "137:8:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1286,
              "linearizedBaseContracts": [
                1286
              ],
              "name": "ISuperchainPointsErrors",
              "nameLocation": "181:23:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1277,
                    "nodeType": "StructuredDocumentation",
                    "src": "211:27:10",
                    "text": "@dev Unauthorized error"
                  },
                  "errorSelector": "82b42900",
                  "id": 1279,
                  "name": "Unauthorized",
                  "nameLocation": "249:12:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1278,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "261:2:10"
                  },
                  "src": "243:21:10"
                },
                {
                  "documentation": {
                    "id": 1280,
                    "nodeType": "StructuredDocumentation",
                    "src": "270:25:10",
                    "text": "@dev Nothing to claim"
                  },
                  "errorSelector": "969bf728",
                  "id": 1282,
                  "name": "NothingToClaim",
                  "nameLocation": "306:14:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "320:2:10"
                  },
                  "src": "300:23:10"
                },
                {
                  "documentation": {
                    "id": 1283,
                    "nodeType": "StructuredDocumentation",
                    "src": "329:24:10",
                    "text": "@dev Length mismatch"
                  },
                  "errorSelector": "ff633a38",
                  "id": 1285,
                  "name": "LengthMismatch",
                  "nameLocation": "364:14:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1284,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "378:2:10"
                  },
                  "src": "358:23:10"
                }
              ],
              "scope": 1333,
              "src": "171:212:10",
              "usedErrors": [
                1279,
                1282,
                1285
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsEvents",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1301,
              "linearizedBaseContracts": [
                1301
              ],
              "name": "ISuperchainPointsEvents",
              "nameLocation": "395:23:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1287,
                    "nodeType": "StructuredDocumentation",
                    "src": "425:173:10",
                    "text": "@notice Emitted when tokens are added to be claimable by users.\n @param account The account that added the tokens\n @param amount The amount of tokens added"
                  },
                  "eventSelector": "0eaac1064ee8d13f83091f388597ffb5ff2d2e59f6a16aae2a74ba7f2d13c8d9",
                  "id": 1293,
                  "name": "TokensAdded",
                  "nameLocation": "609:11:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1292,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1289,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "629:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "621:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1288,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "621:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1291,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "646:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "638:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1290,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "638:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "620:33:10"
                  },
                  "src": "603:51:10"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1294,
                    "nodeType": "StructuredDocumentation",
                    "src": "660:153:10",
                    "text": "@notice Emitted when tokens are claimed\n @param account The account that claimed the tokens\n @param amount The amount of tokens claimed"
                  },
                  "eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
                  "id": 1300,
                  "name": "Claimed",
                  "nameLocation": "824:7:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1296,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "840:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1300,
                        "src": "832:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "832:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1298,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "857:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1300,
                        "src": "849:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "849:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "831:33:10"
                  },
                  "src": "818:47:10"
                }
              ],
              "scope": 1333,
              "src": "385:482:10",
              "usedErrors": [],
              "usedEvents": [
                1293,
                1300
              ]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1302,
                    "name": "IERC20",
                    "nameLocations": [
                      "904:6:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 881,
                    "src": "904:6:10"
                  },
                  "id": 1303,
                  "nodeType": "InheritanceSpecifier",
                  "src": "904:6:10"
                },
                {
                  "baseName": {
                    "id": 1304,
                    "name": "IERC7802",
                    "nameLocations": [
                      "916:8:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1270,
                    "src": "916:8:10"
                  },
                  "id": 1305,
                  "nodeType": "InheritanceSpecifier",
                  "src": "916:8:10"
                },
                {
                  "baseName": {
                    "id": 1306,
                    "name": "ISuperchainPointsErrors",
                    "nameLocations": [
                      "930:23:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1286,
                    "src": "930:23:10"
                  },
                  "id": 1307,
                  "nodeType": "InheritanceSpecifier",
                  "src": "930:23:10"
                },
                {
                  "baseName": {
                    "id": 1308,
                    "name": "ISuperchainPointsEvents",
                    "nameLocations": [
                      "959:23:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1301,
                    "src": "959:23:10"
                  },
                  "id": 1309,
                  "nodeType": "InheritanceSpecifier",
                  "src": "959:23:10"
                }
              ],
              "canonicalName": "ISuperchainPoints",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1332,
              "linearizedBaseContracts": [
                1332,
                1301,
                1286,
                1270,
                949,
                881
              ],
              "name": "ISuperchainPoints",
              "nameLocation": "879:17:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1310,
                    "nodeType": "StructuredDocumentation",
                    "src": "989:182:10",
                    "text": "@notice Owner adds tokens to be claimable by users.\n @param users Array of user addresses.\n @param amounts Array of claimable amounts (added to existing claimable)."
                  },
                  "functionSelector": "9bdd8013",
                  "id": 1319,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addClaimable",
                  "nameLocation": "1185:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1313,
                        "mutability": "mutable",
                        "name": "users",
                        "nameLocation": "1226:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1319,
                        "src": "1207:24:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1311,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1207:7:10",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1312,
                          "nodeType": "ArrayTypeName",
                          "src": "1207:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1316,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "1260:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1319,
                        "src": "1241:26:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1314,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1241:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1315,
                          "nodeType": "ArrayTypeName",
                          "src": "1241:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1197:76:10"
                  },
                  "returnParameters": {
                    "id": 1318,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1282:0:10"
                  },
                  "scope": 1332,
                  "src": "1176:107:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1289:92:10",
                    "text": "@notice View how much a user can still claim\n @param account The account to check"
                  },
                  "functionSelector": "a583024b",
                  "id": 1327,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimable",
                  "nameLocation": "1395:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1323,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1322,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1416:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1327,
                        "src": "1408:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1408:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1407:17:10"
                  },
                  "returnParameters": {
                    "id": 1326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1325,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1327,
                        "src": "1448:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1448:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1447:9:10"
                  },
                  "scope": 1332,
                  "src": "1386:71:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1328,
                    "nodeType": "StructuredDocumentation",
                    "src": "1463:52:10",
                    "text": "@notice Claim the tokens assigned to the caller."
                  },
                  "functionSelector": "4e71d92d",
                  "id": 1331,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claim",
                  "nameLocation": "1529:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1534:2:10"
                  },
                  "returnParameters": {
                    "id": 1330,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1545:0:10"
                  },
                  "scope": 1332,
                  "src": "1520:26:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1333,
              "src": "869:679:10",
              "usedErrors": [
                1279,
                1282,
                1285
              ],
              "usedEvents": [
                815,
                824,
                1244,
                1253,
                1293,
                1300
              ]
            }
          ],
          "src": "32:1517:10"
        },
        "id": 10
      },
      "contracts/libraries/SuperchainPredeployAddresses.sol": {
        "ast": {
          "absolutePath": "contracts/libraries/SuperchainPredeployAddresses.sol",
          "exportedSymbols": {
            "PredeployAddresses": [
              1364
            ]
          },
          "id": 1365,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1334,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "PredeployAddresses",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1335,
                "nodeType": "StructuredDocumentation",
                "src": "57:80:11",
                "text": "@title PredeployAddresses\n @notice Subset of the Predeploys.sol library."
              },
              "fullyImplemented": true,
              "id": 1364,
              "linearizedBaseContracts": [
                1364
              ],
              "name": "PredeployAddresses",
              "nameLocation": "146:18:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 1336,
                    "nodeType": "StructuredDocumentation",
                    "src": "171:51:11",
                    "text": "@notice Address of the canonical WETH contract."
                  },
                  "id": 1339,
                  "mutability": "constant",
                  "name": "WETH",
                  "nameLocation": "253:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "227:75:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303036",
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "260:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x4200000000000000000000000000000000000006"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1340,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:50:11",
                    "text": "@notice Address of the CrossL2Inbox predeploy."
                  },
                  "id": 1343,
                  "mutability": "constant",
                  "name": "CROSS_L2_INBOX",
                  "nameLocation": "390:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "364:93:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303232",
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "415:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x4200000000000000000000000000000000000022"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1344,
                    "nodeType": "StructuredDocumentation",
                    "src": "464:64:11",
                    "text": "@notice Address of the L2ToL2CrossDomainMessenger predeploy."
                  },
                  "id": 1347,
                  "mutability": "constant",
                  "name": "L2_TO_L2_CROSS_DOMAIN_MESSENGER",
                  "nameLocation": "559:31:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "533:110:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303233",
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "601:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x4200000000000000000000000000000000000023"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1348,
                    "nodeType": "StructuredDocumentation",
                    "src": "650:52:11",
                    "text": "@notice Address of the SuperchainWETH predeploy."
                  },
                  "id": 1351,
                  "mutability": "constant",
                  "name": "SUPERCHAIN_WETH",
                  "nameLocation": "733:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "707:94:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "707:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303234",
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "759:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x4200000000000000000000000000000000000024"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1352,
                    "nodeType": "StructuredDocumentation",
                    "src": "808:50:11",
                    "text": "@notice Address of the ETHLiquidity predeploy."
                  },
                  "id": 1355,
                  "mutability": "constant",
                  "name": "ETH_LIQUIDITY",
                  "nameLocation": "889:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "863:92:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303235",
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "913:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x4200000000000000000000000000000000000025"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1356,
                    "nodeType": "StructuredDocumentation",
                    "src": "962:59:11",
                    "text": "@notice Address of the SuperchainTokenBridge predeploy."
                  },
                  "id": 1359,
                  "mutability": "constant",
                  "name": "SUPERCHAIN_TOKEN_BRIDGE",
                  "nameLocation": "1052:23:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "1026:102:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307834323030303030303030303030303030303030303030303030303030303030303030303030303238",
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1086:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x4200000000000000000000000000000000000028"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1360,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:61:11",
                    "text": "@notice Address of Promise.sol. This is likely to change."
                  },
                  "id": 1363,
                  "mutability": "constant",
                  "name": "PROMISE",
                  "nameLocation": "1227:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "1201:86:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307846636443303864324446663830444344663165393534633437353942333331364264453836343634",
                    "id": 1362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1245:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xFcdC08d2DFf80DCDf1e954c4759B3316BdE86464"
                  },
                  "visibility": "internal"
                }
              ],
              "scope": 1365,
              "src": "138:1152:11",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:1259:11"
        },
        "id": 11
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"
        }
      },
      "contracts/SuperchainPoints.sol": {
        "SuperchainPoints": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "LengthMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NothingToClaim",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Claimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "CrosschainBurn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "CrosschainMint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "users",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "addClaimable",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "crosschainBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "crosschainMint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "_interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_340": {
                  "entryPoint": null,
                  "id": 340,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_995": {
                  "entryPoint": null,
                  "id": 995,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 142,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 246,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
                  "entryPoint": 409,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 603,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 682,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 545,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 224,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:4428:12",
                    "nodeType": "YulBlock",
                    "src": "0:4428:12",
                    "statements": [
                      {
                        "nativeSrc": "6:3:12",
                        "nodeType": "YulBlock",
                        "src": "6:3:12",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "46:95:12",
                          "nodeType": "YulBlock",
                          "src": "46:95:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "63:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "63:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "70:3:12",
                                        "nodeType": "YulLiteral",
                                        "src": "70:3:12",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "75:10:12",
                                        "nodeType": "YulLiteral",
                                        "src": "75:10:12",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "66:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "66:3:12"
                                    },
                                    "nativeSrc": "66:20:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "66:20:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "56:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "56:6:12"
                                },
                                "nativeSrc": "56:31:12",
                                "nodeType": "YulFunctionCall",
                                "src": "56:31:12"
                              },
                              "nativeSrc": "56:31:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "56:31:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "103:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "103:1:12",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "106:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "106:4:12",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "96:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:6:12"
                                },
                                "nativeSrc": "96:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "96:15:12"
                              },
                              "nativeSrc": "96:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "96:15:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "127:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "127:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "130:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "130:4:12",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "120:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:6:12"
                                },
                                "nativeSrc": "120:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "120:15:12"
                              },
                              "nativeSrc": "120:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "120:15:12"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "14:127:12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14:127:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "210:770:12",
                          "nodeType": "YulBlock",
                          "src": "210:770:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "259:16:12",
                                "nodeType": "YulBlock",
                                "src": "259:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "268:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "268:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "271:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "271:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "261:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "261:6:12"
                                      },
                                      "nativeSrc": "261:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "261:12:12"
                                    },
                                    "nativeSrc": "261:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "261:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "238:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "238:6:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "246:4:12",
                                            "nodeType": "YulLiteral",
                                            "src": "246:4:12",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "234:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "234:3:12"
                                        },
                                        "nativeSrc": "234:17:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "234:17:12"
                                      },
                                      {
                                        "name": "end",
                                        "nativeSrc": "253:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "253:3:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "230:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "230:3:12"
                                    },
                                    "nativeSrc": "230:27:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "230:27:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "223:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "223:6:12"
                                },
                                "nativeSrc": "223:35:12",
                                "nodeType": "YulFunctionCall",
                                "src": "223:35:12"
                              },
                              "nativeSrc": "220:55:12",
                              "nodeType": "YulIf",
                              "src": "220:55:12"
                            },
                            {
                              "nativeSrc": "284:27:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "284:27:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "304:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "304:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "298:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:5:12"
                                },
                                "nativeSrc": "298:13:12",
                                "nodeType": "YulFunctionCall",
                                "src": "298:13:12"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "288:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "288:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "354:22:12",
                                "nodeType": "YulBlock",
                                "src": "354:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "356:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "356:16:12"
                                      },
                                      "nativeSrc": "356:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "356:18:12"
                                    },
                                    "nativeSrc": "356:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "356:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "326:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "326:6:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "342:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "342:2:12",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "346:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "346:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "338:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "338:3:12"
                                        },
                                        "nativeSrc": "338:10:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "338:10:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "350:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "350:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "334:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "334:3:12"
                                    },
                                    "nativeSrc": "334:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "334:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "323:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "323:2:12"
                                },
                                "nativeSrc": "323:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "323:30:12"
                              },
                              "nativeSrc": "320:56:12",
                              "nodeType": "YulIf",
                              "src": "320:56:12"
                            },
                            {
                              "nativeSrc": "385:23:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "385:23:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "405:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "405:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "399:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:5:12"
                                },
                                "nativeSrc": "399:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "399:9:12"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "389:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "389:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "417:85:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "417:85:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "439:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "439:6:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "length",
                                                    "nativeSrc": "463:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "463:6:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "471:4:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "471:4:12",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "459:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "459:3:12"
                                                },
                                                "nativeSrc": "459:17:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "459:17:12"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "482:2:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "482:2:12",
                                                    "type": "",
                                                    "value": "31"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "478:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "478:3:12"
                                                },
                                                "nativeSrc": "478:7:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "478:7:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nativeSrc": "455:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "455:3:12"
                                            },
                                            "nativeSrc": "455:31:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "455:31:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "488:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "488:2:12",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "451:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "451:3:12"
                                        },
                                        "nativeSrc": "451:40:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "451:40:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "497:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "497:2:12",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "493:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "493:3:12"
                                        },
                                        "nativeSrc": "493:7:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "493:7:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "447:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "447:3:12"
                                    },
                                    "nativeSrc": "447:54:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "447:54:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "435:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "435:3:12"
                                },
                                "nativeSrc": "435:67:12",
                                "nodeType": "YulFunctionCall",
                                "src": "435:67:12"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "421:10:12",
                                  "nodeType": "YulTypedName",
                                  "src": "421:10:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "577:22:12",
                                "nodeType": "YulBlock",
                                "src": "577:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "579:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "579:16:12"
                                      },
                                      "nativeSrc": "579:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "579:18:12"
                                    },
                                    "nativeSrc": "579:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "579:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "520:10:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "520:10:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "540:2:12",
                                                "nodeType": "YulLiteral",
                                                "src": "540:2:12",
                                                "type": "",
                                                "value": "64"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "544:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "544:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "536:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "536:3:12"
                                            },
                                            "nativeSrc": "536:10:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "536:10:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "548:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "548:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "532:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "532:3:12"
                                        },
                                        "nativeSrc": "532:18:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "532:18:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "517:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "517:2:12"
                                    },
                                    "nativeSrc": "517:34:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "517:34:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "556:10:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "556:10:12"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "568:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "568:6:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "553:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "553:2:12"
                                    },
                                    "nativeSrc": "553:22:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "553:22:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "514:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "514:2:12"
                                },
                                "nativeSrc": "514:62:12",
                                "nodeType": "YulFunctionCall",
                                "src": "514:62:12"
                              },
                              "nativeSrc": "511:88:12",
                              "nodeType": "YulIf",
                              "src": "511:88:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "615:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "615:2:12",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "619:10:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "619:10:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "608:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "608:6:12"
                                },
                                "nativeSrc": "608:22:12",
                                "nodeType": "YulFunctionCall",
                                "src": "608:22:12"
                              },
                              "nativeSrc": "608:22:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "608:22:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "646:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "646:6:12"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "654:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "654:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "639:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "639:6:12"
                                },
                                "nativeSrc": "639:22:12",
                                "nodeType": "YulFunctionCall",
                                "src": "639:22:12"
                              },
                              "nativeSrc": "639:22:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "639:22:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "713:16:12",
                                "nodeType": "YulBlock",
                                "src": "713:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "722:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "722:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "725:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "725:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "715:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "715:6:12"
                                      },
                                      "nativeSrc": "715:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "715:12:12"
                                    },
                                    "nativeSrc": "715:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "715:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "684:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "684:6:12"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "692:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "692:6:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "680:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "680:3:12"
                                        },
                                        "nativeSrc": "680:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "680:19:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "701:4:12",
                                        "nodeType": "YulLiteral",
                                        "src": "701:4:12",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "676:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "676:3:12"
                                    },
                                    "nativeSrc": "676:30:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "676:30:12"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "708:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "708:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "673:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "673:2:12"
                                },
                                "nativeSrc": "673:39:12",
                                "nodeType": "YulFunctionCall",
                                "src": "673:39:12"
                              },
                              "nativeSrc": "670:59:12",
                              "nodeType": "YulIf",
                              "src": "670:59:12"
                            },
                            {
                              "nativeSrc": "738:10:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "738:10:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "747:1:12",
                                "nodeType": "YulLiteral",
                                "src": "747:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "742:1:12",
                                  "nodeType": "YulTypedName",
                                  "src": "742:1:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "809:91:12",
                                "nodeType": "YulBlock",
                                "src": "809:91:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "memPtr",
                                                  "nativeSrc": "838:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "838:6:12"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "846:1:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "846:1:12"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "834:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "834:3:12"
                                              },
                                              "nativeSrc": "834:14:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "834:14:12"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "850:4:12",
                                              "nodeType": "YulLiteral",
                                              "src": "850:4:12",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "830:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "830:3:12"
                                          },
                                          "nativeSrc": "830:25:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "830:25:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "offset",
                                                      "nativeSrc": "871:6:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "871:6:12"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "879:1:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "879:1:12"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "867:3:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "867:3:12"
                                                  },
                                                  "nativeSrc": "867:14:12",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "867:14:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "883:4:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "883:4:12",
                                                  "type": "",
                                                  "value": "0x20"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "863:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "863:3:12"
                                              },
                                              "nativeSrc": "863:25:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "863:25:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "857:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "857:5:12"
                                          },
                                          "nativeSrc": "857:32:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "857:32:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "823:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "823:6:12"
                                      },
                                      "nativeSrc": "823:67:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "823:67:12"
                                    },
                                    "nativeSrc": "823:67:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "823:67:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "768:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "768:1:12"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "771:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "771:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "765:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "765:2:12"
                                },
                                "nativeSrc": "765:13:12",
                                "nodeType": "YulFunctionCall",
                                "src": "765:13:12"
                              },
                              "nativeSrc": "757:143:12",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "779:21:12",
                                "nodeType": "YulBlock",
                                "src": "779:21:12",
                                "statements": [
                                  {
                                    "nativeSrc": "781:17:12",
                                    "nodeType": "YulAssignment",
                                    "src": "781:17:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "790:1:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "790:1:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "793:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "793:4:12",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "786:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "786:3:12"
                                      },
                                      "nativeSrc": "786:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "786:12:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "781:1:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "781:1:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "761:3:12",
                                "nodeType": "YulBlock",
                                "src": "761:3:12",
                                "statements": []
                              },
                              "src": "757:143:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nativeSrc": "924:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "924:6:12"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "932:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "932:6:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "920:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "920:3:12"
                                        },
                                        "nativeSrc": "920:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "920:19:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "941:4:12",
                                        "nodeType": "YulLiteral",
                                        "src": "941:4:12",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "916:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "916:3:12"
                                    },
                                    "nativeSrc": "916:30:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "916:30:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "948:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "948:1:12",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "909:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "909:6:12"
                                },
                                "nativeSrc": "909:41:12",
                                "nodeType": "YulFunctionCall",
                                "src": "909:41:12"
                              },
                              "nativeSrc": "909:41:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "909:41:12"
                            },
                            {
                              "nativeSrc": "959:15:12",
                              "nodeType": "YulAssignment",
                              "src": "959:15:12",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "968:6:12",
                                "nodeType": "YulIdentifier",
                                "src": "968:6:12"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nativeSrc": "959:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "959:5:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_string_fromMemory",
                        "nativeSrc": "146:834:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "184:6:12",
                            "nodeType": "YulTypedName",
                            "src": "184:6:12",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "192:3:12",
                            "nodeType": "YulTypedName",
                            "src": "192:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nativeSrc": "200:5:12",
                            "nodeType": "YulTypedName",
                            "src": "200:5:12",
                            "type": ""
                          }
                        ],
                        "src": "146:834:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1120:589:12",
                          "nodeType": "YulBlock",
                          "src": "1120:589:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1166:16:12",
                                "nodeType": "YulBlock",
                                "src": "1166:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1175:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1175:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1178:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1178:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1168:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1168:6:12"
                                      },
                                      "nativeSrc": "1168:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1168:12:12"
                                    },
                                    "nativeSrc": "1168:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1168:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1141:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1141:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1150:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1150:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1137:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1137:3:12"
                                    },
                                    "nativeSrc": "1137:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1137:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1162:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1162:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1133:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1133:3:12"
                                },
                                "nativeSrc": "1133:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1133:32:12"
                              },
                              "nativeSrc": "1130:52:12",
                              "nodeType": "YulIf",
                              "src": "1130:52:12"
                            },
                            {
                              "nativeSrc": "1191:29:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1191:29:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1210:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1210:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1204:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1204:5:12"
                                },
                                "nativeSrc": "1204:16:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1204:16:12"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1195:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "1195:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1283:16:12",
                                "nodeType": "YulBlock",
                                "src": "1283:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1292:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1292:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1295:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1295:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1285:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1285:6:12"
                                      },
                                      "nativeSrc": "1285:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1285:12:12"
                                    },
                                    "nativeSrc": "1285:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1285:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1242:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1242:5:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "1253:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "1253:5:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1268:3:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1268:3:12",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1273:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1273:1:12",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1264:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1264:3:12"
                                                },
                                                "nativeSrc": "1264:11:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1264:11:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1277:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "1277:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "1260:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1260:3:12"
                                            },
                                            "nativeSrc": "1260:19:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1260:19:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "1249:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1249:3:12"
                                        },
                                        "nativeSrc": "1249:31:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1249:31:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1239:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1239:2:12"
                                    },
                                    "nativeSrc": "1239:42:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1239:42:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1232:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1232:6:12"
                                },
                                "nativeSrc": "1232:50:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1232:50:12"
                              },
                              "nativeSrc": "1229:70:12",
                              "nodeType": "YulIf",
                              "src": "1229:70:12"
                            },
                            {
                              "nativeSrc": "1308:15:12",
                              "nodeType": "YulAssignment",
                              "src": "1308:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1318:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "1318:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1308:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1308:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1332:39:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1332:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1356:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1356:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1367:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1367:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1352:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1352:3:12"
                                    },
                                    "nativeSrc": "1352:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1352:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1346:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1346:5:12"
                                },
                                "nativeSrc": "1346:25:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1346:25:12"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "1336:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "1336:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1414:16:12",
                                "nodeType": "YulBlock",
                                "src": "1414:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1423:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1423:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1426:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1426:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1416:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1416:6:12"
                                      },
                                      "nativeSrc": "1416:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1416:12:12"
                                    },
                                    "nativeSrc": "1416:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1416:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1386:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1386:6:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1402:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "1402:2:12",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1406:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "1406:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "1398:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1398:3:12"
                                        },
                                        "nativeSrc": "1398:10:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1398:10:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1410:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1410:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1394:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1394:3:12"
                                    },
                                    "nativeSrc": "1394:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1394:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1383:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1383:2:12"
                                },
                                "nativeSrc": "1383:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1383:30:12"
                              },
                              "nativeSrc": "1380:50:12",
                              "nodeType": "YulIf",
                              "src": "1380:50:12"
                            },
                            {
                              "nativeSrc": "1439:71:12",
                              "nodeType": "YulAssignment",
                              "src": "1439:71:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1482:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1482:9:12"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "1493:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1493:6:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1478:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1478:3:12"
                                    },
                                    "nativeSrc": "1478:22:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1478:22:12"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "1502:7:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1502:7:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nativeSrc": "1449:28:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1449:28:12"
                                },
                                "nativeSrc": "1449:61:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1449:61:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1439:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1439:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1519:41:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1519:41:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1545:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1545:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1556:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1556:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1541:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1541:3:12"
                                    },
                                    "nativeSrc": "1541:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1541:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1535:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1535:5:12"
                                },
                                "nativeSrc": "1535:25:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1535:25:12"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nativeSrc": "1523:8:12",
                                  "nodeType": "YulTypedName",
                                  "src": "1523:8:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1605:16:12",
                                "nodeType": "YulBlock",
                                "src": "1605:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1614:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1614:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1617:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1617:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1607:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1607:6:12"
                                      },
                                      "nativeSrc": "1607:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1607:12:12"
                                    },
                                    "nativeSrc": "1607:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1607:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nativeSrc": "1575:8:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1575:8:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1593:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "1593:2:12",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1597:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "1597:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "1589:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1589:3:12"
                                        },
                                        "nativeSrc": "1589:10:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1589:10:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1601:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1601:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1585:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1585:3:12"
                                    },
                                    "nativeSrc": "1585:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1585:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1572:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1572:2:12"
                                },
                                "nativeSrc": "1572:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1572:32:12"
                              },
                              "nativeSrc": "1569:52:12",
                              "nodeType": "YulIf",
                              "src": "1569:52:12"
                            },
                            {
                              "nativeSrc": "1630:73:12",
                              "nodeType": "YulAssignment",
                              "src": "1630:73:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1673:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1673:9:12"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nativeSrc": "1684:8:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1684:8:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1669:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1669:3:12"
                                    },
                                    "nativeSrc": "1669:24:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1669:24:12"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "1695:7:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1695:7:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nativeSrc": "1640:28:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1640:28:12"
                                },
                                "nativeSrc": "1640:63:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1640:63:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "1630:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1630:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
                        "nativeSrc": "985:724:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1070:9:12",
                            "nodeType": "YulTypedName",
                            "src": "1070:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1081:7:12",
                            "nodeType": "YulTypedName",
                            "src": "1081:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1093:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1093:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1101:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1101:6:12",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1109:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1109:6:12",
                            "type": ""
                          }
                        ],
                        "src": "985:724:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1769:325:12",
                          "nodeType": "YulBlock",
                          "src": "1769:325:12",
                          "statements": [
                            {
                              "nativeSrc": "1779:22:12",
                              "nodeType": "YulAssignment",
                              "src": "1779:22:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1793:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1793:1:12",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "1796:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1796:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "1789:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1789:3:12"
                                },
                                "nativeSrc": "1789:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1789:12:12"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "1779:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1779:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1810:38:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1810:38:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "1840:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1840:4:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1846:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1846:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "1836:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1836:3:12"
                                },
                                "nativeSrc": "1836:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1836:12:12"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "1814:18:12",
                                  "nodeType": "YulTypedName",
                                  "src": "1814:18:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1887:31:12",
                                "nodeType": "YulBlock",
                                "src": "1887:31:12",
                                "statements": [
                                  {
                                    "nativeSrc": "1889:27:12",
                                    "nodeType": "YulAssignment",
                                    "src": "1889:27:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "1903:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1903:6:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1911:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1911:4:12",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "1899:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1899:3:12"
                                      },
                                      "nativeSrc": "1899:17:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1899:17:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "1889:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1889:6:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "1867:18:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1867:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1860:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1860:6:12"
                                },
                                "nativeSrc": "1860:26:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1860:26:12"
                              },
                              "nativeSrc": "1857:61:12",
                              "nodeType": "YulIf",
                              "src": "1857:61:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "1977:111:12",
                                "nodeType": "YulBlock",
                                "src": "1977:111:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1998:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1998:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2005:3:12",
                                              "nodeType": "YulLiteral",
                                              "src": "2005:3:12",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2010:10:12",
                                              "nodeType": "YulLiteral",
                                              "src": "2010:10:12",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "2001:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2001:3:12"
                                          },
                                          "nativeSrc": "2001:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2001:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "1991:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1991:6:12"
                                      },
                                      "nativeSrc": "1991:31:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1991:31:12"
                                    },
                                    "nativeSrc": "1991:31:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1991:31:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2042:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2042:1:12",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2045:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2045:4:12",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2035:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2035:6:12"
                                      },
                                      "nativeSrc": "2035:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2035:15:12"
                                    },
                                    "nativeSrc": "2035:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2035:15:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2070:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2070:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2073:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2073:4:12",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2063:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2063:6:12"
                                      },
                                      "nativeSrc": "2063:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2063:15:12"
                                    },
                                    "nativeSrc": "2063:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2063:15:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "1933:18:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1933:18:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "1956:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1956:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1964:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1964:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "1953:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1953:2:12"
                                    },
                                    "nativeSrc": "1953:14:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1953:14:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "1930:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1930:2:12"
                                },
                                "nativeSrc": "1930:38:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1930:38:12"
                              },
                              "nativeSrc": "1927:161:12",
                              "nodeType": "YulIf",
                              "src": "1927:161:12"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "1714:380:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "1749:4:12",
                            "nodeType": "YulTypedName",
                            "src": "1749:4:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "1758:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1758:6:12",
                            "type": ""
                          }
                        ],
                        "src": "1714:380:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2155:65:12",
                          "nodeType": "YulBlock",
                          "src": "2155:65:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2172:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2172:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "2175:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2175:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2165:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2165:6:12"
                                },
                                "nativeSrc": "2165:14:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2165:14:12"
                              },
                              "nativeSrc": "2165:14:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "2165:14:12"
                            },
                            {
                              "nativeSrc": "2188:26:12",
                              "nodeType": "YulAssignment",
                              "src": "2188:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2206:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2206:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2209:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2209:4:12",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "2196:9:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2196:9:12"
                                },
                                "nativeSrc": "2196:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2196:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "2188:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2188:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nativeSrc": "2099:121:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "2138:3:12",
                            "nodeType": "YulTypedName",
                            "src": "2138:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "2146:4:12",
                            "nodeType": "YulTypedName",
                            "src": "2146:4:12",
                            "type": ""
                          }
                        ],
                        "src": "2099:121:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2306:437:12",
                          "nodeType": "YulBlock",
                          "src": "2306:437:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2339:398:12",
                                "nodeType": "YulBlock",
                                "src": "2339:398:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2360:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2360:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "array",
                                          "nativeSrc": "2363:5:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2363:5:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2353:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2353:6:12"
                                      },
                                      "nativeSrc": "2353:16:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2353:16:12"
                                    },
                                    "nativeSrc": "2353:16:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2353:16:12"
                                  },
                                  {
                                    "nativeSrc": "2382:30:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2382:30:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2404:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2404:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2407:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2407:4:12",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nativeSrc": "2394:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2394:9:12"
                                      },
                                      "nativeSrc": "2394:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2394:18:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "2386:4:12",
                                        "nodeType": "YulTypedName",
                                        "src": "2386:4:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "2425:57:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2425:57:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "2448:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2448:4:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2458:1:12",
                                              "nodeType": "YulLiteral",
                                              "src": "2458:1:12",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nativeSrc": "2465:10:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2465:10:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "2477:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2477:2:12",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "2461:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "2461:3:12"
                                              },
                                              "nativeSrc": "2461:19:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2461:19:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "2454:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2454:3:12"
                                          },
                                          "nativeSrc": "2454:27:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2454:27:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2444:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2444:3:12"
                                      },
                                      "nativeSrc": "2444:38:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2444:38:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "2429:11:12",
                                        "nodeType": "YulTypedName",
                                        "src": "2429:11:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "2519:23:12",
                                      "nodeType": "YulBlock",
                                      "src": "2519:23:12",
                                      "statements": [
                                        {
                                          "nativeSrc": "2521:19:12",
                                          "nodeType": "YulAssignment",
                                          "src": "2521:19:12",
                                          "value": {
                                            "name": "data",
                                            "nativeSrc": "2536:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2536:4:12"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "2521:11:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2521:11:12"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "2501:10:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2501:10:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2513:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2513:4:12",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "2498:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2498:2:12"
                                      },
                                      "nativeSrc": "2498:20:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2498:20:12"
                                    },
                                    "nativeSrc": "2495:47:12",
                                    "nodeType": "YulIf",
                                    "src": "2495:47:12"
                                  },
                                  {
                                    "nativeSrc": "2555:41:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2555:41:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "2569:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2569:4:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2579:1:12",
                                              "nodeType": "YulLiteral",
                                              "src": "2579:1:12",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "2586:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2586:3:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "2591:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2591:2:12",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "2582:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "2582:3:12"
                                              },
                                              "nativeSrc": "2582:12:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2582:12:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "2575:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2575:3:12"
                                          },
                                          "nativeSrc": "2575:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2575:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2565:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2565:3:12"
                                      },
                                      "nativeSrc": "2565:31:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2565:31:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "2559:2:12",
                                        "nodeType": "YulTypedName",
                                        "src": "2559:2:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "2609:24:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2609:24:12",
                                    "value": {
                                      "name": "deleteStart",
                                      "nativeSrc": "2622:11:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2622:11:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "2613:5:12",
                                        "nodeType": "YulTypedName",
                                        "src": "2613:5:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "2707:20:12",
                                      "nodeType": "YulBlock",
                                      "src": "2707:20:12",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "2716:5:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "2716:5:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2723:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "2723:1:12",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "2709:6:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2709:6:12"
                                            },
                                            "nativeSrc": "2709:16:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2709:16:12"
                                          },
                                          "nativeSrc": "2709:16:12",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2709:16:12"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "2657:5:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2657:5:12"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "2664:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2664:2:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "2654:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2654:2:12"
                                      },
                                      "nativeSrc": "2654:13:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2654:13:12"
                                    },
                                    "nativeSrc": "2646:81:12",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "2668:26:12",
                                      "nodeType": "YulBlock",
                                      "src": "2668:26:12",
                                      "statements": [
                                        {
                                          "nativeSrc": "2670:22:12",
                                          "nodeType": "YulAssignment",
                                          "src": "2670:22:12",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "2683:5:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "2683:5:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2690:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "2690:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "2679:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2679:3:12"
                                            },
                                            "nativeSrc": "2679:13:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2679:13:12"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nativeSrc": "2670:5:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2670:5:12"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "2650:3:12",
                                      "nodeType": "YulBlock",
                                      "src": "2650:3:12",
                                      "statements": []
                                    },
                                    "src": "2646:81:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "2322:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2322:3:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2327:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2327:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2319:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2319:2:12"
                                },
                                "nativeSrc": "2319:11:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2319:11:12"
                              },
                              "nativeSrc": "2316:421:12",
                              "nodeType": "YulIf",
                              "src": "2316:421:12"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nativeSrc": "2225:518:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "2278:5:12",
                            "nodeType": "YulTypedName",
                            "src": "2278:5:12",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "2285:3:12",
                            "nodeType": "YulTypedName",
                            "src": "2285:3:12",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "2290:10:12",
                            "nodeType": "YulTypedName",
                            "src": "2290:10:12",
                            "type": ""
                          }
                        ],
                        "src": "2225:518:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2833:81:12",
                          "nodeType": "YulBlock",
                          "src": "2833:81:12",
                          "statements": [
                            {
                              "nativeSrc": "2843:65:12",
                              "nodeType": "YulAssignment",
                              "src": "2843:65:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "2858:4:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2858:4:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2876:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2876:1:12",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nativeSrc": "2879:3:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2879:3:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "2872:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2872:3:12"
                                                },
                                                "nativeSrc": "2872:11:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2872:11:12"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2889:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2889:1:12",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "2885:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2885:3:12"
                                                },
                                                "nativeSrc": "2885:6:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2885:6:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nativeSrc": "2868:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2868:3:12"
                                            },
                                            "nativeSrc": "2868:24:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2868:24:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "2864:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2864:3:12"
                                        },
                                        "nativeSrc": "2864:29:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2864:29:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2854:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2854:3:12"
                                    },
                                    "nativeSrc": "2854:40:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2854:40:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2900:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "2900:1:12",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "2903:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2903:3:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "2896:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2896:3:12"
                                    },
                                    "nativeSrc": "2896:11:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2896:11:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "2851:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2851:2:12"
                                },
                                "nativeSrc": "2851:57:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2851:57:12"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "2843:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2843:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "2748:166:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "2810:4:12",
                            "nodeType": "YulTypedName",
                            "src": "2810:4:12",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "2816:3:12",
                            "nodeType": "YulTypedName",
                            "src": "2816:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "2824:4:12",
                            "nodeType": "YulTypedName",
                            "src": "2824:4:12",
                            "type": ""
                          }
                        ],
                        "src": "2748:166:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "3015:1203:12",
                          "nodeType": "YulBlock",
                          "src": "3015:1203:12",
                          "statements": [
                            {
                              "nativeSrc": "3025:24:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3025:24:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "3045:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3045:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "3039:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3039:5:12"
                                },
                                "nativeSrc": "3039:10:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3039:10:12"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "3029:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3029:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3092:22:12",
                                "nodeType": "YulBlock",
                                "src": "3092:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "3094:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3094:16:12"
                                      },
                                      "nativeSrc": "3094:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3094:18:12"
                                    },
                                    "nativeSrc": "3094:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3094:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "3064:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3064:6:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3080:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "3080:2:12",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3084:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "3084:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "3076:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3076:3:12"
                                        },
                                        "nativeSrc": "3076:10:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3076:10:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3088:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "3088:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3072:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3072:3:12"
                                    },
                                    "nativeSrc": "3072:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3072:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3061:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3061:2:12"
                                },
                                "nativeSrc": "3061:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3061:30:12"
                              },
                              "nativeSrc": "3058:56:12",
                              "nodeType": "YulIf",
                              "src": "3058:56:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "3167:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3167:4:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "3205:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3205:4:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "3199:5:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3199:5:12"
                                        },
                                        "nativeSrc": "3199:11:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3199:11:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nativeSrc": "3173:25:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3173:25:12"
                                    },
                                    "nativeSrc": "3173:38:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3173:38:12"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "3213:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3213:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nativeSrc": "3123:43:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3123:43:12"
                                },
                                "nativeSrc": "3123:97:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3123:97:12"
                              },
                              "nativeSrc": "3123:97:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "3123:97:12"
                            },
                            {
                              "nativeSrc": "3229:18:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3229:18:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3246:1:12",
                                "nodeType": "YulLiteral",
                                "src": "3246:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "3233:9:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3233:9:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3256:17:12",
                              "nodeType": "YulAssignment",
                              "src": "3256:17:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3269:4:12",
                                "nodeType": "YulLiteral",
                                "src": "3269:4:12",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "3256:9:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3256:9:12"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "3319:642:12",
                                    "nodeType": "YulBlock",
                                    "src": "3319:642:12",
                                    "statements": [
                                      {
                                        "nativeSrc": "3333:35:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3333:35:12",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "3352:6:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3352:6:12"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "3364:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3364:2:12",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "3360:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "3360:3:12"
                                              },
                                              "nativeSrc": "3360:7:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3360:7:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "3348:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3348:3:12"
                                          },
                                          "nativeSrc": "3348:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3348:20:12"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "3337:7:12",
                                            "nodeType": "YulTypedName",
                                            "src": "3337:7:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3381:49:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3381:49:12",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "3425:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3425:4:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nativeSrc": "3395:29:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3395:29:12"
                                          },
                                          "nativeSrc": "3395:35:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3395:35:12"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "3385:6:12",
                                            "nodeType": "YulTypedName",
                                            "src": "3385:6:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3443:10:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3443:10:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3452:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3452:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "3447:1:12",
                                            "nodeType": "YulTypedName",
                                            "src": "3447:1:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "3523:165:12",
                                          "nodeType": "YulBlock",
                                          "src": "3523:165:12",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "3548:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3548:6:12"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "3566:3:12",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "3566:3:12"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "3571:9:12",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "3571:9:12"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "3562:3:12",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3562:3:12"
                                                        },
                                                        "nativeSrc": "3562:19:12",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3562:19:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "3556:5:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3556:5:12"
                                                    },
                                                    "nativeSrc": "3556:26:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3556:26:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "3541:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3541:6:12"
                                                },
                                                "nativeSrc": "3541:42:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3541:42:12"
                                              },
                                              "nativeSrc": "3541:42:12",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3541:42:12"
                                            },
                                            {
                                              "nativeSrc": "3600:24:12",
                                              "nodeType": "YulAssignment",
                                              "src": "3600:24:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "3614:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3614:6:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "3622:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3622:1:12",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "3610:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3610:3:12"
                                                },
                                                "nativeSrc": "3610:14:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3610:14:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "3600:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3600:6:12"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "3641:33:12",
                                              "nodeType": "YulAssignment",
                                              "src": "3641:33:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "3658:9:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3658:9:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "3669:4:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3669:4:12",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "3654:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3654:3:12"
                                                },
                                                "nativeSrc": "3654:20:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3654:20:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "3641:9:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3641:9:12"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "3477:1:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3477:1:12"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "3480:7:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3480:7:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "3474:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3474:2:12"
                                          },
                                          "nativeSrc": "3474:14:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3474:14:12"
                                        },
                                        "nativeSrc": "3466:222:12",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "3489:21:12",
                                          "nodeType": "YulBlock",
                                          "src": "3489:21:12",
                                          "statements": [
                                            {
                                              "nativeSrc": "3491:17:12",
                                              "nodeType": "YulAssignment",
                                              "src": "3491:17:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "3500:1:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3500:1:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "3503:4:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3503:4:12",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "3496:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3496:3:12"
                                                },
                                                "nativeSrc": "3496:12:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3496:12:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "3491:1:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3491:1:12"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "3470:3:12",
                                          "nodeType": "YulBlock",
                                          "src": "3470:3:12",
                                          "statements": []
                                        },
                                        "src": "3466:222:12"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "3736:166:12",
                                          "nodeType": "YulBlock",
                                          "src": "3736:166:12",
                                          "statements": [
                                            {
                                              "nativeSrc": "3754:43:12",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "3754:43:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "3781:3:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3781:3:12"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "3786:9:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3786:9:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "3777:3:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3777:3:12"
                                                    },
                                                    "nativeSrc": "3777:19:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3777:19:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "3771:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3771:5:12"
                                                },
                                                "nativeSrc": "3771:26:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3771:26:12"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "3758:9:12",
                                                  "nodeType": "YulTypedName",
                                                  "src": "3758:9:12",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "3821:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3821:6:12"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "3833:9:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3833:9:12"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nativeSrc": "3860:1:12",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "3860:1:12",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nativeSrc": "3863:6:12",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "3863:6:12"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nativeSrc": "3856:3:12",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "3856:3:12"
                                                                    },
                                                                    "nativeSrc": "3856:14:12",
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "3856:14:12"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "3872:3:12",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "3872:3:12",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nativeSrc": "3852:3:12",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "3852:3:12"
                                                                },
                                                                "nativeSrc": "3852:24:12",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "3852:24:12"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "3882:1:12",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "3882:1:12",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nativeSrc": "3878:3:12",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "3878:3:12"
                                                                },
                                                                "nativeSrc": "3878:6:12",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "3878:6:12"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nativeSrc": "3848:3:12",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "3848:3:12"
                                                            },
                                                            "nativeSrc": "3848:37:12",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3848:37:12"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nativeSrc": "3844:3:12",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3844:3:12"
                                                        },
                                                        "nativeSrc": "3844:42:12",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3844:42:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "3829:3:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3829:3:12"
                                                    },
                                                    "nativeSrc": "3829:58:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3829:58:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "3814:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3814:6:12"
                                                },
                                                "nativeSrc": "3814:74:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3814:74:12"
                                              },
                                              "nativeSrc": "3814:74:12",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3814:74:12"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "3707:7:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3707:7:12"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "3716:6:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3716:6:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "3704:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3704:2:12"
                                          },
                                          "nativeSrc": "3704:19:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3704:19:12"
                                        },
                                        "nativeSrc": "3701:201:12",
                                        "nodeType": "YulIf",
                                        "src": "3701:201:12"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "3922:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3922:4:12"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "3936:1:12",
                                                      "nodeType": "YulLiteral",
                                                      "src": "3936:1:12",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "3939:6:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3939:6:12"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "3932:3:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3932:3:12"
                                                  },
                                                  "nativeSrc": "3932:14:12",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3932:14:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "3948:1:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3948:1:12",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "3928:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "3928:3:12"
                                              },
                                              "nativeSrc": "3928:22:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "3928:22:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "3915:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3915:6:12"
                                          },
                                          "nativeSrc": "3915:36:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3915:36:12"
                                        },
                                        "nativeSrc": "3915:36:12",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3915:36:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3312:649:12",
                                  "nodeType": "YulCase",
                                  "src": "3312:649:12",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3317:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3317:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "3978:234:12",
                                    "nodeType": "YulBlock",
                                    "src": "3978:234:12",
                                    "statements": [
                                      {
                                        "nativeSrc": "3992:14:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3992:14:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "4005:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4005:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "3996:5:12",
                                            "nodeType": "YulTypedName",
                                            "src": "3996:5:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "4041:67:12",
                                          "nodeType": "YulBlock",
                                          "src": "4041:67:12",
                                          "statements": [
                                            {
                                              "nativeSrc": "4059:35:12",
                                              "nodeType": "YulAssignment",
                                              "src": "4059:35:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "4078:3:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4078:3:12"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "4083:9:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "4083:9:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "4074:3:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4074:3:12"
                                                    },
                                                    "nativeSrc": "4074:19:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "4074:19:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "4068:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4068:5:12"
                                                },
                                                "nativeSrc": "4068:26:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4068:26:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "4059:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4059:5:12"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "4022:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4022:6:12"
                                        },
                                        "nativeSrc": "4019:89:12",
                                        "nodeType": "YulIf",
                                        "src": "4019:89:12"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "4128:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "4128:4:12"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "4187:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4187:5:12"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "4194:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4194:6:12"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "4134:52:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "4134:52:12"
                                              },
                                              "nativeSrc": "4134:67:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "4134:67:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "4121:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "4121:6:12"
                                          },
                                          "nativeSrc": "4121:81:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4121:81:12"
                                        },
                                        "nativeSrc": "4121:81:12",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4121:81:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3970:242:12",
                                  "nodeType": "YulCase",
                                  "src": "3970:242:12",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "3292:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3292:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3300:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3300:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3289:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3289:2:12"
                                },
                                "nativeSrc": "3289:14:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3289:14:12"
                              },
                              "nativeSrc": "3282:930:12",
                              "nodeType": "YulSwitch",
                              "src": "3282:930:12"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "2919:1299:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "3000:4:12",
                            "nodeType": "YulTypedName",
                            "src": "3000:4:12",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "3006:3:12",
                            "nodeType": "YulTypedName",
                            "src": "3006:3:12",
                            "type": ""
                          }
                        ],
                        "src": "2919:1299:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4324:102:12",
                          "nodeType": "YulBlock",
                          "src": "4324:102:12",
                          "statements": [
                            {
                              "nativeSrc": "4334:26:12",
                              "nodeType": "YulAssignment",
                              "src": "4334:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4346:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4346:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4357:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4357:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4342:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4342:3:12"
                                },
                                "nativeSrc": "4342:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4342:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4334:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4334:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4376:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4376:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4391:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4391:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4407:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "4407:3:12",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4412:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "4412:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "4403:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "4403:3:12"
                                            },
                                            "nativeSrc": "4403:11:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4403:11:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4416:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "4416:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4399:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4399:3:12"
                                        },
                                        "nativeSrc": "4399:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4399:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4387:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4387:3:12"
                                    },
                                    "nativeSrc": "4387:32:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4387:32:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4369:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4369:6:12"
                                },
                                "nativeSrc": "4369:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4369:51:12"
                              },
                              "nativeSrc": "4369:51:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4369:51:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "4223:203:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4293:9:12",
                            "nodeType": "YulTypedName",
                            "src": "4293:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4304:6:12",
                            "nodeType": "YulTypedName",
                            "src": "4304:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4315:4:12",
                            "nodeType": "YulTypedName",
                            "src": "4315:4:12",
                            "type": ""
                          }
                        ],
                        "src": "4223:203:12"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 12,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1174 CODESIZE SUB DUP1 PUSH2 0x1174 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x199 JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x3 PUSH2 0x3E DUP4 DUP3 PUSH2 0x2AA JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4B DUP3 DUP3 PUSH2 0x2AA JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85 DUP2 PUSH2 0x8E JUMP JUMPDEST POP POP POP POP PUSH2 0x368 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x120 JUMPI PUSH2 0x120 PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x14E JUMPI PUSH2 0x14E PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x169 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ED DUP7 DUP3 DUP8 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x217 DUP7 DUP3 DUP8 ADD PUSH2 0xF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x255 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A5 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x282 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2C3 JUMPI PUSH2 0x2C3 PUSH2 0xE0 JUMP JUMPDEST PUSH2 0x2D7 DUP2 PUSH2 0x2D1 DUP5 SLOAD PUSH2 0x221 JUMP JUMPDEST DUP5 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x30B JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2F3 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x33B JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x31B JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x359 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDFD DUP1 PUSH2 0x377 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x111 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E71D92D GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9BDD8013 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9BDD8013 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xA583024B EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18BF5077 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x2B8C49E3 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x129 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x54B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x18B PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x129 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x16A PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x18B PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xCCCC665 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x2BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x36372B07 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2DA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2EF SWAP1 PUSH2 0xD1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31B SWAP1 PUSH2 0xD1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x368 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x368 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x380 DUP2 DUP6 DUP6 PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x28 PUSH1 0x21 PUSH1 0x99 SHL ADD EQ PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BA DUP3 DUP3 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDE22BAFF038E3A3E08407CBDF617DEED74E869A7BA517DF611E33131C6E6EA04 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x40D DUP6 DUP3 DUP6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x418 DUP6 DUP6 DUP6 PUSH2 0x7F9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x28 PUSH1 0x21 PUSH1 0x99 SHL ADD EQ PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x453 DUP3 DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xB90795A66650155983E242CAC3E1AC1A4DC26F8ED2987F3CE416A34E00111FD4 SWAP1 PUSH1 0x20 ADD PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x498 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x4A2 DUP3 DUP3 PUSH2 0x76F JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP1 DUP3 GT PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12D37EE5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EE DUP3 DUP5 PUSH2 0xD6A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x50D SWAP1 DUP3 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x553 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x55D PUSH1 0x0 PUSH2 0x8BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2EF SWAP1 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x576 PUSH2 0x88E JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0x1398B9 PUSH1 0xE3 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6A8 JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0xD7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x6 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x5D3 JUMPI PUSH2 0x5D3 PUSH2 0xD7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH32 0xEAAC1064EE8D13F83091F388597FFB5FF2D2E59F6A16AAE2A74BA7F2D13C8D9 SWAP1 POP DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x650 PUSH2 0xD7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x677 JUMPI PUSH2 0x677 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 MUL SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP1 DUP5 ADD MSTORE POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 ADD PUSH2 0x59C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x380 DUP2 DUP6 DUP6 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x71E PUSH2 0x88E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x751 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x8BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x76A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x90D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x799 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x4A2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP5 DUP5 PUSH2 0x6EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x7F3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x7F3 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x90D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x823 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x84D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x76A DUP4 DUP4 DUP4 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x882 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x4A2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x55D JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x937 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x961 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x7F3 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9D4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA0D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA6C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA4D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA88 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAEC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB58 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xB3B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB0 DUP4 PUSH2 0xB78 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDC DUP5 PUSH2 0xB78 JUMP JUMPDEST SWAP3 POP PUSH2 0xBEA PUSH1 0x20 DUP6 ADD PUSH2 0xB78 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB23 DUP3 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCAF DUP8 DUP3 DUP9 ADD PUSH2 0xC2A JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCDB DUP8 DUP3 DUP9 ADD PUSH2 0xC2A JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD03 DUP4 PUSH2 0xB78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD11 PUSH1 0x20 DUP5 ADD PUSH2 0xB78 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD2E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD4E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2DA JUMPI PUSH2 0x2DA PUSH2 0xD54 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2DA JUMPI PUSH2 0x2DA PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xEA GAS 0xA6 0x2E BLOBHASH PUSH15 0xECA7460F830E69C2FD6875D66214E4 PUSH6 0x68FD57CACE7D 0xC4 SWAP15 0xBB PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
              "sourceMap": "644:2527:8:-:0;;;816:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;943:5;921:4;927:6;1648:5:3;:13;921:4:8;1648:5:3;:13;:::i;:::-;-1:-1:-1;1671:7:3;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4369:51:12;4342:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;816:136:8;;;644:2527;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:12;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:12;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:12;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:12;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:12;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:12:o;985:724::-;1093:6;1101;1109;1162:2;1150:9;1141:7;1137:23;1133:32;1130:52;;;1178:1;1175;1168:12;1130:52;1204:16;;-1:-1:-1;;;;;1249:31:12;;1239:42;;1229:70;;1295:1;1292;1285:12;1229:70;1367:2;1352:18;;1346:25;1318:5;;-1:-1:-1;;;;;;1383:30:12;;1380:50;;;1426:1;1423;1416:12;1380:50;1449:61;1502:7;1493:6;1482:9;1478:22;1449:61;:::i;:::-;1556:2;1541:18;;1535:25;1439:71;;-1:-1:-1;1535:25:12;-1:-1:-1;;;;;;1572:32:12;;1569:52;;;1617:1;1614;1607:12;1569:52;1640:63;1695:7;1684:8;1673:9;1669:24;1640:63;:::i;:::-;1630:73;;;985:724;;;;;:::o;1714:380::-;1793:1;1789:12;;;;1836;;;1857:61;;1911:4;1903:6;1899:17;1889:27;;1857:61;1964:2;1956:6;1953:14;1933:18;1930:38;1927:161;;2010:10;2005:3;2001:20;1998:1;1991:31;2045:4;2042:1;2035:15;2073:4;2070:1;2063:15;1927:161;;1714:380;;;:::o;2225:518::-;2327:2;2322:3;2319:11;2316:421;;;2363:5;2360:1;2353:16;2407:4;2404:1;2394:18;2477:2;2465:10;2461:19;2458:1;2454:27;2448:4;2444:38;2513:4;2501:10;2498:20;2495:47;;;-1:-1:-1;2536:4:12;2495:47;2591:2;2586:3;2582:12;2579:1;2575:20;2569:4;2565:31;2555:41;;2646:81;2664:2;2657:5;2654:13;2646:81;;;2723:1;2709:16;;2690:1;2679:13;2646:81;;;2650:3;;2316:421;2225:518;;;:::o;2919:1299::-;3039:10;;-1:-1:-1;;;;;3061:30:12;;3058:56;;;3094:18;;:::i;:::-;3123:97;3213:6;3173:38;3205:4;3199:11;3173:38;:::i;:::-;3167:4;3123:97;:::i;:::-;3269:4;3300:2;3289:14;;3317:1;3312:649;;;;4005:1;4022:6;4019:89;;;-1:-1:-1;4074:19:12;;;4068:26;4019:89;-1:-1:-1;;2876:1:12;2872:11;;;2868:24;2864:29;2854:40;2900:1;2896:11;;;2851:57;4121:81;;3282:930;;3312:649;2172:1;2165:14;;;2209:4;2196:18;;-1:-1:-1;;3348:20:12;;;3466:222;3480:7;3477:1;3474:14;3466:222;;;3562:19;;;3556:26;3541:42;;3669:4;3654:20;;;;3622:1;3610:14;;;;3496:12;3466:222;;;3470:3;3716:6;3707:7;3704:19;3701:201;;;3777:19;;;3771:26;-1:-1:-1;;3860:1:12;3856:14;;;3872:3;3852:24;3848:37;3844:42;3829:58;3814:74;;3701:201;-1:-1:-1;;;;3948:1:12;3932:14;;;3928:22;3915:36;;-1:-1:-1;2919:1299:12:o;4223:203::-;644:2527:8;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_approve_694": {
                  "entryPoint": 1885,
                  "id": 694,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_approve_754": {
                  "entryPoint": 2317,
                  "id": 754,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@_burn_676": {
                  "entryPoint": 2136,
                  "id": 676,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_checkOwner_84": {
                  "entryPoint": 2190,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_mint_643": {
                  "entryPoint": 1903,
                  "id": 643,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_919": {
                  "entryPoint": null,
                  "id": 919,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_spendAllowance_802": {
                  "entryPoint": 1957,
                  "id": 802,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 2235,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_transfer_533": {
                  "entryPoint": 2041,
                  "id": 533,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_610": {
                  "entryPoint": 2530,
                  "id": 610,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@addClaimable_1050": {
                  "entryPoint": 1390,
                  "id": 1050,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@allowance_430": {
                  "entryPoint": 1771,
                  "id": 430,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_454": {
                  "entryPoint": 882,
                  "id": 454,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_389": {
                  "entryPoint": null,
                  "id": 389,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@claim_1119": {
                  "entryPoint": 1190,
                  "id": 1119,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@crosschainBurn_1197": {
                  "entryPoint": 1059,
                  "id": 1197,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@crosschainMint_1166": {
                  "entryPoint": 906,
                  "id": 1166,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@decimals_367": {
                  "entryPoint": null,
                  "id": 367,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getClaimable_1067": {
                  "entryPoint": 1711,
                  "id": 1067,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@mint_1135": {
                  "entryPoint": 1168,
                  "id": 1135,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@name_349": {
                  "entryPoint": 736,
                  "id": 349,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@renounceOwnership_98": {
                  "entryPoint": 1355,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@supportsInterface_1227": {
                  "entryPoint": 654,
                  "id": 1227,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@symbol_358": {
                  "entryPoint": 1375,
                  "id": 358,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalSupply_376": {
                  "entryPoint": null,
                  "id": 376,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferFrom_486": {
                  "entryPoint": 1023,
                  "id": 486,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transferOwnership_126": {
                  "entryPoint": 1814,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@transfer_413": {
                  "entryPoint": 1757,
                  "id": 413,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_address": {
                  "entryPoint": 2936,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_array_address_dyn_calldata": {
                  "entryPoint": 3114,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 3067,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 3303,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 3006,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 2964,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
                  "entryPoint": 3190,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_bytes4": {
                  "entryPoint": 2809,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 3094,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": 3494,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2858,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 3475,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 3434,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 3354,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3412,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 3453,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:5609:12",
                    "nodeType": "YulBlock",
                    "src": "0:5609:12",
                    "statements": [
                      {
                        "nativeSrc": "6:3:12",
                        "nodeType": "YulBlock",
                        "src": "6:3:12",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "83:217:12",
                          "nodeType": "YulBlock",
                          "src": "83:217:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "129:16:12",
                                "nodeType": "YulBlock",
                                "src": "129:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "138:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "138:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "141:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "141:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "131:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "131:6:12"
                                      },
                                      "nativeSrc": "131:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "131:12:12"
                                    },
                                    "nativeSrc": "131:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "131:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "104:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "104:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "113:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "113:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "100:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "100:3:12"
                                    },
                                    "nativeSrc": "100:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "100:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "125:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "125:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "96:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:3:12"
                                },
                                "nativeSrc": "96:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "96:32:12"
                              },
                              "nativeSrc": "93:52:12",
                              "nodeType": "YulIf",
                              "src": "93:52:12"
                            },
                            {
                              "nativeSrc": "154:36:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "154:36:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "180:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "180:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "167:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "167:12:12"
                                },
                                "nativeSrc": "167:23:12",
                                "nodeType": "YulFunctionCall",
                                "src": "167:23:12"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "158:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "158:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "254:16:12",
                                "nodeType": "YulBlock",
                                "src": "254:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "263:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "263:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "266:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "266:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "256:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "256:6:12"
                                      },
                                      "nativeSrc": "256:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "256:12:12"
                                    },
                                    "nativeSrc": "256:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "256:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "212:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "212:5:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "223:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "223:5:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "234:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "234:3:12",
                                                "type": "",
                                                "value": "224"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "239:10:12",
                                                "nodeType": "YulLiteral",
                                                "src": "239:10:12",
                                                "type": "",
                                                "value": "0xffffffff"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "230:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "230:3:12"
                                            },
                                            "nativeSrc": "230:20:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "230:20:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "219:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "219:3:12"
                                        },
                                        "nativeSrc": "219:32:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "219:32:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "209:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "209:2:12"
                                    },
                                    "nativeSrc": "209:43:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "209:43:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "202:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "202:6:12"
                                },
                                "nativeSrc": "202:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "202:51:12"
                              },
                              "nativeSrc": "199:71:12",
                              "nodeType": "YulIf",
                              "src": "199:71:12"
                            },
                            {
                              "nativeSrc": "279:15:12",
                              "nodeType": "YulAssignment",
                              "src": "279:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "289:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "289:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "279:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "279:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes4",
                        "nativeSrc": "14:286:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "49:9:12",
                            "nodeType": "YulTypedName",
                            "src": "49:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "60:7:12",
                            "nodeType": "YulTypedName",
                            "src": "60:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "72:6:12",
                            "nodeType": "YulTypedName",
                            "src": "72:6:12",
                            "type": ""
                          }
                        ],
                        "src": "14:286:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "400:92:12",
                          "nodeType": "YulBlock",
                          "src": "400:92:12",
                          "statements": [
                            {
                              "nativeSrc": "410:26:12",
                              "nodeType": "YulAssignment",
                              "src": "410:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "422:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "422:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "433:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "433:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "418:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "418:3:12"
                                },
                                "nativeSrc": "418:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "418:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "410:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "410:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "452:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "477:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "477:6:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "470:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "470:6:12"
                                        },
                                        "nativeSrc": "470:14:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "470:14:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "463:6:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "463:6:12"
                                    },
                                    "nativeSrc": "463:22:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "463:22:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "445:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:6:12"
                                },
                                "nativeSrc": "445:41:12",
                                "nodeType": "YulFunctionCall",
                                "src": "445:41:12"
                              },
                              "nativeSrc": "445:41:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "445:41:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "305:187:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "369:9:12",
                            "nodeType": "YulTypedName",
                            "src": "369:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "380:6:12",
                            "nodeType": "YulTypedName",
                            "src": "380:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "391:4:12",
                            "nodeType": "YulTypedName",
                            "src": "391:4:12",
                            "type": ""
                          }
                        ],
                        "src": "305:187:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "618:406:12",
                          "nodeType": "YulBlock",
                          "src": "618:406:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "635:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "635:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "646:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "646:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "628:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "628:6:12"
                                },
                                "nativeSrc": "628:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "628:21:12"
                              },
                              "nativeSrc": "628:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "628:21:12"
                            },
                            {
                              "nativeSrc": "658:27:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "658:27:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "678:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "678:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "672:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "672:5:12"
                                },
                                "nativeSrc": "672:13:12",
                                "nodeType": "YulFunctionCall",
                                "src": "672:13:12"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "662:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "662:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "705:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "705:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "716:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "716:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "701:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "701:3:12"
                                    },
                                    "nativeSrc": "701:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "701:18:12"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "721:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "721:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "694:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "694:6:12"
                                },
                                "nativeSrc": "694:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "694:34:12"
                              },
                              "nativeSrc": "694:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "694:34:12"
                            },
                            {
                              "nativeSrc": "737:10:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "737:10:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "746:1:12",
                                "nodeType": "YulLiteral",
                                "src": "746:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "741:1:12",
                                  "nodeType": "YulTypedName",
                                  "src": "741:1:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "806:90:12",
                                "nodeType": "YulBlock",
                                "src": "806:90:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nativeSrc": "835:9:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "835:9:12"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "846:1:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "846:1:12"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "831:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "831:3:12"
                                              },
                                              "nativeSrc": "831:17:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "831:17:12"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "850:2:12",
                                              "nodeType": "YulLiteral",
                                              "src": "850:2:12",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "827:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "827:3:12"
                                          },
                                          "nativeSrc": "827:26:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "827:26:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nativeSrc": "869:6:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "869:6:12"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "877:1:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "877:1:12"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "865:3:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "865:3:12"
                                                  },
                                                  "nativeSrc": "865:14:12",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "865:14:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "881:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "881:2:12",
                                                  "type": "",
                                                  "value": "32"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "861:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "861:3:12"
                                              },
                                              "nativeSrc": "861:23:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "861:23:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "855:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "855:5:12"
                                          },
                                          "nativeSrc": "855:30:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "855:30:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "820:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "820:6:12"
                                      },
                                      "nativeSrc": "820:66:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "820:66:12"
                                    },
                                    "nativeSrc": "820:66:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "820:66:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "767:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "767:1:12"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "770:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "770:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "764:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "764:2:12"
                                },
                                "nativeSrc": "764:13:12",
                                "nodeType": "YulFunctionCall",
                                "src": "764:13:12"
                              },
                              "nativeSrc": "756:140:12",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "778:19:12",
                                "nodeType": "YulBlock",
                                "src": "778:19:12",
                                "statements": [
                                  {
                                    "nativeSrc": "780:15:12",
                                    "nodeType": "YulAssignment",
                                    "src": "780:15:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "789:1:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "789:1:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "792:2:12",
                                          "nodeType": "YulLiteral",
                                          "src": "792:2:12",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "785:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "785:3:12"
                                      },
                                      "nativeSrc": "785:10:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "785:10:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "780:1:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "780:1:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "760:3:12",
                                "nodeType": "YulBlock",
                                "src": "760:3:12",
                                "statements": []
                              },
                              "src": "756:140:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "920:9:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "920:9:12"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "931:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "931:6:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "916:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "916:3:12"
                                        },
                                        "nativeSrc": "916:22:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "916:22:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "940:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "940:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "912:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "912:3:12"
                                    },
                                    "nativeSrc": "912:31:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "912:31:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "945:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "945:1:12",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "905:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "905:6:12"
                                },
                                "nativeSrc": "905:42:12",
                                "nodeType": "YulFunctionCall",
                                "src": "905:42:12"
                              },
                              "nativeSrc": "905:42:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "905:42:12"
                            },
                            {
                              "nativeSrc": "956:62:12",
                              "nodeType": "YulAssignment",
                              "src": "956:62:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "972:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "972:9:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nativeSrc": "991:6:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "991:6:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "999:2:12",
                                                "nodeType": "YulLiteral",
                                                "src": "999:2:12",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "987:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "987:3:12"
                                            },
                                            "nativeSrc": "987:15:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "987:15:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1008:2:12",
                                                "nodeType": "YulLiteral",
                                                "src": "1008:2:12",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "1004:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1004:3:12"
                                            },
                                            "nativeSrc": "1004:7:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1004:7:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "983:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "983:3:12"
                                        },
                                        "nativeSrc": "983:29:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "983:29:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "968:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "968:3:12"
                                    },
                                    "nativeSrc": "968:45:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "968:45:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1015:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1015:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "964:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "964:3:12"
                                },
                                "nativeSrc": "964:54:12",
                                "nodeType": "YulFunctionCall",
                                "src": "964:54:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "956:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "956:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "497:527:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "587:9:12",
                            "nodeType": "YulTypedName",
                            "src": "587:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "598:6:12",
                            "nodeType": "YulTypedName",
                            "src": "598:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "609:4:12",
                            "nodeType": "YulTypedName",
                            "src": "609:4:12",
                            "type": ""
                          }
                        ],
                        "src": "497:527:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1078:124:12",
                          "nodeType": "YulBlock",
                          "src": "1078:124:12",
                          "statements": [
                            {
                              "nativeSrc": "1088:29:12",
                              "nodeType": "YulAssignment",
                              "src": "1088:29:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1110:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1110:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1097:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1097:12:12"
                                },
                                "nativeSrc": "1097:20:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1097:20:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1088:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1088:5:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1180:16:12",
                                "nodeType": "YulBlock",
                                "src": "1180:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1189:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1189:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1192:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1192:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1182:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1182:6:12"
                                      },
                                      "nativeSrc": "1182:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1182:12:12"
                                    },
                                    "nativeSrc": "1182:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1182:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1139:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1139:5:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "1150:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "1150:5:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1165:3:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1165:3:12",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1170:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1170:1:12",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1161:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1161:3:12"
                                                },
                                                "nativeSrc": "1161:11:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1161:11:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1174:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "1174:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "1157:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1157:3:12"
                                            },
                                            "nativeSrc": "1157:19:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1157:19:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "1146:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1146:3:12"
                                        },
                                        "nativeSrc": "1146:31:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1146:31:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1136:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1136:2:12"
                                    },
                                    "nativeSrc": "1136:42:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1136:42:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1129:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1129:6:12"
                                },
                                "nativeSrc": "1129:50:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1129:50:12"
                              },
                              "nativeSrc": "1126:70:12",
                              "nodeType": "YulIf",
                              "src": "1126:70:12"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nativeSrc": "1029:173:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "1057:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1057:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "1068:5:12",
                            "nodeType": "YulTypedName",
                            "src": "1068:5:12",
                            "type": ""
                          }
                        ],
                        "src": "1029:173:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1294:213:12",
                          "nodeType": "YulBlock",
                          "src": "1294:213:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1340:16:12",
                                "nodeType": "YulBlock",
                                "src": "1340:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1349:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1349:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1352:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1352:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1342:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1342:6:12"
                                      },
                                      "nativeSrc": "1342:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1342:12:12"
                                    },
                                    "nativeSrc": "1342:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1342:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1315:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1315:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1324:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1324:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1311:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1311:3:12"
                                    },
                                    "nativeSrc": "1311:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1311:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1336:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1336:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1307:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:3:12"
                                },
                                "nativeSrc": "1307:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1307:32:12"
                              },
                              "nativeSrc": "1304:52:12",
                              "nodeType": "YulIf",
                              "src": "1304:52:12"
                            },
                            {
                              "nativeSrc": "1365:39:12",
                              "nodeType": "YulAssignment",
                              "src": "1365:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1394:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1394:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1375:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1375:18:12"
                                },
                                "nativeSrc": "1375:29:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1375:29:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1365:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1365:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1413:14:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1413:14:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1426:1:12",
                                "nodeType": "YulLiteral",
                                "src": "1426:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1417:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "1417:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1436:41:12",
                              "nodeType": "YulAssignment",
                              "src": "1436:41:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1462:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1462:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1473:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1473:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1458:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1458:3:12"
                                    },
                                    "nativeSrc": "1458:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1458:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1445:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1445:12:12"
                                },
                                "nativeSrc": "1445:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1445:32:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1436:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1436:5:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1486:15:12",
                              "nodeType": "YulAssignment",
                              "src": "1486:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1496:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "1496:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1486:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1486:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nativeSrc": "1207:300:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1252:9:12",
                            "nodeType": "YulTypedName",
                            "src": "1252:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1263:7:12",
                            "nodeType": "YulTypedName",
                            "src": "1263:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1275:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1275:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1283:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1283:6:12",
                            "type": ""
                          }
                        ],
                        "src": "1207:300:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1613:76:12",
                          "nodeType": "YulBlock",
                          "src": "1613:76:12",
                          "statements": [
                            {
                              "nativeSrc": "1623:26:12",
                              "nodeType": "YulAssignment",
                              "src": "1623:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1635:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1635:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1646:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1646:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1631:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1631:3:12"
                                },
                                "nativeSrc": "1631:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1631:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1623:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1623:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1665:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1665:9:12"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1676:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1676:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1658:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1658:6:12"
                                },
                                "nativeSrc": "1658:25:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1658:25:12"
                              },
                              "nativeSrc": "1658:25:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "1658:25:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "1512:177:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1582:9:12",
                            "nodeType": "YulTypedName",
                            "src": "1582:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1593:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1593:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1604:4:12",
                            "nodeType": "YulTypedName",
                            "src": "1604:4:12",
                            "type": ""
                          }
                        ],
                        "src": "1512:177:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1798:270:12",
                          "nodeType": "YulBlock",
                          "src": "1798:270:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1844:16:12",
                                "nodeType": "YulBlock",
                                "src": "1844:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1853:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1853:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1856:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1856:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1846:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1846:6:12"
                                      },
                                      "nativeSrc": "1846:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1846:12:12"
                                    },
                                    "nativeSrc": "1846:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1846:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1819:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1819:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1828:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1828:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1815:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1815:3:12"
                                    },
                                    "nativeSrc": "1815:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1815:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1840:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1840:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1811:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1811:3:12"
                                },
                                "nativeSrc": "1811:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1811:32:12"
                              },
                              "nativeSrc": "1808:52:12",
                              "nodeType": "YulIf",
                              "src": "1808:52:12"
                            },
                            {
                              "nativeSrc": "1869:39:12",
                              "nodeType": "YulAssignment",
                              "src": "1869:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1898:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1898:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1879:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1879:18:12"
                                },
                                "nativeSrc": "1879:29:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1879:29:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1869:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1869:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1917:48:12",
                              "nodeType": "YulAssignment",
                              "src": "1917:48:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1950:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1950:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1961:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1961:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1946:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1946:3:12"
                                    },
                                    "nativeSrc": "1946:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1946:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1927:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1927:18:12"
                                },
                                "nativeSrc": "1927:38:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1927:38:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1917:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1917:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1974:14:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1974:14:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1987:1:12",
                                "nodeType": "YulLiteral",
                                "src": "1987:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1978:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "1978:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1997:41:12",
                              "nodeType": "YulAssignment",
                              "src": "1997:41:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2023:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2023:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2034:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "2034:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2019:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2019:3:12"
                                    },
                                    "nativeSrc": "2019:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2019:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2006:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2006:12:12"
                                },
                                "nativeSrc": "2006:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2006:32:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1997:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1997:5:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2047:15:12",
                              "nodeType": "YulAssignment",
                              "src": "2047:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2057:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "2057:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "2047:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2047:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nativeSrc": "1694:374:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1748:9:12",
                            "nodeType": "YulTypedName",
                            "src": "1748:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1759:7:12",
                            "nodeType": "YulTypedName",
                            "src": "1759:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1771:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1771:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1779:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1779:6:12",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1787:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1787:6:12",
                            "type": ""
                          }
                        ],
                        "src": "1694:374:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2170:87:12",
                          "nodeType": "YulBlock",
                          "src": "2170:87:12",
                          "statements": [
                            {
                              "nativeSrc": "2180:26:12",
                              "nodeType": "YulAssignment",
                              "src": "2180:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2192:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2192:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2203:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2203:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2188:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2188:3:12"
                                },
                                "nativeSrc": "2188:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2188:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2180:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2180:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2222:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2222:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "2237:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2237:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2245:4:12",
                                        "nodeType": "YulLiteral",
                                        "src": "2245:4:12",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2233:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2233:3:12"
                                    },
                                    "nativeSrc": "2233:17:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2233:17:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2215:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2215:6:12"
                                },
                                "nativeSrc": "2215:36:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2215:36:12"
                              },
                              "nativeSrc": "2215:36:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "2215:36:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nativeSrc": "2073:184:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2139:9:12",
                            "nodeType": "YulTypedName",
                            "src": "2139:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2150:6:12",
                            "nodeType": "YulTypedName",
                            "src": "2150:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2161:4:12",
                            "nodeType": "YulTypedName",
                            "src": "2161:4:12",
                            "type": ""
                          }
                        ],
                        "src": "2073:184:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2332:116:12",
                          "nodeType": "YulBlock",
                          "src": "2332:116:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2378:16:12",
                                "nodeType": "YulBlock",
                                "src": "2378:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2387:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2387:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2390:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2390:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2380:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2380:6:12"
                                      },
                                      "nativeSrc": "2380:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2380:12:12"
                                    },
                                    "nativeSrc": "2380:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2380:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2353:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2353:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2362:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2362:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2349:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2349:3:12"
                                    },
                                    "nativeSrc": "2349:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2349:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2374:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2374:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2345:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2345:3:12"
                                },
                                "nativeSrc": "2345:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2345:32:12"
                              },
                              "nativeSrc": "2342:52:12",
                              "nodeType": "YulIf",
                              "src": "2342:52:12"
                            },
                            {
                              "nativeSrc": "2403:39:12",
                              "nodeType": "YulAssignment",
                              "src": "2403:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2432:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2432:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2413:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2413:18:12"
                                },
                                "nativeSrc": "2413:29:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2413:29:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2403:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2403:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "2262:186:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2298:9:12",
                            "nodeType": "YulTypedName",
                            "src": "2298:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2309:7:12",
                            "nodeType": "YulTypedName",
                            "src": "2309:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2321:6:12",
                            "nodeType": "YulTypedName",
                            "src": "2321:6:12",
                            "type": ""
                          }
                        ],
                        "src": "2262:186:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2554:102:12",
                          "nodeType": "YulBlock",
                          "src": "2554:102:12",
                          "statements": [
                            {
                              "nativeSrc": "2564:26:12",
                              "nodeType": "YulAssignment",
                              "src": "2564:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2576:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2576:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2587:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2587:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2572:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2572:3:12"
                                },
                                "nativeSrc": "2572:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2572:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2564:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2564:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2606:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2606:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "2621:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2621:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2637:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "2637:3:12",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2642:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "2642:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "2633:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2633:3:12"
                                            },
                                            "nativeSrc": "2633:11:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2633:11:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2646:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "2646:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "2629:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2629:3:12"
                                        },
                                        "nativeSrc": "2629:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2629:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2617:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2617:3:12"
                                    },
                                    "nativeSrc": "2617:32:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2617:32:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2599:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2599:6:12"
                                },
                                "nativeSrc": "2599:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2599:51:12"
                              },
                              "nativeSrc": "2599:51:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "2599:51:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "2453:203:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2523:9:12",
                            "nodeType": "YulTypedName",
                            "src": "2523:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2534:6:12",
                            "nodeType": "YulTypedName",
                            "src": "2534:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2545:4:12",
                            "nodeType": "YulTypedName",
                            "src": "2545:4:12",
                            "type": ""
                          }
                        ],
                        "src": "2453:203:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2745:283:12",
                          "nodeType": "YulBlock",
                          "src": "2745:283:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2794:16:12",
                                "nodeType": "YulBlock",
                                "src": "2794:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2803:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2803:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2806:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2806:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2796:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2796:6:12"
                                      },
                                      "nativeSrc": "2796:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2796:12:12"
                                    },
                                    "nativeSrc": "2796:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2796:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "2773:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2773:6:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2781:4:12",
                                            "nodeType": "YulLiteral",
                                            "src": "2781:4:12",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "2769:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2769:3:12"
                                        },
                                        "nativeSrc": "2769:17:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2769:17:12"
                                      },
                                      {
                                        "name": "end",
                                        "nativeSrc": "2788:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2788:3:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "2765:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2765:3:12"
                                    },
                                    "nativeSrc": "2765:27:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2765:27:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "2758:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2758:6:12"
                                },
                                "nativeSrc": "2758:35:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2758:35:12"
                              },
                              "nativeSrc": "2755:55:12",
                              "nodeType": "YulIf",
                              "src": "2755:55:12"
                            },
                            {
                              "nativeSrc": "2819:30:12",
                              "nodeType": "YulAssignment",
                              "src": "2819:30:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "2842:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2842:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2829:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2829:12:12"
                                },
                                "nativeSrc": "2829:20:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2829:20:12"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "2819:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2819:6:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2892:16:12",
                                "nodeType": "YulBlock",
                                "src": "2892:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2901:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2901:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2904:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2904:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2894:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2894:6:12"
                                      },
                                      "nativeSrc": "2894:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2894:12:12"
                                    },
                                    "nativeSrc": "2894:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2894:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "2864:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2864:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2872:18:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2872:18:12",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2861:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2861:2:12"
                                },
                                "nativeSrc": "2861:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2861:30:12"
                              },
                              "nativeSrc": "2858:50:12",
                              "nodeType": "YulIf",
                              "src": "2858:50:12"
                            },
                            {
                              "nativeSrc": "2917:29:12",
                              "nodeType": "YulAssignment",
                              "src": "2917:29:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "2933:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2933:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2941:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2941:4:12",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2929:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2929:3:12"
                                },
                                "nativeSrc": "2929:17:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2929:17:12"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nativeSrc": "2917:8:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2917:8:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3006:16:12",
                                "nodeType": "YulBlock",
                                "src": "3006:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3015:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3015:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3018:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3018:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3008:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3008:6:12"
                                      },
                                      "nativeSrc": "3008:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3008:12:12"
                                    },
                                    "nativeSrc": "3008:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3008:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "2969:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2969:6:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "2981:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "2981:1:12",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "length",
                                                "nativeSrc": "2984:6:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "2984:6:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "2977:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2977:3:12"
                                            },
                                            "nativeSrc": "2977:14:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2977:14:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "2965:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2965:3:12"
                                        },
                                        "nativeSrc": "2965:27:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2965:27:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2994:4:12",
                                        "nodeType": "YulLiteral",
                                        "src": "2994:4:12",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2961:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2961:3:12"
                                    },
                                    "nativeSrc": "2961:38:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2961:38:12"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "3001:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3001:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2958:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2958:2:12"
                                },
                                "nativeSrc": "2958:47:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2958:47:12"
                              },
                              "nativeSrc": "2955:67:12",
                              "nodeType": "YulIf",
                              "src": "2955:67:12"
                            }
                          ]
                        },
                        "name": "abi_decode_array_address_dyn_calldata",
                        "nativeSrc": "2661:367:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "2708:6:12",
                            "nodeType": "YulTypedName",
                            "src": "2708:6:12",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "2716:3:12",
                            "nodeType": "YulTypedName",
                            "src": "2716:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nativeSrc": "2724:8:12",
                            "nodeType": "YulTypedName",
                            "src": "2724:8:12",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nativeSrc": "2734:6:12",
                            "nodeType": "YulTypedName",
                            "src": "2734:6:12",
                            "type": ""
                          }
                        ],
                        "src": "2661:367:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "3190:611:12",
                          "nodeType": "YulBlock",
                          "src": "3190:611:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3236:16:12",
                                "nodeType": "YulBlock",
                                "src": "3236:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3245:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3245:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3248:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3248:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3238:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3238:6:12"
                                      },
                                      "nativeSrc": "3238:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3238:12:12"
                                    },
                                    "nativeSrc": "3238:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3238:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3211:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3211:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3220:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3220:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3207:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3207:3:12"
                                    },
                                    "nativeSrc": "3207:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3207:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3232:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3232:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3203:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3203:3:12"
                                },
                                "nativeSrc": "3203:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3203:32:12"
                              },
                              "nativeSrc": "3200:52:12",
                              "nodeType": "YulIf",
                              "src": "3200:52:12"
                            },
                            {
                              "nativeSrc": "3261:37:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3261:37:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3288:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3288:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3275:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3275:12:12"
                                },
                                "nativeSrc": "3275:23:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3275:23:12"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "3265:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3265:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3341:16:12",
                                "nodeType": "YulBlock",
                                "src": "3341:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3350:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3350:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3353:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3353:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3343:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3343:6:12"
                                      },
                                      "nativeSrc": "3343:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3343:12:12"
                                    },
                                    "nativeSrc": "3343:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3343:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "3313:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3313:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3321:18:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3321:18:12",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3310:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3310:2:12"
                                },
                                "nativeSrc": "3310:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3310:30:12"
                              },
                              "nativeSrc": "3307:50:12",
                              "nodeType": "YulIf",
                              "src": "3307:50:12"
                            },
                            {
                              "nativeSrc": "3366:96:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3366:96:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3434:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3434:9:12"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "3445:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3445:6:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3430:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3430:3:12"
                                    },
                                    "nativeSrc": "3430:22:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3430:22:12"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "3454:7:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3454:7:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nativeSrc": "3392:37:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3392:37:12"
                                },
                                "nativeSrc": "3392:70:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3392:70:12"
                              },
                              "variables": [
                                {
                                  "name": "value0_1",
                                  "nativeSrc": "3370:8:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3370:8:12",
                                  "type": ""
                                },
                                {
                                  "name": "value1_1",
                                  "nativeSrc": "3380:8:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3380:8:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3471:18:12",
                              "nodeType": "YulAssignment",
                              "src": "3471:18:12",
                              "value": {
                                "name": "value0_1",
                                "nativeSrc": "3481:8:12",
                                "nodeType": "YulIdentifier",
                                "src": "3481:8:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3471:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3471:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3498:18:12",
                              "nodeType": "YulAssignment",
                              "src": "3498:18:12",
                              "value": {
                                "name": "value1_1",
                                "nativeSrc": "3508:8:12",
                                "nodeType": "YulIdentifier",
                                "src": "3508:8:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "3498:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3498:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3525:48:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3525:48:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3558:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3558:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3569:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "3569:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3554:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3554:3:12"
                                    },
                                    "nativeSrc": "3554:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3554:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3541:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3541:12:12"
                                },
                                "nativeSrc": "3541:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3541:32:12"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nativeSrc": "3529:8:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3529:8:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3618:16:12",
                                "nodeType": "YulBlock",
                                "src": "3618:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3627:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3627:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3630:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3630:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3620:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3620:6:12"
                                      },
                                      "nativeSrc": "3620:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3620:12:12"
                                    },
                                    "nativeSrc": "3620:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3620:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nativeSrc": "3588:8:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3588:8:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3598:18:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3598:18:12",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3585:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3585:2:12"
                                },
                                "nativeSrc": "3585:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3585:32:12"
                              },
                              "nativeSrc": "3582:52:12",
                              "nodeType": "YulIf",
                              "src": "3582:52:12"
                            },
                            {
                              "nativeSrc": "3643:98:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3643:98:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3711:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3711:9:12"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nativeSrc": "3722:8:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3722:8:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3707:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3707:3:12"
                                    },
                                    "nativeSrc": "3707:24:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3707:24:12"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "3733:7:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3733:7:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn_calldata",
                                  "nativeSrc": "3669:37:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3669:37:12"
                                },
                                "nativeSrc": "3669:72:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3669:72:12"
                              },
                              "variables": [
                                {
                                  "name": "value2_1",
                                  "nativeSrc": "3647:8:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3647:8:12",
                                  "type": ""
                                },
                                {
                                  "name": "value3_1",
                                  "nativeSrc": "3657:8:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3657:8:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3750:18:12",
                              "nodeType": "YulAssignment",
                              "src": "3750:18:12",
                              "value": {
                                "name": "value2_1",
                                "nativeSrc": "3760:8:12",
                                "nodeType": "YulIdentifier",
                                "src": "3760:8:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "3750:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3750:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3777:18:12",
                              "nodeType": "YulAssignment",
                              "src": "3777:18:12",
                              "value": {
                                "name": "value3_1",
                                "nativeSrc": "3787:8:12",
                                "nodeType": "YulIdentifier",
                                "src": "3787:8:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nativeSrc": "3777:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3777:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
                        "nativeSrc": "3033:768:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3132:9:12",
                            "nodeType": "YulTypedName",
                            "src": "3132:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3143:7:12",
                            "nodeType": "YulTypedName",
                            "src": "3143:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3155:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3155:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "3163:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3163:6:12",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "3171:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3171:6:12",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nativeSrc": "3179:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3179:6:12",
                            "type": ""
                          }
                        ],
                        "src": "3033:768:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "3893:173:12",
                          "nodeType": "YulBlock",
                          "src": "3893:173:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3939:16:12",
                                "nodeType": "YulBlock",
                                "src": "3939:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3948:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3948:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3951:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3951:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3941:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3941:6:12"
                                      },
                                      "nativeSrc": "3941:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3941:12:12"
                                    },
                                    "nativeSrc": "3941:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3941:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3914:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3914:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3923:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3923:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3910:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3910:3:12"
                                    },
                                    "nativeSrc": "3910:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3910:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3935:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3935:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3906:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3906:3:12"
                                },
                                "nativeSrc": "3906:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3906:32:12"
                              },
                              "nativeSrc": "3903:52:12",
                              "nodeType": "YulIf",
                              "src": "3903:52:12"
                            },
                            {
                              "nativeSrc": "3964:39:12",
                              "nodeType": "YulAssignment",
                              "src": "3964:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3993:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3993:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "3974:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3974:18:12"
                                },
                                "nativeSrc": "3974:29:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3974:29:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3964:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3964:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4012:48:12",
                              "nodeType": "YulAssignment",
                              "src": "4012:48:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4045:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4045:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4056:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4056:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4041:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4041:3:12"
                                    },
                                    "nativeSrc": "4041:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4041:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "4022:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4022:18:12"
                                },
                                "nativeSrc": "4022:38:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4022:38:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "4012:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4012:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nativeSrc": "3806:260:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3851:9:12",
                            "nodeType": "YulTypedName",
                            "src": "3851:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3862:7:12",
                            "nodeType": "YulTypedName",
                            "src": "3862:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3874:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3874:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "3882:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3882:6:12",
                            "type": ""
                          }
                        ],
                        "src": "3806:260:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4126:325:12",
                          "nodeType": "YulBlock",
                          "src": "4126:325:12",
                          "statements": [
                            {
                              "nativeSrc": "4136:22:12",
                              "nodeType": "YulAssignment",
                              "src": "4136:22:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4150:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4150:1:12",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "4153:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4153:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "4146:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4146:3:12"
                                },
                                "nativeSrc": "4146:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4146:12:12"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "4136:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4136:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4167:38:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4167:38:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "4197:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4197:4:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4203:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4203:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "4193:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4193:3:12"
                                },
                                "nativeSrc": "4193:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4193:12:12"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "4171:18:12",
                                  "nodeType": "YulTypedName",
                                  "src": "4171:18:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4244:31:12",
                                "nodeType": "YulBlock",
                                "src": "4244:31:12",
                                "statements": [
                                  {
                                    "nativeSrc": "4246:27:12",
                                    "nodeType": "YulAssignment",
                                    "src": "4246:27:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "4260:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4260:6:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4268:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4268:4:12",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "4256:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4256:3:12"
                                      },
                                      "nativeSrc": "4256:17:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4256:17:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "4246:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4246:6:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "4224:18:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4224:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4217:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4217:6:12"
                                },
                                "nativeSrc": "4217:26:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4217:26:12"
                              },
                              "nativeSrc": "4214:61:12",
                              "nodeType": "YulIf",
                              "src": "4214:61:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "4334:111:12",
                                "nodeType": "YulBlock",
                                "src": "4334:111:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4355:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4355:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4362:3:12",
                                              "nodeType": "YulLiteral",
                                              "src": "4362:3:12",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4367:10:12",
                                              "nodeType": "YulLiteral",
                                              "src": "4367:10:12",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "4358:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "4358:3:12"
                                          },
                                          "nativeSrc": "4358:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4358:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "4348:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4348:6:12"
                                      },
                                      "nativeSrc": "4348:31:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4348:31:12"
                                    },
                                    "nativeSrc": "4348:31:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4348:31:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4399:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4399:1:12",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4402:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4402:4:12",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "4392:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4392:6:12"
                                      },
                                      "nativeSrc": "4392:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4392:15:12"
                                    },
                                    "nativeSrc": "4392:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4392:15:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4427:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4427:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4430:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4430:4:12",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4420:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4420:6:12"
                                      },
                                      "nativeSrc": "4420:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4420:15:12"
                                    },
                                    "nativeSrc": "4420:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4420:15:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "4290:18:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4290:18:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "4313:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4313:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4321:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4321:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "4310:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4310:2:12"
                                    },
                                    "nativeSrc": "4310:14:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4310:14:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "4287:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4287:2:12"
                                },
                                "nativeSrc": "4287:38:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4287:38:12"
                              },
                              "nativeSrc": "4284:161:12",
                              "nodeType": "YulIf",
                              "src": "4284:161:12"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "4071:380:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "4106:4:12",
                            "nodeType": "YulTypedName",
                            "src": "4106:4:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "4115:6:12",
                            "nodeType": "YulTypedName",
                            "src": "4115:6:12",
                            "type": ""
                          }
                        ],
                        "src": "4071:380:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4488:95:12",
                          "nodeType": "YulBlock",
                          "src": "4488:95:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4505:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4505:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4512:3:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4512:3:12",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4517:10:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4517:10:12",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "4508:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4508:3:12"
                                    },
                                    "nativeSrc": "4508:20:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4508:20:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4498:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4498:6:12"
                                },
                                "nativeSrc": "4498:31:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4498:31:12"
                              },
                              "nativeSrc": "4498:31:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4498:31:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4545:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4545:1:12",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4548:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4548:4:12",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4538:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4538:6:12"
                                },
                                "nativeSrc": "4538:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4538:15:12"
                              },
                              "nativeSrc": "4538:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4538:15:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4569:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4569:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4572:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4572:4:12",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "4562:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4562:6:12"
                                },
                                "nativeSrc": "4562:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4562:15:12"
                              },
                              "nativeSrc": "4562:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4562:15:12"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "4456:127:12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4456:127:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4637:79:12",
                          "nodeType": "YulBlock",
                          "src": "4637:79:12",
                          "statements": [
                            {
                              "nativeSrc": "4647:17:12",
                              "nodeType": "YulAssignment",
                              "src": "4647:17:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4659:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4659:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4662:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4662:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "4655:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4655:3:12"
                                },
                                "nativeSrc": "4655:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4655:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nativeSrc": "4647:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4647:4:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4688:22:12",
                                "nodeType": "YulBlock",
                                "src": "4688:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4690:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4690:16:12"
                                      },
                                      "nativeSrc": "4690:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4690:18:12"
                                    },
                                    "nativeSrc": "4690:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4690:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nativeSrc": "4679:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4679:4:12"
                                  },
                                  {
                                    "name": "x",
                                    "nativeSrc": "4685:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4685:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4676:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4676:2:12"
                                },
                                "nativeSrc": "4676:11:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4676:11:12"
                              },
                              "nativeSrc": "4673:37:12",
                              "nodeType": "YulIf",
                              "src": "4673:37:12"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nativeSrc": "4588:128:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4619:1:12",
                            "nodeType": "YulTypedName",
                            "src": "4619:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4622:1:12",
                            "nodeType": "YulTypedName",
                            "src": "4622:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nativeSrc": "4628:4:12",
                            "nodeType": "YulTypedName",
                            "src": "4628:4:12",
                            "type": ""
                          }
                        ],
                        "src": "4588:128:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4850:145:12",
                          "nodeType": "YulBlock",
                          "src": "4850:145:12",
                          "statements": [
                            {
                              "nativeSrc": "4860:26:12",
                              "nodeType": "YulAssignment",
                              "src": "4860:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4872:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4872:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4883:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4883:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4868:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4868:3:12"
                                },
                                "nativeSrc": "4868:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4868:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4860:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4860:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4902:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4902:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4917:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4917:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4933:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "4933:3:12",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4938:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "4938:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "4929:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "4929:3:12"
                                            },
                                            "nativeSrc": "4929:11:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4929:11:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4942:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "4942:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4925:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4925:3:12"
                                        },
                                        "nativeSrc": "4925:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4925:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4913:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4913:3:12"
                                    },
                                    "nativeSrc": "4913:32:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4913:32:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4895:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4895:6:12"
                                },
                                "nativeSrc": "4895:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4895:51:12"
                              },
                              "nativeSrc": "4895:51:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4895:51:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4966:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4966:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4977:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4977:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4962:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4962:3:12"
                                    },
                                    "nativeSrc": "4962:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4962:18:12"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "4982:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4982:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4955:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4955:6:12"
                                },
                                "nativeSrc": "4955:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4955:34:12"
                              },
                              "nativeSrc": "4955:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4955:34:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "4721:274:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4811:9:12",
                            "nodeType": "YulTypedName",
                            "src": "4811:9:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "4822:6:12",
                            "nodeType": "YulTypedName",
                            "src": "4822:6:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4830:6:12",
                            "nodeType": "YulTypedName",
                            "src": "4830:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4841:4:12",
                            "nodeType": "YulTypedName",
                            "src": "4841:4:12",
                            "type": ""
                          }
                        ],
                        "src": "4721:274:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "5032:95:12",
                          "nodeType": "YulBlock",
                          "src": "5032:95:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5049:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5049:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5056:3:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5056:3:12",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5061:10:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5061:10:12",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "5052:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5052:3:12"
                                    },
                                    "nativeSrc": "5052:20:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5052:20:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5042:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5042:6:12"
                                },
                                "nativeSrc": "5042:31:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5042:31:12"
                              },
                              "nativeSrc": "5042:31:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5042:31:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5089:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5089:1:12",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5092:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5092:4:12",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5082:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5082:6:12"
                                },
                                "nativeSrc": "5082:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5082:15:12"
                              },
                              "nativeSrc": "5082:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5082:15:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5113:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5113:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5116:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5116:4:12",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "5106:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5106:6:12"
                                },
                                "nativeSrc": "5106:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5106:15:12"
                              },
                              "nativeSrc": "5106:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5106:15:12"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nativeSrc": "5000:127:12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5000:127:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "5180:77:12",
                          "nodeType": "YulBlock",
                          "src": "5180:77:12",
                          "statements": [
                            {
                              "nativeSrc": "5190:16:12",
                              "nodeType": "YulAssignment",
                              "src": "5190:16:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5201:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5201:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5204:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5204:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5197:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5197:3:12"
                                },
                                "nativeSrc": "5197:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5197:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "5190:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5190:3:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5229:22:12",
                                "nodeType": "YulBlock",
                                "src": "5229:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "5231:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5231:16:12"
                                      },
                                      "nativeSrc": "5231:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5231:18:12"
                                    },
                                    "nativeSrc": "5231:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5231:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5221:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5221:1:12"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "5224:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5224:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "5218:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5218:2:12"
                                },
                                "nativeSrc": "5218:10:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5218:10:12"
                              },
                              "nativeSrc": "5215:36:12",
                              "nodeType": "YulIf",
                              "src": "5215:36:12"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "5132:125:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "5163:1:12",
                            "nodeType": "YulTypedName",
                            "src": "5163:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "5166:1:12",
                            "nodeType": "YulTypedName",
                            "src": "5166:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "5172:3:12",
                            "nodeType": "YulTypedName",
                            "src": "5172:3:12",
                            "type": ""
                          }
                        ],
                        "src": "5132:125:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "5419:188:12",
                          "nodeType": "YulBlock",
                          "src": "5419:188:12",
                          "statements": [
                            {
                              "nativeSrc": "5429:26:12",
                              "nodeType": "YulAssignment",
                              "src": "5429:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5441:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5441:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5452:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5452:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5437:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5437:3:12"
                                },
                                "nativeSrc": "5437:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5437:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5429:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5429:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5471:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5471:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5486:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5486:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5502:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "5502:3:12",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5507:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "5507:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5498:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "5498:3:12"
                                            },
                                            "nativeSrc": "5498:11:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5498:11:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5511:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "5511:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5494:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "5494:3:12"
                                        },
                                        "nativeSrc": "5494:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5494:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5482:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5482:3:12"
                                    },
                                    "nativeSrc": "5482:32:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5482:32:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5464:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5464:6:12"
                                },
                                "nativeSrc": "5464:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5464:51:12"
                              },
                              "nativeSrc": "5464:51:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5464:51:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5535:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5535:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5546:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5546:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5531:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5531:3:12"
                                    },
                                    "nativeSrc": "5531:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5531:18:12"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5551:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5551:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5524:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5524:6:12"
                                },
                                "nativeSrc": "5524:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5524:34:12"
                              },
                              "nativeSrc": "5524:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5524:34:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5578:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5578:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5589:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5589:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5574:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5574:3:12"
                                    },
                                    "nativeSrc": "5574:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5574:18:12"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "5594:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5594:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5567:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5567:6:12"
                                },
                                "nativeSrc": "5567:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5567:34:12"
                              },
                              "nativeSrc": "5567:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5567:34:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "5262:345:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5372:9:12",
                            "nodeType": "YulTypedName",
                            "src": "5372:9:12",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "5383:6:12",
                            "nodeType": "YulTypedName",
                            "src": "5383:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5391:6:12",
                            "nodeType": "YulTypedName",
                            "src": "5391:6:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5399:6:12",
                            "nodeType": "YulTypedName",
                            "src": "5399:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5410:4:12",
                            "nodeType": "YulTypedName",
                            "src": "5410:4:12",
                            "type": ""
                          }
                        ],
                        "src": "5262:345:12"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
                  "id": 12,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101115760003560e01c80634e71d92d116100ad5780639bdd8013116100715780639bdd80131461022f578063a583024b14610242578063a9059cbb14610255578063dd62ed3e14610268578063f2fde38b1461027b57600080fd5b80634e71d92d146101d557806370a08231146101dd578063715018a6146102065780638da5cb5b1461020e57806395d89b411461022757600080fd5b806301ffc9a71461011657806306fdde031461013e578063095ea7b31461015357806318160ddd1461016657806318bf50771461017857806323b872dd1461018d5780632b8c49e3146101a0578063313ce567146101b357806340c10f19146101c2575b600080fd5b610129610124366004610af9565b61028e565b60405190151581526020015b60405180910390f35b6101466102e0565b6040516101359190610b2a565b610129610161366004610b94565b610372565b6002545b604051908152602001610135565b61018b610186366004610b94565b61038a565b005b61012961019b366004610bbe565b6103ff565b61018b6101ae366004610b94565b610423565b60405160128152602001610135565b61018b6101d0366004610b94565b610490565b61018b6104a6565b61016a6101eb366004610bfb565b6001600160a01b031660009081526020819052604090205490565b61018b61054b565b6005546001600160a01b03166040516101359190610c16565b61014661055f565b61018b61023d366004610c76565b61056e565b61016a610250366004610bfb565b6106af565b610129610263366004610b94565b6106dd565b61016a610276366004610ce7565b6106eb565b61018b610289366004610bfb565b610716565b60006001600160e01b03198216630cccc66560e21b14806102bf57506001600160e01b031982166336372b0760e01b145b806102da57506001600160e01b031982166301ffc9a760e01b145b92915050565b6060600380546102ef90610d1a565b80601f016020809104026020016040519081016040528092919081815260200182805461031b90610d1a565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b5050505050905090565b60003361038081858561075d565b5060019392505050565b336028602160991b01146103b0576040516282b42960e81b815260040160405180910390fd5b6103ba828261076f565b60405181815233906001600160a01b038416907fde22baff038e3a3e08407cbdf617deed74e869a7ba517df611e33131c6e6ea04906020015b60405180910390a35050565b60003361040d8582856107a5565b6104188585856107f9565b506001949350505050565b336028602160991b0114610449576040516282b42960e81b815260040160405180910390fd5b6104538282610858565b60405181815233906001600160a01b038416907fb90795a66650155983e242cac3e1ac1a4dc26f8ed2987f3ce416a34e00111fd4906020016103f3565b61049861088e565b6104a2828261076f565b5050565b336000908152600660209081526040808320546007909252909120548082116104e2576040516312d37ee560e31b815260040160405180910390fd5b60006104ee8284610d6a565b33600081815260076020526040902085905590915061050d908261076f565b60408051338152602081018390527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a910160405180910390a1505050565b61055361088e565b61055d60006108bb565b565b6060600480546102ef90610d1a565b61057661088e565b828114610599576040516001621398b960e31b0319815260040160405180910390fd5b60005b838110156106a8578282828181106105b6576105b6610d7d565b90506020020135600660008787858181106105d3576105d3610d7d565b90506020020160208101906105e89190610bfb565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106179190610d93565b909155507f0eaac1064ee8d13f83091f388597ffb5ff2d2e59f6a16aae2a74ba7f2d13c8d9905085858381811061065057610650610d7d565b90506020020160208101906106659190610bfb565b84848481811061067757610677610d7d565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a160010161059c565b5050505050565b6001600160a01b03811660009081526007602090815260408083205460069092528220546102da9190610d6a565b6000336103808185856107f9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61071e61088e565b6001600160a01b038116610751576000604051631e4fbdf760e01b81526004016107489190610c16565b60405180910390fd5b61075a816108bb565b50565b61076a838383600161090d565b505050565b6001600160a01b03821661079957600060405163ec442f0560e01b81526004016107489190610c16565b6104a2600083836109e2565b60006107b184846106eb565b90506000198110156107f357818110156107e457828183604051637dc7a0d960e11b815260040161074893929190610da6565b6107f38484848403600061090d565b50505050565b6001600160a01b038316610823576000604051634b637e8f60e11b81526004016107489190610c16565b6001600160a01b03821661084d57600060405163ec442f0560e01b81526004016107489190610c16565b61076a8383836109e2565b6001600160a01b038216610882576000604051634b637e8f60e11b81526004016107489190610c16565b6104a2826000836109e2565b6005546001600160a01b0316331461055d573360405163118cdaa760e01b81526004016107489190610c16565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841661093757600060405163e602df0560e01b81526004016107489190610c16565b6001600160a01b038316610961576000604051634a1406b160e11b81526004016107489190610c16565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156107f357826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109d491815260200190565b60405180910390a350505050565b6001600160a01b038316610a0d578060026000828254610a029190610d93565b90915550610a6c9050565b6001600160a01b03831660009081526020819052604090205481811015610a4d5783818360405163391434e360e21b815260040161074893929190610da6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a8857600280548290039055610aa7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610aec91815260200190565b60405180910390a3505050565b600060208284031215610b0b57600080fd5b81356001600160e01b031981168114610b2357600080fd5b9392505050565b602081526000825180602084015260005b81811015610b585760208186018101516040868401015201610b3b565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610b8f57600080fd5b919050565b60008060408385031215610ba757600080fd5b610bb083610b78565b946020939093013593505050565b600080600060608486031215610bd357600080fd5b610bdc84610b78565b9250610bea60208501610b78565b929592945050506040919091013590565b600060208284031215610c0d57600080fd5b610b2382610b78565b6001600160a01b0391909116815260200190565b60008083601f840112610c3c57600080fd5b50813567ffffffffffffffff811115610c5457600080fd5b6020830191508360208260051b8501011115610c6f57600080fd5b9250929050565b60008060008060408587031215610c8c57600080fd5b843567ffffffffffffffff811115610ca357600080fd5b610caf87828801610c2a565b909550935050602085013567ffffffffffffffff811115610ccf57600080fd5b610cdb87828801610c2a565b95989497509550505050565b60008060408385031215610cfa57600080fd5b610d0383610b78565b9150610d1160208401610b78565b90509250929050565b600181811c90821680610d2e57607f821691505b602082108103610d4e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102da576102da610d54565b634e487b7160e01b600052603260045260246000fd5b808201808211156102da576102da610d54565b6001600160a01b03939093168352602083019190915260408201526060019056fea2646970667358221220feea5aa62e496eeca7460f830e69c2fd6875d66214e46568fd57cace7dc49ebb64736f6c634300081d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x111 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E71D92D GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9BDD8013 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9BDD8013 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xA583024B EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18BF5077 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x2B8C49E3 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xB2A JUMP JUMPDEST PUSH2 0x129 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x490 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x54B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x55F JUMP JUMPDEST PUSH2 0x18B PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xC76 JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x129 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0xB94 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST PUSH2 0x16A PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x18B PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xCCCC665 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x2BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x36372B07 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2DA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2EF SWAP1 PUSH2 0xD1A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x31B SWAP1 PUSH2 0xD1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x368 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x368 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x34B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x380 DUP2 DUP6 DUP6 PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x28 PUSH1 0x21 PUSH1 0x99 SHL ADD EQ PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BA DUP3 DUP3 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDE22BAFF038E3A3E08407CBDF617DEED74E869A7BA517DF611E33131C6E6EA04 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x40D DUP6 DUP3 DUP6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x418 DUP6 DUP6 DUP6 PUSH2 0x7F9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x28 PUSH1 0x21 PUSH1 0x99 SHL ADD EQ PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x453 DUP3 DUP3 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xB90795A66650155983E242CAC3E1AC1A4DC26F8ED2987F3CE416A34E00111FD4 SWAP1 PUSH1 0x20 ADD PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x498 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x4A2 DUP3 DUP3 PUSH2 0x76F JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP1 DUP3 GT PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12D37EE5 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EE DUP3 DUP5 PUSH2 0xD6A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x50D SWAP1 DUP3 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x553 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x55D PUSH1 0x0 PUSH2 0x8BB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2EF SWAP1 PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x576 PUSH2 0x88E JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH3 0x1398B9 PUSH1 0xE3 SHL SUB NOT DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6A8 JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0xD7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x6 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x5D3 JUMPI PUSH2 0x5D3 PUSH2 0xD7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5E8 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH32 0xEAAC1064EE8D13F83091F388597FFB5FF2D2E59F6A16AAE2A74BA7F2D13C8D9 SWAP1 POP DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x650 PUSH2 0xD7D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0xBFB JUMP JUMPDEST DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x677 JUMPI PUSH2 0x677 PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 MUL SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP1 DUP5 ADD MSTORE POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 ADD PUSH2 0x59C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0xD6A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x380 DUP2 DUP6 DUP6 PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x71E PUSH2 0x88E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x751 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75A DUP2 PUSH2 0x8BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x76A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x90D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x799 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x4A2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP5 DUP5 PUSH2 0x6EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x7F3 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH2 0x7F3 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x90D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x823 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x84D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x76A DUP4 DUP4 DUP4 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x882 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH2 0x4A2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x55D JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x937 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x961 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x7F3 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9D4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA0D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA6C SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA4D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA88 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAEC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB58 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xB3B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB0 DUP4 PUSH2 0xB78 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDC DUP5 PUSH2 0xB78 JUMP JUMPDEST SWAP3 POP PUSH2 0xBEA PUSH1 0x20 DUP6 ADD PUSH2 0xB78 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB23 DUP3 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCAF DUP8 DUP3 DUP9 ADD PUSH2 0xC2A JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCDB DUP8 DUP3 DUP9 ADD PUSH2 0xC2A JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD03 DUP4 PUSH2 0xB78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD11 PUSH1 0x20 DUP5 ADD PUSH2 0xB78 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD2E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD4E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2DA JUMPI PUSH2 0x2DA PUSH2 0xD54 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2DA JUMPI PUSH2 0x2DA PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xEA GAS 0xA6 0x2E BLOBHASH PUSH15 0xECA7460F830E69C2FD6875D66214E4 PUSH6 0x68FD57CACE7D 0xC4 SWAP15 0xBB PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
              "sourceMap": "644:2527:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2881:288;;;;;;:::i;:::-;;:::i;:::-;;;470:14:12;;463:22;445:41;;433:2;418:18;2881:288:8;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;2830:97::-;2908:12;;2830:97;;;1658:25:12;;;1646:2;1631:18;2830:97:3;1512:177:12;2260:273:8;;;;;;:::i;:::-;;:::i;:::-;;4757:244:3;;;;;;:::i;:::-;;:::i;2568:279:8:-;;;;;;:::i;:::-;;:::i;2688:82:3:-;;;2761:2;2215:36:12;;2203:2;2188:18;2688:82:3;2073:184:12;2130:95:8;;;;;;:::i;:::-;;:::i;1587:407::-;;;:::i;2985:116:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:3;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;;;;;:::i;1962:93:3:-;;;:::i;996:380:8:-;;;;;;:::i;:::-;;:::i;1420:123::-;;;;;;:::i;:::-;;:::i;3296:178:3:-;;;;;;:::i;:::-;;:::i;3532:140::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2881:288:8:-;2972:4;-1:-1:-1;;;;;;3007:42:8;;-1:-1:-1;;;3007:42:8;;:98;;-1:-1:-1;;;;;;;3065:40:8;;-1:-1:-1;;;3065:40:8;3007:98;:155;;;-1:-1:-1;;;;;;;3121:41:8;;-1:-1:-1;;;3121:41:8;3007:155;2988:174;2881:288;-1:-1:-1;;2881:288:8:o;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:6;4106:31:3;735:10:6;4122:7:3;4131:5;4106:8;:31::i;:::-;-1:-1:-1;4154:4:3;;3979:186;-1:-1:-1;;;3979:186:3:o;2260:273:8:-;2337:10;-1:-1:-1;;;;;2337:56:8;2333:108;;2416:14;;-1:-1:-1;;;2416:14:8;;;;;;;;;;;2333:108;2451:19;2457:3;2462:7;2451:5;:19::i;:::-;2486:40;;1658:25:12;;;2515:10:8;;-1:-1:-1;;;;;2486:40:8;;;;;1646:2:12;1631:18;2486:40:8;;;;;;;;2260:273;;:::o;4757:244:3:-;4844:4;735:10:6;4900:37:3;4916:4;735:10:6;4931:5:3;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:3;;4757:244;-1:-1:-1;;;;4757:244:3:o;2568:279:8:-;2647:10;-1:-1:-1;;;;;2647:56:8;2643:108;;2726:14;;-1:-1:-1;;;2726:14:8;;;;;;;;;;;2643:108;2761:21;2767:5;2774:7;2761:5;:21::i;:::-;2798:42;;1658:25:12;;;2829:10:8;;-1:-1:-1;;;;;2798:42:8;;;;;1646:2:12;1631:18;2798:42:8;1512:177:12;2130:95:8;1531:13:0;:11;:13::i;:::-;2201:17:8::1;2207:2;2211:6;2201:5;:17::i;:::-;2130:95:::0;;:::o;1587:407::-;1649:10;1623:13;1639:21;;;:9;:21;;;;;;;;;1695:7;:19;;;;;;;1728:23;;;1724:77;;1774:16;;-1:-1:-1;;;1774:16:8;;;;;;;;;;;1724:77;1811:21;1835:22;1843:14;1835:5;:22;:::i;:::-;1875:10;1867:19;;;;:7;:19;;;;;:27;;;1811:46;;-1:-1:-1;1905:32:8;;1811:46;1905:5;:32::i;:::-;1953:34;;;1961:10;4895:51:12;;4977:2;4962:18;;4955:34;;;1953::8;;4868:18:12;1953:34:8;;;;;;;1613:381;;;1587:407::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;996:380:8:-;1531:13:0;:11;:13::i;:::-;1127:30:8;;::::1;1123:84;;1180:16;;-1:-1:-1::0;;;;;;1180:16:8::1;;;;;;;;;;;1123:84;1222:9;1217:153;1237:16:::0;;::::1;1217:153;;;1297:7;;1305:1;1297:10;;;;;;;:::i;:::-;;;;;;;1274:9;:19;1284:5;;1290:1;1284:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1274:19:8::1;-1:-1:-1::0;;;;;1274:19:8::1;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;1326:33:8::1;::::0;-1:-1:-1;1338:5:8;;1344:1;1338:8;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1348:7;;1356:1;1348:10;;;;;;;:::i;:::-;1326:33;::::0;;-1:-1:-1;;;;;4913:32:12;;;4895:51;;1348:10:8::1;::::0;;::::1;::::0;;;::::1;;4962:18:12::0;;;4955:34;-1:-1:-1;4868:18:12;1326:33:8::1;;;;;;;1255:3;;1217:153;;;;996:380:::0;;;;:::o;1420:123::-;-1:-1:-1;;;;;1523:13:8;;1479:7;1523:13;;;:7;:13;;;;;;;;;1505:9;:15;;;;;;:31;;1523:13;1505:31;:::i;3296:178:3:-;3365:4;735:10:6;3419:27:3;735:10:6;3436:2:3;3440:5;3419:9;:27::i;3532:140::-;-1:-1:-1;;;;;3638:18:3;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8707:128:3:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;7439:208::-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7582:1;7553:32;;-1:-1:-1;;;7553:32:3;;;;;;;;:::i;7505:91::-;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;-1:-1:-1;;10561:16:3;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;-1:-1:-1;;;10668:60:3;;;;;;;;;;:::i;10613:130::-;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:3;;5453:86;;5525:1;5498:30;;-1:-1:-1;;;5498:30:3;;;;;;;;:::i;5453:86::-;-1:-1:-1;;;;;5552:16:3;;5548:86;;5620:1;5591:32;;-1:-1:-1;;;5591:32:3;;;;;;;;:::i;5548:86::-;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;7965:206::-;-1:-1:-1;;;;;8035:21:3;;8031:89;;8106:1;8079:30;;-1:-1:-1;;;8079:30:3;;;;;;;;:::i;8031:89::-;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;735:10:6;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2912:187::-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9682:432:3:-;-1:-1:-1;;;;;9794:19:3;;9790:89;;9865:1;9836:32;;-1:-1:-1;;;9836:32:3;;;;;;;;:::i;9790:89::-;-1:-1:-1;;;;;9892:21:3;;9888:90;;9964:1;9936:31;;-1:-1:-1;;;9936:31:3;;;;;;;;:::i;9888:90::-;-1:-1:-1;;;;;9987:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:3;10075:5;-1:-1:-1;;;;;10066:31:3;;10091:5;10066:31;;;;1658:25:12;;1646:2;1631:18;;1512:177;10066:31:3;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6392:4;6398:11;6411:5;6367:50;;-1:-1:-1;;;6367:50:3;;;;;;;;;;:::i;6317:115::-;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;1658::12;;1646:2;1631:18;;1512:177;7064:25:3;;;;;;;;5989:1107;;;:::o;14:286:12:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:12;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:12:o;497:527::-;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;746:1;756:140;770:6;767:1;764:13;756:140;;;881:2;865:14;;;861:23;;855:30;850:2;831:17;;;827:26;820:66;785:10;756:140;;;760:3;945:1;940:2;931:6;920:9;916:22;912:31;905:42;1015:2;1008;1004:7;999:2;991:6;987:15;983:29;972:9;968:45;964:54;956:62;;;497:527;;;;:::o;1029:173::-;1097:20;;-1:-1:-1;;;;;1146:31:12;;1136:42;;1126:70;;1192:1;1189;1182:12;1126:70;1029:173;;;:::o;1207:300::-;1275:6;1283;1336:2;1324:9;1315:7;1311:23;1307:32;1304:52;;;1352:1;1349;1342:12;1304:52;1375:29;1394:9;1375:29;:::i;:::-;1365:39;1473:2;1458:18;;;;1445:32;;-1:-1:-1;;;1207:300:12:o;1694:374::-;1771:6;1779;1787;1840:2;1828:9;1819:7;1815:23;1811:32;1808:52;;;1856:1;1853;1846:12;1808:52;1879:29;1898:9;1879:29;:::i;:::-;1869:39;;1927:38;1961:2;1950:9;1946:18;1927:38;:::i;:::-;1694:374;;1917:48;;-1:-1:-1;;;2034:2:12;2019:18;;;;2006:32;;1694:374::o;2262:186::-;2321:6;2374:2;2362:9;2353:7;2349:23;2345:32;2342:52;;;2390:1;2387;2380:12;2342:52;2413:29;2432:9;2413:29;:::i;2453:203::-;-1:-1:-1;;;;;2617:32:12;;;;2599:51;;2587:2;2572:18;;2453:203::o;2661:367::-;2724:8;2734:6;2788:3;2781:4;2773:6;2769:17;2765:27;2755:55;;2806:1;2803;2796:12;2755:55;-1:-1:-1;2829:20:12;;2872:18;2861:30;;2858:50;;;2904:1;2901;2894:12;2858:50;2941:4;2933:6;2929:17;2917:29;;3001:3;2994:4;2984:6;2981:1;2977:14;2969:6;2965:27;2961:38;2958:47;2955:67;;;3018:1;3015;3008:12;2955:67;2661:367;;;;;:::o;3033:768::-;3155:6;3163;3171;3179;3232:2;3220:9;3211:7;3207:23;3203:32;3200:52;;;3248:1;3245;3238:12;3200:52;3288:9;3275:23;3321:18;3313:6;3310:30;3307:50;;;3353:1;3350;3343:12;3307:50;3392:70;3454:7;3445:6;3434:9;3430:22;3392:70;:::i;:::-;3481:8;;-1:-1:-1;3366:96:12;-1:-1:-1;;3569:2:12;3554:18;;3541:32;3598:18;3585:32;;3582:52;;;3630:1;3627;3620:12;3582:52;3669:72;3733:7;3722:8;3711:9;3707:24;3669:72;:::i;:::-;3033:768;;;;-1:-1:-1;3760:8:12;-1:-1:-1;;;;3033:768:12:o;3806:260::-;3874:6;3882;3935:2;3923:9;3914:7;3910:23;3906:32;3903:52;;;3951:1;3948;3941:12;3903:52;3974:29;3993:9;3974:29;:::i;:::-;3964:39;;4022:38;4056:2;4045:9;4041:18;4022:38;:::i;:::-;4012:48;;3806:260;;;;;:::o;4071:380::-;4150:1;4146:12;;;;4193;;;4214:61;;4268:4;4260:6;4256:17;4246:27;;4214:61;4321:2;4313:6;4310:14;4290:18;4287:38;4284:161;;4367:10;4362:3;4358:20;4355:1;4348:31;4402:4;4399:1;4392:15;4430:4;4427:1;4420:15;4284:161;;4071:380;;;:::o;4456:127::-;4517:10;4512:3;4508:20;4505:1;4498:31;4548:4;4545:1;4538:15;4572:4;4569:1;4562:15;4588:128;4655:9;;;4676:11;;;4673:37;;;4690:18;;:::i;5000:127::-;5061:10;5056:3;5052:20;5049:1;5042:31;5092:4;5089:1;5082:15;5116:4;5113:1;5106:15;5132:125;5197:9;;;5218:10;;;5215:36;;;5231:18;;:::i;5262:345::-;-1:-1:-1;;;;;5482:32:12;;;;5464:51;;5546:2;5531:18;;5524:34;;;;5589:2;5574:18;;5567:34;5452:2;5437:18;;5262:345::o"
            },
            "methodIdentifiers": {
              "addClaimable(address[],uint256[])": "9bdd8013",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "claim()": "4e71d92d",
              "crosschainBurn(address,uint256)": "2b8c49e3",
              "crosschainMint(address,uint256)": "18bf5077",
              "decimals()": "313ce567",
              "getClaimable(address)": "a583024b",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToClaim\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"CrosschainBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"CrosschainMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addClaimable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"crosschainBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"crosschainMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"LengthMismatch()\":[{\"details\":\"Length mismatch\"}],\"NothingToClaim()\":[{\"details\":\"Nothing to claim\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"Unauthorized()\":[{\"details\":\"Unauthorized error\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Claimed(address,uint256)\":{\"params\":{\"account\":\"The account that claimed the tokens\",\"amount\":\"The amount of tokens claimed\"}},\"CrosschainBurn(address,uint256,address)\":{\"params\":{\"amount\":\"Amount of tokens burned.\",\"from\":\"Address of the account tokens are being burned from.\",\"sender\":\"Address of the account that initiated the crosschain transfer.\"}},\"CrosschainMint(address,uint256,address)\":{\"params\":{\"amount\":\"Amount of tokens minted.\",\"sender\":\"Address of the account that finilized the crosschain transfer.\",\"to\":\"Address of the account tokens are being minted for.\"}},\"TokensAdded(address,uint256)\":{\"params\":{\"account\":\"The account that added the tokens\",\"amount\":\"The amount of tokens added\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addClaimable(address[],uint256[])\":{\"params\":{\"amounts\":\"Array of claimable amounts (added to existing claimable).\",\"users\":\"Array of user addresses.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"crosschainBurn(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to burn.\",\"_from\":\"Address to burn tokens from.\"}},\"crosschainMint(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to mint.\",\"_to\":\"Address to mint tokens to.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getClaimable(address)\":{\"params\":{\"account\":\"The account to check\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"token amount\",\"to\":\"address that receives the tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SuperchainPoints\",\"version\":1},\"userdoc\":{\"events\":{\"Claimed(address,uint256)\":{\"notice\":\"Emitted when tokens are claimed\"},\"CrosschainBurn(address,uint256,address)\":{\"notice\":\"Emitted when a crosschain transfer burns tokens.\"},\"CrosschainMint(address,uint256,address)\":{\"notice\":\"Emitted when a crosschain transfer mints tokens.\"},\"TokensAdded(address,uint256)\":{\"notice\":\"Emitted when tokens are added to be claimable by users.\"}},\"kind\":\"user\",\"methods\":{\"addClaimable(address[],uint256[])\":{\"notice\":\"Owner adds tokens to be claimable by users.\"},\"claim()\":{\"notice\":\"Claim the tokens assigned to the caller.\"},\"crosschainBurn(address,uint256)\":{\"notice\":\"Burn tokens through a crosschain transfer.\"},\"crosschainMint(address,uint256)\":{\"notice\":\"Mint tokens through a crosschain transfer.\"},\"getClaimable(address)\":{\"notice\":\"View how much a user can still claim\"},\"mint(address,uint256)\":{\"notice\":\"Allows owner to mint tokens\"}},\"notice\":\"A standard ERC20 extension implementing IERC7802 for unified cross-chain fungibility across         the Superchain. Allows the SuperchainTokenBridge to mint and burn tokens as needed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperchainPoints.sol\":\"SuperchainPoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/SuperchainPoints.sol\":{\"keccak256\":\"0x180c48537ff967ff0d4518b599bf65bc9d83b760aa541b77c5271a1323262d95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c03ee375c47d4fa8e40fcc8069c69215506d8ca0547a9038a9574d076c58014e\",\"dweb:/ipfs/QmdZRpdGuemSCNjzgLK7eNuaLZp8btXaAHbyYudHBJmJUE\"]},\"contracts/interfaces/IERC7802.sol\":{\"keccak256\":\"0x918fa7cf59d4d71157473f4dd161dbc3e2364d2ed91ad53db84e3bfa1c6d95e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a4041cffaf87c4ddedeace868157fa477fb542cf7b9225f79c45ea4d72920a5\",\"dweb:/ipfs/Qmf6wYUK85jZSkBU8nKLfV6YnhbZNycKwUcqvyKJW8gZcS\"]},\"contracts/interfaces/ISuperchainPoints.sol\":{\"keccak256\":\"0x57b4b5e74d9498e88855a1694c201fb77961739ca01e5ef1c3077fb12a0e6fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40c7a86bf666e1f5f0db81968ab09c804d982b6c3b6f47e2cf554050510eae3e\",\"dweb:/ipfs/QmS3aYSb1q3FRJj9FMCJdXgMpDtqnWJjByXS8dRxp4AAVX\"]},\"contracts/libraries/SuperchainPredeployAddresses.sol\":{\"keccak256\":\"0x88658b528fa07217f374160667eea59ddef05b76a71b0600511472474c1f4931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7392189913fe66876a816740b85bce1375a7a1137fb2604bfe9e20872dc0607\",\"dweb:/ipfs/QmS7pgznuHV9cPzg3ySNzSaHNwpCLzMbiG7Tt6HeSGvzY1\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/IERC7802.sol": {
        "IERC7802": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "CrosschainBurn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "CrosschainMint",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "crosschainBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "crosschainMint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "crosschainBurn(address,uint256)": "2b8c49e3",
              "crosschainMint(address,uint256)": "18bf5077",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"CrosschainBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"CrosschainMint\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"crosschainBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"crosschainMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CrosschainBurn(address,uint256,address)\":{\"params\":{\"amount\":\"Amount of tokens burned.\",\"from\":\"Address of the account tokens are being burned from.\",\"sender\":\"Address of the account that initiated the crosschain transfer.\"}},\"CrosschainMint(address,uint256,address)\":{\"params\":{\"amount\":\"Amount of tokens minted.\",\"sender\":\"Address of the account that finilized the crosschain transfer.\",\"to\":\"Address of the account tokens are being minted for.\"}}},\"kind\":\"dev\",\"methods\":{\"crosschainBurn(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to burn.\",\"_from\":\"Address to burn tokens from.\"}},\"crosschainMint(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to mint.\",\"_to\":\"Address to mint tokens to.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"IERC7802\",\"version\":1},\"userdoc\":{\"events\":{\"CrosschainBurn(address,uint256,address)\":{\"notice\":\"Emitted when a crosschain transfer burns tokens.\"},\"CrosschainMint(address,uint256,address)\":{\"notice\":\"Emitted when a crosschain transfer mints tokens.\"}},\"kind\":\"user\",\"methods\":{\"crosschainBurn(address,uint256)\":{\"notice\":\"Burn tokens through a crosschain transfer.\"},\"crosschainMint(address,uint256)\":{\"notice\":\"Mint tokens through a crosschain transfer.\"}},\"notice\":\"Defines the interface for crosschain ERC20 transfers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC7802.sol\":\"IERC7802\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interfaces/IERC7802.sol\":{\"keccak256\":\"0x918fa7cf59d4d71157473f4dd161dbc3e2364d2ed91ad53db84e3bfa1c6d95e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a4041cffaf87c4ddedeace868157fa477fb542cf7b9225f79c45ea4d72920a5\",\"dweb:/ipfs/Qmf6wYUK85jZSkBU8nKLfV6YnhbZNycKwUcqvyKJW8gZcS\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ISuperchainPoints.sol": {
        "ISuperchainPoints": {
          "abi": [
            {
              "inputs": [],
              "name": "LengthMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NothingToClaim",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Claimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "CrosschainBurn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "CrosschainMint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "users",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "addClaimable",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "crosschainBurn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "crosschainMint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "getClaimable",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addClaimable(address[],uint256[])": "9bdd8013",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "claim()": "4e71d92d",
              "crosschainBurn(address,uint256)": "2b8c49e3",
              "crosschainMint(address,uint256)": "18bf5077",
              "getClaimable(address)": "a583024b",
              "supportsInterface(bytes4)": "01ffc9a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"CrosschainBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"CrosschainMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addClaimable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"crosschainBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"crosschainMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"LengthMismatch()\":[{\"details\":\"Length mismatch\"}],\"NothingToClaim()\":[{\"details\":\"Nothing to claim\"}],\"Unauthorized()\":[{\"details\":\"Unauthorized error\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Claimed(address,uint256)\":{\"params\":{\"account\":\"The account that claimed the tokens\",\"amount\":\"The amount of tokens claimed\"}},\"CrosschainBurn(address,uint256,address)\":{\"params\":{\"amount\":\"Amount of tokens burned.\",\"from\":\"Address of the account tokens are being burned from.\",\"sender\":\"Address of the account that initiated the crosschain transfer.\"}},\"CrosschainMint(address,uint256,address)\":{\"params\":{\"amount\":\"Amount of tokens minted.\",\"sender\":\"Address of the account that finilized the crosschain transfer.\",\"to\":\"Address of the account tokens are being minted for.\"}},\"TokensAdded(address,uint256)\":{\"params\":{\"account\":\"The account that added the tokens\",\"amount\":\"The amount of tokens added\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addClaimable(address[],uint256[])\":{\"params\":{\"amounts\":\"Array of claimable amounts (added to existing claimable).\",\"users\":\"Array of user addresses.\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"crosschainBurn(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to burn.\",\"_from\":\"Address to burn tokens from.\"}},\"crosschainMint(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to mint.\",\"_to\":\"Address to mint tokens to.\"}},\"getClaimable(address)\":{\"params\":{\"account\":\"The account to check\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Claimed(address,uint256)\":{\"notice\":\"Emitted when tokens are claimed\"},\"CrosschainBurn(address,uint256,address)\":{\"notice\":\"Emitted when a crosschain transfer burns tokens.\"},\"CrosschainMint(address,uint256,address)\":{\"notice\":\"Emitted when a crosschain transfer mints tokens.\"},\"TokensAdded(address,uint256)\":{\"notice\":\"Emitted when tokens are added to be claimable by users.\"}},\"kind\":\"user\",\"methods\":{\"addClaimable(address[],uint256[])\":{\"notice\":\"Owner adds tokens to be claimable by users.\"},\"claim()\":{\"notice\":\"Claim the tokens assigned to the caller.\"},\"crosschainBurn(address,uint256)\":{\"notice\":\"Burn tokens through a crosschain transfer.\"},\"crosschainMint(address,uint256)\":{\"notice\":\"Mint tokens through a crosschain transfer.\"},\"getClaimable(address)\":{\"notice\":\"View how much a user can still claim\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPoints.sol\":\"ISuperchainPoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interfaces/IERC7802.sol\":{\"keccak256\":\"0x918fa7cf59d4d71157473f4dd161dbc3e2364d2ed91ad53db84e3bfa1c6d95e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a4041cffaf87c4ddedeace868157fa477fb542cf7b9225f79c45ea4d72920a5\",\"dweb:/ipfs/Qmf6wYUK85jZSkBU8nKLfV6YnhbZNycKwUcqvyKJW8gZcS\"]},\"contracts/interfaces/ISuperchainPoints.sol\":{\"keccak256\":\"0x57b4b5e74d9498e88855a1694c201fb77961739ca01e5ef1c3077fb12a0e6fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40c7a86bf666e1f5f0db81968ab09c804d982b6c3b6f47e2cf554050510eae3e\",\"dweb:/ipfs/QmS3aYSb1q3FRJj9FMCJdXgMpDtqnWJjByXS8dRxp4AAVX\"]}},\"version\":1}"
        },
        "ISuperchainPointsErrors": {
          "abi": [
            {
              "inputs": [],
              "name": "LengthMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NothingToClaim",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"LengthMismatch()\":[{\"details\":\"Length mismatch\"}],\"NothingToClaim()\":[{\"details\":\"Nothing to claim\"}],\"Unauthorized()\":[{\"details\":\"Unauthorized error\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPoints.sol\":\"ISuperchainPointsErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interfaces/IERC7802.sol\":{\"keccak256\":\"0x918fa7cf59d4d71157473f4dd161dbc3e2364d2ed91ad53db84e3bfa1c6d95e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a4041cffaf87c4ddedeace868157fa477fb542cf7b9225f79c45ea4d72920a5\",\"dweb:/ipfs/Qmf6wYUK85jZSkBU8nKLfV6YnhbZNycKwUcqvyKJW8gZcS\"]},\"contracts/interfaces/ISuperchainPoints.sol\":{\"keccak256\":\"0x57b4b5e74d9498e88855a1694c201fb77961739ca01e5ef1c3077fb12a0e6fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40c7a86bf666e1f5f0db81968ab09c804d982b6c3b6f47e2cf554050510eae3e\",\"dweb:/ipfs/QmS3aYSb1q3FRJj9FMCJdXgMpDtqnWJjByXS8dRxp4AAVX\"]}},\"version\":1}"
        },
        "ISuperchainPointsEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Claimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokensAdded",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensAdded\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Claimed(address,uint256)\":{\"params\":{\"account\":\"The account that claimed the tokens\",\"amount\":\"The amount of tokens claimed\"}},\"TokensAdded(address,uint256)\":{\"params\":{\"account\":\"The account that added the tokens\",\"amount\":\"The amount of tokens added\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Claimed(address,uint256)\":{\"notice\":\"Emitted when tokens are claimed\"},\"TokensAdded(address,uint256)\":{\"notice\":\"Emitted when tokens are added to be claimable by users.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPoints.sol\":\"ISuperchainPointsEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interfaces/IERC7802.sol\":{\"keccak256\":\"0x918fa7cf59d4d71157473f4dd161dbc3e2364d2ed91ad53db84e3bfa1c6d95e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a4041cffaf87c4ddedeace868157fa477fb542cf7b9225f79c45ea4d72920a5\",\"dweb:/ipfs/Qmf6wYUK85jZSkBU8nKLfV6YnhbZNycKwUcqvyKJW8gZcS\"]},\"contracts/interfaces/ISuperchainPoints.sol\":{\"keccak256\":\"0x57b4b5e74d9498e88855a1694c201fb77961739ca01e5ef1c3077fb12a0e6fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40c7a86bf666e1f5f0db81968ab09c804d982b6c3b6f47e2cf554050510eae3e\",\"dweb:/ipfs/QmS3aYSb1q3FRJj9FMCJdXgMpDtqnWJjByXS8dRxp4AAVX\"]}},\"version\":1}"
        }
      },
      "contracts/libraries/SuperchainPredeployAddresses.sol": {
        "PredeployAddresses": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c8ccc05bc481e85c0e3fdb6d9a234831c477829c0e954a2e95ce2d6543799ed64736f6c634300081d0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP13 0xCC SDIV 0xBC BASEFEE 0x1E DUP6 0xC0 CALLF 0xFDB6 0xD9 LOG2 CALLVALUE DUP4 SHR SELFBALANCE PUSH25 0x29C0E954A2E95CE2D6543799ED64736F6C634300081D003300 ",
              "sourceMap": "138:1152:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;138:1152:11;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c8ccc05bc481e85c0e3fdb6d9a234831c477829c0e954a2e95ce2d6543799ed64736f6c634300081d0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP13 0xCC SDIV 0xBC BASEFEE 0x1E DUP6 0xC0 CALLF 0xFDB6 0xD9 LOG2 CALLVALUE DUP4 SHR SELFBALANCE PUSH25 0x29C0E954A2E95CE2D6543799ED64736F6C634300081D003300 ",
              "sourceMap": "138:1152:11:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"PredeployAddresses\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Subset of the Predeploys.sol library.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SuperchainPredeployAddresses.sol\":\"PredeployAddresses\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/libraries/SuperchainPredeployAddresses.sol\":{\"keccak256\":\"0x88658b528fa07217f374160667eea59ddef05b76a71b0600511472474c1f4931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7392189913fe66876a816740b85bce1375a7a1137fb2604bfe9e20872dc0607\",\"dweb:/ipfs/QmS7pgznuHV9cPzg3ySNzSaHNwpCLzMbiG7Tt6HeSGvzY1\"]}},\"version\":1}"
        }
      }
    }
  }
}