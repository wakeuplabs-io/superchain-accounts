{
  "id": "56d10bc0f5a26c430ecb3f4c21b38ace",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.29",
  "solcLongVersion": "0.8.29+commit.ab55807c",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1155.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../token/ERC1155/IERC1155.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "contracts/interfaces/ISuperchainPointsRaffle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\ninterface ISuperchainPointsRaffleErrors {\n    /// @notice Error thrown when the raffle is already started\n    error RaffleAlreadyStarted();\n\n    /// @notice Error thrown when the raffle is not started\n    error NoOngoingRaffle();\n\n    /// @notice Error thrown when points transfer fails\n    error TransferFailed();\n\n    /// @notice Random pattern requires seed to be revealed in a future block\n    error CannotRevealBeforeBlock(uint256);\n\n    /// @notice UX requires reveal after timestamp\n    error CannotRevealBeforeTimestamp(uint256 timestamp);\n\n    /// @notice Error thrown when the seed doesn't match the sealed seed\n    error InvalidSeed();\n\n    /// @notice Error thrown when the ticket is not found\n    error TicketNotFound();\n\n    /// @notice Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\n    error NoTicketsToClaim();\n\n    /// @notice Error thrown when the seed has already been used\n    error SeedAlreadyUsed();\n}\n\ninterface ISuperchainPointsRaffleEvents {\n    /// @notice Event emitted when a raffle is started\n    /// @param sealedSeed The seed used to generate the raffle\n    /// @param amount The amount of points to be distributed to the raffle winner\n    event RaffleStarted(bytes32 sealedSeed, uint256 amount);\n\n    /// @notice Event emitted when a raffle is finished\n    /// @param winner The address of the raffle winner\n    /// @param amount The amount of points distributed to the raffle winner\n    event RaffleWinner(address winner, uint256 amount);\n\n    /// @notice Event emitted when tickets are claimed\n    /// @param claimer The address of the claimer\n    /// @param amount The amount of points claimed\n    event TicketsClaimed(address claimer, uint256 amount);\n}\n\ninterface ISuperchainPointsRaffle is\n    ISuperchainPointsRaffleErrors,\n    ISuperchainPointsRaffleEvents\n{\n    /// @notice Starts the raffle\n    /// @param _sealedSeed The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\n    /// @param _amount The amount of points to be distributed to the raffle winner\n    /// @param _badges The badges that are eligible to participate in the raffle\n    /// @param _badgeAllocation The number of tickets allocated to each badge\n    function initialize(\n        bytes32 _sealedSeed,\n        uint256 _revealAfterTimestamp,\n        uint256 _amount,\n        uint256[] memory _badges,\n        uint256[] memory _badgeAllocation\n    ) external;\n\n    /// @notice Reveals the raffle winner and transfers the points\n    /// @param _seed The seed used to generate the raffle\n    function revealWinner(bytes32 _seed) external;\n\n    /// @notice Returns the timestamp at which the seed will be revealed\n    function getRevealedAfter() external view returns (uint256);\n\n    /// @notice Returns the badges that are eligible to participate in the raffle\n    function getEligibleBadges() external view returns (uint256[] memory);\n\n    /// @notice Returns the amount of points that are distributed to the raffle winner\n    function getJackpot() external view returns (uint256);\n\n    /// @notice Returns the total number of tickets that can be claimed\n    function getTotalTickets() external view returns (uint256);\n\n    /// @notice Returns the number of tickets that can be claimed\n    /// @param user The address of the user\n    function getClaimableTickets(address user) external view returns (uint256);\n\n    /// @notice Returns the number of tickets already claimed\n    /// @param user The address of the user\n    function getClaimedTickets(address user) external view returns (uint256);\n\n    /// @notice Claim tickets to participate in raffle\n    function claimTickets() external;\n\n    /// @notice Returns the address of the raffle winner\n    function getWinner() external view returns (address);\n}\n"
      },
      "contracts/interfaces/ISuperchainPointsRaffleFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\ninterface ISuperchainPointsRaffleFactoryErrors {\n    /// @notice Cannot create a raffle if one is already started\n    error OngoingRaffle();\n}\n\ninterface ISuperchainPointsRaffleFactoryEvents {\n    /// @notice Emitted when a raffle is created\n    event RaffleCreated(address raffle);\n}\n\ninterface ISuperchainPointsRaffleFactory is\n    ISuperchainPointsRaffleFactoryErrors,\n    ISuperchainPointsRaffleFactoryEvents\n{\n    /// @notice Checks previous raffle state and creates a new raffle\n    function createRaffle() external;\n}\n"
      },
      "contracts/SuperchainPointsRaffle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport {IERC1155} from \"@openzeppelin/contracts/interfaces/IERC1155.sol\";\nimport {ISuperchainPointsRaffle} from \"./interfaces/ISuperchainPointsRaffle.sol\";\n\n/// @title SuperchainPointsRaffle\n/// @notice A raffle contract using https://fravoll.github.io/solidity-patterns/randomness.html pattern for randomness\ncontract SuperchainPointsRaffle is ISuperchainPointsRaffle, Ownable {\n    bool internal initialized = false;\n\n    bytes32 internal sealedSeed;\n    uint256 internal storedBlockNumber;\n    uint256 internal revealAfterTimestamp;\n\n    IERC20 public superchainPoints;\n    IERC1155 public superchainBadges;\n\n    uint256 internal jackpot;\n    address internal winner = address(0);\n\n    uint256 internal ticketCount;\n    mapping(uint256 => address) internal tickets;\n    mapping(address => uint256) internal ticketsClaimed;\n\n    uint256[] internal eligibleBadges;\n    mapping(uint256 => uint256) internal badgeAllocations;\n\n    /// @param _initialOwner The initial owner of the contract\n    /// @param _superchainPoints The address of the SuperchainPoints contract\n    /// @param _superchainBadges The address of the SuperchainBadges contract\n    constructor(\n        address _initialOwner,\n        IERC20 _superchainPoints,\n        IERC1155 _superchainBadges\n    ) Ownable(_initialOwner) {\n        superchainPoints = _superchainPoints;\n        superchainBadges = _superchainBadges;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function initialize(\n        bytes32 _sealedSeed,\n        uint256 _revealAfterTimestamp,\n        uint256 _jackpot,\n        uint256[] memory _badges,\n        uint256[] memory _badgeAllocation\n    ) public onlyOwner {\n        if (initialized) {\n            revert RaffleAlreadyStarted();\n        }\n\n        // Mark raffle as initialized\n        initialized = true;\n\n        // Store seed\n        sealedSeed = _sealedSeed;\n        storedBlockNumber = block.number + 1;\n        revealAfterTimestamp = _revealAfterTimestamp;\n\n        // Store raffle details\n        jackpot = _jackpot;\n\n        // Store badge details\n        eligibleBadges = new uint256[](_badges.length);\n        for (uint256 i = 0; i < _badges.length; i++) {\n            badgeAllocations[_badges[i]] = _badgeAllocation[i];\n            eligibleBadges[i] = _badges[i];\n        }\n\n        // Pull points for prize\n        bool success = superchainPoints.transferFrom(\n            msg.sender,\n            address(this),\n            jackpot\n        );\n        if (!success) {\n            revert TransferFailed();\n        }\n\n        emit RaffleStarted(sealedSeed, jackpot);\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function revealWinner(bytes32 _seed) public onlyOwner {\n        // Verify raffle is ongoing\n        if (winner != address(0) || !initialized) {\n            revert NoOngoingRaffle();\n        }\n\n        // If we reveal in same block we can know block hash\n        if (storedBlockNumber > block.number) {\n            revert CannotRevealBeforeBlock(storedBlockNumber);\n        } else if (revealAfterTimestamp > block.timestamp) {\n            revert CannotRevealBeforeTimestamp(revealAfterTimestamp);\n        }\n\n        // Prevent owner from changing seed\n        if (keccak256(abi.encodePacked(msg.sender, _seed)) != sealedSeed) {\n            revert InvalidSeed();\n        }\n\n        // Select winner from ticket pool\n        uint256 random = uint256(\n            keccak256(abi.encodePacked(_seed, blockhash(storedBlockNumber)))\n        );\n        winner = tickets[random % ticketCount];\n        if (winner == address(0)) {\n            revert TicketNotFound();\n        }\n\n        // Transfer points to winner\n        bool success = IERC20(superchainPoints).transfer(winner, jackpot);\n        if (!success) {\n            revert TransferFailed();\n        }\n\n        emit RaffleWinner(winner, jackpot);\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function claimTickets() public {\n        // Verify raffle is ongoing\n        if (winner != address(0) || !initialized) {\n            revert NoOngoingRaffle();\n        }\n\n        // Calculate tickets allocation. Maximum possible\n        uint256 ticketsAllocation = getClaimableTickets(msg.sender);\n        if (ticketsAllocation == 0) {\n            revert NoTicketsToClaim();\n        }\n\n        // Allocate tickets to user\n        for (\n            uint256 i = ticketCount;\n            i < ticketCount + ticketsAllocation;\n            i++\n        ) {\n            tickets[i] = msg.sender;\n        }\n        ticketsClaimed[msg.sender] = ticketsAllocation;\n        ticketCount += ticketsAllocation;\n\n        emit TicketsClaimed(msg.sender, ticketsAllocation);\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getClaimableTickets(address user) public view returns (uint256) {\n        uint256 ticketsAllocation = 0;\n        for (uint256 i = 0; i < eligibleBadges.length; i++) {\n            if (superchainBadges.balanceOf(user, eligibleBadges[i]) > 0) {\n                if (badgeAllocations[eligibleBadges[i]] > ticketsAllocation) {\n                    ticketsAllocation = badgeAllocations[eligibleBadges[i]];\n                }\n            }\n        }\n\n        return ticketsAllocation - ticketsClaimed[user];\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getClaimedTickets(address user) public view returns (uint256) {\n        return ticketsClaimed[user];\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getTotalTickets() public view returns (uint256) {\n        return ticketCount;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getJackpot() public view returns (uint256) {\n        return jackpot;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getEligibleBadges() external view returns (uint256[] memory) {\n        return eligibleBadges;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getWinner() external view returns (address) {\n        return winner;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getRevealedAfter() external view returns (uint256) {\n        return revealAfterTimestamp;\n    }\n}\n"
      },
      "contracts/SuperchainPointsRaffleFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport {IERC1155} from \"@openzeppelin/contracts/interfaces/IERC1155.sol\";\nimport {ISuperchainPointsRaffle} from \"./interfaces/ISuperchainPointsRaffle.sol\";\nimport {SuperchainPointsRaffle} from \"./SuperchainPointsRaffle.sol\";\nimport {ISuperchainPointsRaffleFactory} from \"./interfaces/ISuperchainPointsRaffleFactory.sol\";\n\n/// @title SuperchainPointsRaffleFactory\n/// @notice Factory for SuperchainPointsRaffle contracts that also acts as a proxy for the current raffle\ncontract SuperchainPointsRaffleFactory is ISuperchainPointsRaffleFactory, Ownable {\n    IERC20 public superchainPoints;\n    IERC1155 public superchainBadges;\n\n    ISuperchainPointsRaffle public currentRaffle;\n\n    /// @param _initialOwner The initial owner of the contract\n    /// @param _superchainPoints The address of the SuperchainPoints contract\n    /// @param _superchainBadges The address of the SuperchainBadges contract\n    constructor(\n        address _initialOwner,\n        IERC20 _superchainPoints,\n        IERC1155 _superchainBadges\n    ) Ownable(_initialOwner) {\n        superchainPoints = _superchainPoints;\n        superchainBadges = _superchainBadges;\n    }\n\n    function createRaffle() public onlyOwner {\n        if (address(currentRaffle) != address(0) && currentRaffle.getWinner() == address(0)) {\n            revert OngoingRaffle();\n        }\n\n        currentRaffle = new SuperchainPointsRaffle(\n            owner(),\n            superchainPoints,\n            superchainBadges\n        );\n\n        emit RaffleCreated(address(currentRaffle));\n    }\n\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              386
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 387,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 386,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 386,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                386
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 368,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/IERC1155.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1155.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ]
          },
          "id": 152,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
              "file": "../token/ERC1155/IERC1155.sol",
              "id": 151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 152,
              "sourceUnit": 279,
              "src": "133:55:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 150,
                    "name": "IERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 278,
                    "src": "141:8:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "107:82:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              356
            ]
          },
          "id": 156,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 153,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 155,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 156,
              "sourceUnit": 357,
              "src": "131:49:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 154,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:76:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ],
            "IERC165": [
              398
            ]
          },
          "id": 279,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 157,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "110:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 159,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 399,
              "src": "136:62:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 158,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 398,
                    "src": "144:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 161,
                    "name": "IERC165",
                    "nameLocations": [
                      "358:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 398,
                    "src": "358:7:3"
                  },
                  "id": 162,
                  "nodeType": "InheritanceSpecifier",
                  "src": "358:7:3"
                }
              ],
              "canonicalName": "IERC1155",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 160,
                "nodeType": "StructuredDocumentation",
                "src": "200:135:3",
                "text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
              },
              "fullyImplemented": false,
              "id": 278,
              "linearizedBaseContracts": [
                278,
                398
              ],
              "name": "IERC1155",
              "nameLocation": "346:8:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 163,
                    "nodeType": "StructuredDocumentation",
                    "src": "372:125:3",
                    "text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
                  },
                  "eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
                  "id": 175,
                  "name": "TransferSingle",
                  "nameLocation": "508:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "539:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "523:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "523:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "565:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "549:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "549:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 169,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "587:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "571:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "571:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "599:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "591:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "591:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "611:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "603:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "603:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "522:95:3"
                  },
                  "src": "502:116:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 176,
                    "nodeType": "StructuredDocumentation",
                    "src": "624:144:3",
                    "text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
                  },
                  "eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
                  "id": 190,
                  "name": "TransferBatch",
                  "nameLocation": "779:13:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "818:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "802:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "802:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "852:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "836:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "836:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 182,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "882:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "866:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "866:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "904:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "894:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 183,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "894:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 184,
                          "nodeType": "ArrayTypeName",
                          "src": "894:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 188,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "927:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "917:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 186,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "917:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 187,
                          "nodeType": "ArrayTypeName",
                          "src": "917:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:147:3"
                  },
                  "src": "773:167:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "946:147:3",
                    "text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
                  },
                  "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                  "id": 199,
                  "name": "ApprovalForAll",
                  "nameLocation": "1104:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1135:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "1119:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1119:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "1160:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "1144:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1144:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "1175:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "1170:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1170:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1118:66:3"
                  },
                  "src": "1098:87:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 200,
                    "nodeType": "StructuredDocumentation",
                    "src": "1191:343:3",
                    "text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
                  },
                  "eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
                  "id": 206,
                  "name": "URI",
                  "nameLocation": "1545:3:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 202,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1556:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "1549:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1549:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 204,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1579:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "1563:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1548:34:3"
                  },
                  "src": "1539:44:3"
                },
                {
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "1589:172:3",
                    "text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
                  },
                  "functionSelector": "00fdd58e",
                  "id": 216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "1775:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1793:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1785:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1785:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1810:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1802:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1802:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1784:29:3"
                  },
                  "returnParameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1837:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1837:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1836:9:3"
                  },
                  "scope": 278,
                  "src": "1766:80:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "1852:188:3",
                    "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
                  },
                  "functionSelector": "4e1273f4",
                  "id": 229,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOfBatch",
                  "nameLocation": "2054:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "2097:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2078:27:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2078:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 219,
                          "nodeType": "ArrayTypeName",
                          "src": "2078:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "2134:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2115:22:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 221,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2115:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 222,
                          "nodeType": "ArrayTypeName",
                          "src": "2115:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2068:75:3"
                  },
                  "returnParameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2167:16:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 225,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2167:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 226,
                          "nodeType": "ArrayTypeName",
                          "src": "2167:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2166:18:3"
                  },
                  "scope": 278,
                  "src": "2045:140:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 230,
                    "nodeType": "StructuredDocumentation",
                    "src": "2191:248:3",
                    "text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
                  },
                  "functionSelector": "a22cb465",
                  "id": 237,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "2453:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2479:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "2471:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "2494:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "2489:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2489:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2470:33:3"
                  },
                  "returnParameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2512:0:3"
                  },
                  "scope": 278,
                  "src": "2444:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 238,
                    "nodeType": "StructuredDocumentation",
                    "src": "2519:135:3",
                    "text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
                  },
                  "functionSelector": "e985e9c5",
                  "id": 247,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "2668:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2693:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2685:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2685:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2710:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2702:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2702:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2684:35:3"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2743:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2743:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2742:6:3"
                  },
                  "scope": 278,
                  "src": "2659:90:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 248,
                    "nodeType": "StructuredDocumentation",
                    "src": "2755:910:3",
                    "text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
                  },
                  "functionSelector": "f242432a",
                  "id": 261,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "3679:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3704:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3696:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3696:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3718:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3710:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3710:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3730:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3722:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3722:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3742:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3734:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3734:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3764:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3749:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3749:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3695:74:3"
                  },
                  "returnParameters": {
                    "id": 260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3778:0:3"
                  },
                  "scope": 278,
                  "src": "3670:109:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "3785:814:3",
                    "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
                  },
                  "functionSelector": "2eb2c2d6",
                  "id": 277,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeBatchTransferFrom",
                  "nameLocation": "4613:21:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4652:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4644:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4644:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4674:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4666:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4666:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "4705:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4686:22:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 267,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4686:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 268,
                          "nodeType": "ArrayTypeName",
                          "src": "4686:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "4737:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4718:25:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 270,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4718:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 271,
                          "nodeType": "ArrayTypeName",
                          "src": "4718:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4768:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4753:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4753:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4634:144:3"
                  },
                  "returnParameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4787:0:3"
                  },
                  "scope": 278,
                  "src": "4604:184:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 279,
              "src": "336:4454:3",
              "usedErrors": [],
              "usedEvents": [
                175,
                190,
                199,
                206
              ]
            }
          ],
          "src": "110:4681:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              356
            ]
          },
          "id": 357,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 280,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 281,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:4",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 356,
              "linearizedBaseContracts": [
                356
              ],
              "name": "IERC20",
              "nameLocation": "213:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 282,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 290,
                  "name": "Transfer",
                  "nameLocation": "395:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 284,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "404:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 286,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "426:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 288,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "446:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:4"
                  },
                  "src": "389:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 291,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 299,
                  "name": "Approval",
                  "nameLocation": "626:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 293,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "635:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 295,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "658:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 297,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "683:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:4"
                  },
                  "src": "620:78:4"
                },
                {
                  "documentation": {
                    "id": 300,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 305,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:4"
                  },
                  "returnParameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "820:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:4"
                  },
                  "scope": 356,
                  "src": "774:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 313,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 309,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "930:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:4"
                  },
                  "returnParameters": {
                    "id": 312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "970:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:4"
                  },
                  "scope": 356,
                  "src": "911:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 314,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 323,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "1221:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "1233:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:4"
                  },
                  "returnParameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 321,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "1266:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:4"
                  },
                  "scope": 356,
                  "src": "1203:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 324,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 333,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1566:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1581:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:4"
                  },
                  "returnParameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1621:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:4"
                  },
                  "scope": 356,
                  "src": "1547:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 334,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 343,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2325:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2342:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:4"
                  },
                  "returnParameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2375:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:4"
                  },
                  "scope": 356,
                  "src": "2308:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 344,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 355,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2711:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2725:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 350,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2737:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:4"
                  },
                  "returnParameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2770:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:4"
                  },
                  "scope": 356,
                  "src": "2689:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 357,
              "src": "203:2575:4",
              "usedErrors": [],
              "usedEvents": [
                290,
                299
              ]
            }
          ],
          "src": "106:2673:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              386
            ]
          },
          "id": 387,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 358,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 359,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 386,
              "linearizedBaseContracts": [
                386
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 364,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 363,
                        "id": 366,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 386,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 376,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 373,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 372,
                        "id": 375,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 377,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 369,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 386,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 381,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 380,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 386,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 387,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              398
            ]
          },
          "id": 399,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 388,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 389,
                "nodeType": "StructuredDocumentation",
                "src": "141:279:6",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 398,
              "linearizedBaseContracts": [
                398
              ],
              "name": "IERC165",
              "nameLocation": "431:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 390,
                    "nodeType": "StructuredDocumentation",
                    "src": "445:340:6",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 397,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "799:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "824:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "817:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "817:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "816:20:6"
                  },
                  "returnParameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "860:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "860:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "859:6:6"
                  },
                  "scope": 398,
                  "src": "790:76:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 399,
              "src": "421:447:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:754:6"
        },
        "id": 6
      },
      "contracts/SuperchainPointsRaffle.sol": {
        "ast": {
          "absolutePath": "contracts/SuperchainPointsRaffle.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ],
            "IERC20": [
              356
            ],
            "ISuperchainPointsRaffle": [
              1130
            ],
            "Ownable": [
              147
            ],
            "SuperchainPointsRaffle": [
              896
            ]
          },
          "id": 897,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 400,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 402,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 897,
              "sourceUnit": 148,
              "src": "58:67:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 401,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "66:7:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "id": 404,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 897,
              "sourceUnit": 156,
              "src": "126:69:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 403,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "134:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "id": 406,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 897,
              "sourceUnit": 152,
              "src": "196:73:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 405,
                    "name": "IERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 278,
                    "src": "204:8:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPointsRaffle.sol",
              "file": "./interfaces/ISuperchainPointsRaffle.sol",
              "id": 408,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 897,
              "sourceUnit": 1131,
              "src": "270:81:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 407,
                    "name": "ISuperchainPointsRaffle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1130,
                    "src": "278:23:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 410,
                    "name": "ISuperchainPointsRaffle",
                    "nameLocations": [
                      "541:23:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1130,
                    "src": "541:23:7"
                  },
                  "id": 411,
                  "nodeType": "InheritanceSpecifier",
                  "src": "541:23:7"
                },
                {
                  "baseName": {
                    "id": 412,
                    "name": "Ownable",
                    "nameLocations": [
                      "566:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "566:7:7"
                  },
                  "id": 413,
                  "nodeType": "InheritanceSpecifier",
                  "src": "566:7:7"
                }
              ],
              "canonicalName": "SuperchainPointsRaffle",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 409,
                "nodeType": "StructuredDocumentation",
                "src": "353:153:7",
                "text": "@title SuperchainPointsRaffle\n @notice A raffle contract using https://fravoll.github.io/solidity-patterns/randomness.html pattern for randomness"
              },
              "fullyImplemented": true,
              "id": 896,
              "linearizedBaseContracts": [
                896,
                147,
                386,
                1130,
                1052,
                1030
              ],
              "name": "SuperchainPointsRaffle",
              "nameLocation": "515:22:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "initialized",
                  "nameLocation": "594:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "580:33:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "608:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "sealedSeed",
                  "nameLocation": "637:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "620:27:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "mutability": "mutable",
                  "name": "storedBlockNumber",
                  "nameLocation": "670:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "653:34:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "revealAfterTimestamp",
                  "nameLocation": "710:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "693:37:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "b2ab4ab7",
                  "id": 425,
                  "mutability": "mutable",
                  "name": "superchainPoints",
                  "nameLocation": "751:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "737:30:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$356",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 423,
                      "name": "IERC20",
                      "nameLocations": [
                        "737:6:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 356,
                      "src": "737:6:7"
                    },
                    "referencedDeclaration": 356,
                    "src": "737:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$356",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a94bd919",
                  "id": 428,
                  "mutability": "mutable",
                  "name": "superchainBadges",
                  "nameLocation": "789:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "773:32:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$278",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 427,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 426,
                      "name": "IERC1155",
                      "nameLocations": [
                        "773:8:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 278,
                      "src": "773:8:7"
                    },
                    "referencedDeclaration": 278,
                    "src": "773:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$278",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "jackpot",
                  "nameLocation": "829:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "812:24:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "859:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "842:36:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "876:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "868:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 432,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "868:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "868:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "ticketCount",
                  "nameLocation": "902:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "885:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "tickets",
                  "nameLocation": "956:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "919:44:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "typeName": {
                    "id": 441,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 439,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "927:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "919:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                      "typeString": "mapping(uint256 => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 440,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "938:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "ticketsClaimed",
                  "nameLocation": "1006:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "969:51:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 445,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 443,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "977:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "969:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 444,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "988:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "eligibleBadges",
                  "nameLocation": "1046:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1027:33:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1027:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 448,
                    "nodeType": "ArrayTypeName",
                    "src": "1027:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "badgeAllocations",
                  "nameLocation": "1103:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 896,
                  "src": "1066:53:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "typeName": {
                    "id": 452,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 450,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1074:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1066:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                      "typeString": "mapping(uint256 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 451,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1085:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "1487:99:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 468,
                            "name": "superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "1497:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 469,
                            "name": "_superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "1516:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1497:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "1497:36:7"
                      },
                      {
                        "expression": {
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 472,
                            "name": "superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 428,
                            "src": "1543:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 473,
                            "name": "_superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 462,
                            "src": "1562:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "src": "1543:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "1543:36:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 454,
                    "nodeType": "StructuredDocumentation",
                    "src": "1126:214:7",
                    "text": "@param _initialOwner The initial owner of the contract\n @param _superchainPoints The address of the SuperchainPoints contract\n @param _superchainBadges The address of the SuperchainBadges contract"
                  },
                  "id": 477,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 465,
                          "name": "_initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "1472:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 466,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 464,
                        "name": "Ownable",
                        "nameLocations": [
                          "1464:7:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1464:7:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1464:22:7"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 456,
                        "mutability": "mutable",
                        "name": "_initialOwner",
                        "nameLocation": "1374:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 477,
                        "src": "1366:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1366:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "_superchainPoints",
                        "nameLocation": "1404:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 477,
                        "src": "1397:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$356",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 458,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 457,
                            "name": "IERC20",
                            "nameLocations": [
                              "1397:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 356,
                            "src": "1397:6:7"
                          },
                          "referencedDeclaration": 356,
                          "src": "1397:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 462,
                        "mutability": "mutable",
                        "name": "_superchainBadges",
                        "nameLocation": "1440:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 477,
                        "src": "1431:26:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$278",
                          "typeString": "contract IERC1155"
                        },
                        "typeName": {
                          "id": 461,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 460,
                            "name": "IERC1155",
                            "nameLocations": [
                              "1431:8:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 278,
                            "src": "1431:8:7"
                          },
                          "referencedDeclaration": 278,
                          "src": "1431:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1356:107:7"
                  },
                  "returnParameters": {
                    "id": 467,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1487:0:7"
                  },
                  "scope": 896,
                  "src": "1345:241:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1072
                  ],
                  "body": {
                    "id": 589,
                    "nodeType": "Block",
                    "src": "1850:924:7",
                    "statements": [
                      {
                        "condition": {
                          "id": 495,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "1864:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 500,
                        "nodeType": "IfStatement",
                        "src": "1860:71:7",
                        "trueBody": {
                          "id": 499,
                          "nodeType": "Block",
                          "src": "1877:54:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 496,
                                  "name": "RaffleAlreadyStarted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1001,
                                  "src": "1898:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1898:22:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 498,
                              "nodeType": "RevertStatement",
                              "src": "1891:29:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 501,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "1979:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1993:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1979:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 504,
                        "nodeType": "ExpressionStatement",
                        "src": "1979:18:7"
                      },
                      {
                        "expression": {
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 505,
                            "name": "sealedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "2030:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 506,
                            "name": "_sealedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "2043:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2030:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 508,
                        "nodeType": "ExpressionStatement",
                        "src": "2030:24:7"
                      },
                      {
                        "expression": {
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 509,
                            "name": "storedBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "2064:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 510,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2084:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2090:6:7",
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "2084:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2099:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2084:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2064:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 515,
                        "nodeType": "ExpressionStatement",
                        "src": "2064:36:7"
                      },
                      {
                        "expression": {
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 516,
                            "name": "revealAfterTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "2110:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 517,
                            "name": "_revealAfterTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 482,
                            "src": "2133:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2110:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 519,
                        "nodeType": "ExpressionStatement",
                        "src": "2110:44:7"
                      },
                      {
                        "expression": {
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 520,
                            "name": "jackpot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 430,
                            "src": "2197:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 521,
                            "name": "_jackpot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "2207:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2197:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 523,
                        "nodeType": "ExpressionStatement",
                        "src": "2197:18:7"
                      },
                      {
                        "expression": {
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 524,
                            "name": "eligibleBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 449,
                            "src": "2257:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 528,
                                  "name": "_badges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 487,
                                  "src": "2288:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2296:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2288:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "2274:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 525,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2278:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 526,
                                "nodeType": "ArrayTypeName",
                                "src": "2278:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2274:29:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "2257:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 532,
                        "nodeType": "ExpressionStatement",
                        "src": "2257:46:7"
                      },
                      {
                        "body": {
                          "id": 562,
                          "nodeType": "Block",
                          "src": "2358:119:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 544,
                                    "name": "badgeAllocations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 453,
                                    "src": "2372:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 548,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 545,
                                      "name": "_badges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 487,
                                      "src": "2389:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 547,
                                    "indexExpression": {
                                      "id": 546,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 534,
                                      "src": "2397:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2389:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2372:28:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 549,
                                    "name": "_badgeAllocation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 490,
                                    "src": "2403:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 551,
                                  "indexExpression": {
                                    "id": 550,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 534,
                                    "src": "2420:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2403:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2372:50:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 553,
                              "nodeType": "ExpressionStatement",
                              "src": "2372:50:7"
                            },
                            {
                              "expression": {
                                "id": 560,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 554,
                                    "name": "eligibleBadges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 449,
                                    "src": "2436:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 556,
                                  "indexExpression": {
                                    "id": 555,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 534,
                                    "src": "2451:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2436:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 557,
                                    "name": "_badges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 487,
                                    "src": "2456:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 559,
                                  "indexExpression": {
                                    "id": 558,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 534,
                                    "src": "2464:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2456:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2436:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 561,
                              "nodeType": "ExpressionStatement",
                              "src": "2436:30:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 537,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "2333:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 538,
                              "name": "_badges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "2337:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2345:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2337:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2333:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 563,
                        "initializationExpression": {
                          "assignments": [
                            534
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 534,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2326:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 563,
                              "src": "2318:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 533,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2318:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 536,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2330:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2318:13:7"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2353:3:7",
                            "subExpression": {
                              "id": 541,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "2353:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 543,
                          "nodeType": "ExpressionStatement",
                          "src": "2353:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "2313:164:7"
                      },
                      {
                        "assignments": [
                          565
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 565,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2525:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 589,
                            "src": "2520:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 564,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2520:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 576,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 568,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2578:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2582:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2578:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 572,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2610:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$896",
                                    "typeString": "contract SuperchainPointsRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$896",
                                    "typeString": "contract SuperchainPointsRaffle"
                                  }
                                ],
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2602:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 570,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2602:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2602:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 574,
                              "name": "jackpot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "2629:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 566,
                              "name": "superchainPoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 425,
                              "src": "2535:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$356",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2552:12:7",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 355,
                            "src": "2535:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2535:111:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2520:126:7"
                      },
                      {
                        "condition": {
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2660:8:7",
                          "subExpression": {
                            "id": 577,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "2661:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 583,
                        "nodeType": "IfStatement",
                        "src": "2656:62:7",
                        "trueBody": {
                          "id": 582,
                          "nodeType": "Block",
                          "src": "2670:48:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 579,
                                  "name": "TransferFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1007,
                                  "src": "2691:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2691:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 581,
                              "nodeType": "RevertStatement",
                              "src": "2684:23:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 585,
                              "name": "sealedSeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "2747:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 586,
                              "name": "jackpot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "2759:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 584,
                            "name": "RaffleStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "2733:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2733:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 588,
                        "nodeType": "EmitStatement",
                        "src": "2728:39:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 478,
                    "nodeType": "StructuredDocumentation",
                    "src": "1592:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "31e54a2e",
                  "id": 590,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 493,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 492,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1840:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1840:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1840:9:7"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "1645:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 480,
                        "mutability": "mutable",
                        "name": "_sealedSeed",
                        "nameLocation": "1673:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "1665:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1665:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 482,
                        "mutability": "mutable",
                        "name": "_revealAfterTimestamp",
                        "nameLocation": "1702:21:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "1694:29:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 481,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1694:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 484,
                        "mutability": "mutable",
                        "name": "_jackpot",
                        "nameLocation": "1741:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "1733:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1733:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "_badges",
                        "nameLocation": "1776:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "1759:24:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 485,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1759:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 486,
                          "nodeType": "ArrayTypeName",
                          "src": "1759:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 490,
                        "mutability": "mutable",
                        "name": "_badgeAllocation",
                        "nameLocation": "1810:16:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "1793:33:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 488,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1793:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 489,
                          "nodeType": "ArrayTypeName",
                          "src": "1793:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1655:177:7"
                  },
                  "returnParameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1850:0:7"
                  },
                  "scope": 896,
                  "src": "1636:1138:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1078
                  ],
                  "body": {
                    "id": 703,
                    "nodeType": "Block",
                    "src": "2878:1147:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 598,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 436,
                              "src": "2928:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 601,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2946:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2938:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 599,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2938:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2938:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2928:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2952:12:7",
                            "subExpression": {
                              "id": 604,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "2953:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2928:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 611,
                        "nodeType": "IfStatement",
                        "src": "2924:91:7",
                        "trueBody": {
                          "id": 610,
                          "nodeType": "Block",
                          "src": "2966:49:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 607,
                                  "name": "NoOngoingRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1004,
                                  "src": "2987:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2987:17:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 609,
                              "nodeType": "RevertStatement",
                              "src": "2980:24:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 612,
                            "name": "storedBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3090:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 613,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3110:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3116:6:7",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "3110:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3090:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 621,
                              "name": "revealAfterTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 422,
                              "src": "3208:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 622,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3231:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3237:9:7",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3231:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3208:38:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 630,
                          "nodeType": "IfStatement",
                          "src": "3204:125:7",
                          "trueBody": {
                            "id": 629,
                            "nodeType": "Block",
                            "src": "3248:81:7",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [
                                    {
                                      "id": 626,
                                      "name": "revealAfterTimestamp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 422,
                                      "src": "3297:20:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 625,
                                    "name": "CannotRevealBeforeTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1017,
                                    "src": "3269:27:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
                                      "typeString": "function (uint256) pure returns (error)"
                                    }
                                  },
                                  "id": 627,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3269:49:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 628,
                                "nodeType": "RevertStatement",
                                "src": "3262:56:7"
                              }
                            ]
                          }
                        },
                        "id": 631,
                        "nodeType": "IfStatement",
                        "src": "3086:243:7",
                        "trueBody": {
                          "id": 620,
                          "nodeType": "Block",
                          "src": "3124:74:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 617,
                                    "name": "storedBlockNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 420,
                                    "src": "3169:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 616,
                                  "name": "CannotRevealBeforeBlock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1012,
                                  "src": "3145:23:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256) pure returns (error)"
                                  }
                                },
                                "id": 618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3145:42:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 619,
                              "nodeType": "RevertStatement",
                              "src": "3138:49:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 635,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3414:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 636,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3418:6:7",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3414:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 637,
                                    "name": "_seed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 593,
                                    "src": "3426:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 633,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3397:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 634,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3401:12:7",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3397:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3397:35:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 632,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3387:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3387:46:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 640,
                            "name": "sealedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "3437:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3387:60:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 646,
                        "nodeType": "IfStatement",
                        "src": "3383:111:7",
                        "trueBody": {
                          "id": 645,
                          "nodeType": "Block",
                          "src": "3449:45:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 642,
                                  "name": "InvalidSeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1020,
                                  "src": "3470:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3470:13:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 644,
                              "nodeType": "RevertStatement",
                              "src": "3463:20:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          648
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 648,
                            "mutability": "mutable",
                            "name": "random",
                            "nameLocation": "3554:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 703,
                            "src": "3546:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 647,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3546:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 661,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 654,
                                      "name": "_seed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 593,
                                      "src": "3611:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 656,
                                          "name": "storedBlockNumber",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 420,
                                          "src": "3628:17:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 655,
                                        "name": "blockhash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -5,
                                        "src": "3618:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 657,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3618:28:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 652,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "3594:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3598:12:7",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "3594:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 658,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3594:53:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 651,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "3584:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3584:64:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3563:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 649,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3563:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3563:95:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3546:112:7"
                      },
                      {
                        "expression": {
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 662,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 436,
                            "src": "3668:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 663,
                              "name": "tickets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "3677:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 667,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 664,
                                "name": "random",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "3685:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "id": 665,
                                "name": "ticketCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 438,
                                "src": "3694:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3685:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3677:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3668:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 669,
                        "nodeType": "ExpressionStatement",
                        "src": "3668:38:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 670,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 436,
                            "src": "3720:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3738:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3730:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 671,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3730:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3730:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3720:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 680,
                        "nodeType": "IfStatement",
                        "src": "3716:74:7",
                        "trueBody": {
                          "id": 679,
                          "nodeType": "Block",
                          "src": "3742:48:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 676,
                                  "name": "TicketNotFound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1023,
                                  "src": "3763:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3763:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 678,
                              "nodeType": "RevertStatement",
                              "src": "3756:23:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          682
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 682,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3842:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 703,
                            "src": "3837:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 681,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3837:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 690,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 687,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 436,
                              "src": "3886:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 688,
                              "name": "jackpot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "3894:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 684,
                                  "name": "superchainPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 425,
                                  "src": "3859:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$356",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$356",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 683,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 356,
                                "src": "3852:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$356_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3852:24:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$356",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3877:8:7",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 323,
                            "src": "3852:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3852:50:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3837:65:7"
                      },
                      {
                        "condition": {
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3916:8:7",
                          "subExpression": {
                            "id": 691,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "3917:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 697,
                        "nodeType": "IfStatement",
                        "src": "3912:62:7",
                        "trueBody": {
                          "id": 696,
                          "nodeType": "Block",
                          "src": "3926:48:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 693,
                                  "name": "TransferFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1007,
                                  "src": "3947:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3947:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 695,
                              "nodeType": "RevertStatement",
                              "src": "3940:23:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 699,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 436,
                              "src": "4002:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 700,
                              "name": "jackpot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "4010:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 698,
                            "name": "RaffleWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1044,
                            "src": "3989:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3989:29:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 702,
                        "nodeType": "EmitStatement",
                        "src": "3984:34:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 591,
                    "nodeType": "StructuredDocumentation",
                    "src": "2780:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "a9a86f4d",
                  "id": 704,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 596,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 595,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2868:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2868:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2868:9:7"
                    }
                  ],
                  "name": "revealWinner",
                  "nameLocation": "2833:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 594,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "_seed",
                        "nameLocation": "2854:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 704,
                        "src": "2846:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2846:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2845:15:7"
                  },
                  "returnParameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2878:0:7"
                  },
                  "scope": 896,
                  "src": "2824:1201:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1123
                  ],
                  "body": {
                    "id": 775,
                    "nodeType": "Block",
                    "src": "4106:729:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 708,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 436,
                              "src": "4156:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 711,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4174:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4166:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 709,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4166:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4166:10:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4156:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4180:12:7",
                            "subExpression": {
                              "id": 714,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "4181:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4156:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 721,
                        "nodeType": "IfStatement",
                        "src": "4152:91:7",
                        "trueBody": {
                          "id": 720,
                          "nodeType": "Block",
                          "src": "4194:49:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 717,
                                  "name": "NoOngoingRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1004,
                                  "src": "4215:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4215:17:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 719,
                              "nodeType": "RevertStatement",
                              "src": "4208:24:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          723
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 723,
                            "mutability": "mutable",
                            "name": "ticketsAllocation",
                            "nameLocation": "4319:17:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 775,
                            "src": "4311:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 722,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4311:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 728,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 725,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4359:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4363:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4359:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 724,
                            "name": "getClaimableTickets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 836,
                            "src": "4339:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4339:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4311:59:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 729,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "4384:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4405:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4384:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 736,
                        "nodeType": "IfStatement",
                        "src": "4380:78:7",
                        "trueBody": {
                          "id": 735,
                          "nodeType": "Block",
                          "src": "4408:50:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 732,
                                  "name": "NoTicketsToClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1026,
                                  "src": "4429:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4429:18:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 734,
                              "nodeType": "RevertStatement",
                              "src": "4422:25:7"
                            }
                          ]
                        }
                      },
                      {
                        "body": {
                          "id": 756,
                          "nodeType": "Block",
                          "src": "4622:48:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 749,
                                    "name": "tickets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 442,
                                    "src": "4636:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 751,
                                  "indexExpression": {
                                    "id": 750,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 738,
                                    "src": "4644:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4636:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 752,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4649:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4653:6:7",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4649:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4636:23:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 755,
                              "nodeType": "ExpressionStatement",
                              "src": "4636:23:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 741,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "4559:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 742,
                              "name": "ticketCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "4563:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 743,
                              "name": "ticketsAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 723,
                              "src": "4577:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4563:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4559:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 757,
                        "initializationExpression": {
                          "assignments": [
                            738
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 738,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4530:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 757,
                              "src": "4522:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 737,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4522:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 740,
                          "initialValue": {
                            "id": 739,
                            "name": "ticketCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "4534:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4522:23:7"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4608:3:7",
                            "subExpression": {
                              "id": 746,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "4608:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 748,
                          "nodeType": "ExpressionStatement",
                          "src": "4608:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "4504:166:7"
                      },
                      {
                        "expression": {
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 758,
                              "name": "ticketsClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "4679:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 761,
                            "indexExpression": {
                              "expression": {
                                "id": 759,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4694:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4698:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4694:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4679:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 762,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "4708:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4679:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 764,
                        "nodeType": "ExpressionStatement",
                        "src": "4679:46:7"
                      },
                      {
                        "expression": {
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 765,
                            "name": "ticketCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "4735:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 766,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "4750:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4735:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 768,
                        "nodeType": "ExpressionStatement",
                        "src": "4735:32:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 770,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4798:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4802:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4798:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 772,
                              "name": "ticketsAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 723,
                              "src": "4810:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 769,
                            "name": "TicketsClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "4783:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4783:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 774,
                        "nodeType": "EmitStatement",
                        "src": "4778:50:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 705,
                    "nodeType": "StructuredDocumentation",
                    "src": "4031:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "81fe4c61",
                  "id": 776,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimTickets",
                  "nameLocation": "4084:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 706,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4096:2:7"
                  },
                  "returnParameters": {
                    "id": 707,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4106:0:7"
                  },
                  "scope": 896,
                  "src": "4075:760:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1111
                  ],
                  "body": {
                    "id": 835,
                    "nodeType": "Block",
                    "src": "4958:439:7",
                    "statements": [
                      {
                        "assignments": [
                          785
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 785,
                            "mutability": "mutable",
                            "name": "ticketsAllocation",
                            "nameLocation": "4976:17:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 835,
                            "src": "4968:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 784,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4968:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 787,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4996:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4968:29:7"
                      },
                      {
                        "body": {
                          "id": 827,
                          "nodeType": "Block",
                          "src": "5059:274:7",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 801,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 779,
                                      "src": "5104:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 802,
                                        "name": "eligibleBadges",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 449,
                                        "src": "5110:14:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 804,
                                      "indexExpression": {
                                        "id": 803,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 789,
                                        "src": "5125:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5110:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 799,
                                      "name": "superchainBadges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 428,
                                      "src": "5077:16:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC1155_$278",
                                        "typeString": "contract IERC1155"
                                      }
                                    },
                                    "id": 800,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5094:9:7",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 216,
                                    "src": "5077:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view external returns (uint256)"
                                    }
                                  },
                                  "id": 805,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5077:51:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5131:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5077:55:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 826,
                              "nodeType": "IfStatement",
                              "src": "5073:250:7",
                              "trueBody": {
                                "id": 825,
                                "nodeType": "Block",
                                "src": "5134:189:7",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 814,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 808,
                                          "name": "badgeAllocations",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 453,
                                          "src": "5156:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 812,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 809,
                                            "name": "eligibleBadges",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 449,
                                            "src": "5173:14:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                              "typeString": "uint256[] storage ref"
                                            }
                                          },
                                          "id": 811,
                                          "indexExpression": {
                                            "id": 810,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 789,
                                            "src": "5188:1:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5173:17:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5156:35:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 813,
                                        "name": "ticketsAllocation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 785,
                                        "src": "5194:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5156:55:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 824,
                                    "nodeType": "IfStatement",
                                    "src": "5152:157:7",
                                    "trueBody": {
                                      "id": 823,
                                      "nodeType": "Block",
                                      "src": "5213:96:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 821,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 815,
                                              "name": "ticketsAllocation",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 785,
                                              "src": "5235:17:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "baseExpression": {
                                                "id": 816,
                                                "name": "badgeAllocations",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 453,
                                                "src": "5255:16:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                                  "typeString": "mapping(uint256 => uint256)"
                                                }
                                              },
                                              "id": 820,
                                              "indexExpression": {
                                                "baseExpression": {
                                                  "id": 817,
                                                  "name": "eligibleBadges",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 449,
                                                  "src": "5272:14:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                    "typeString": "uint256[] storage ref"
                                                  }
                                                },
                                                "id": 819,
                                                "indexExpression": {
                                                  "id": 818,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 789,
                                                  "src": "5287:1:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "5272:17:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "5255:35:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5235:55:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 822,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5235:55:7"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 792,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 789,
                            "src": "5027:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 793,
                              "name": "eligibleBadges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 449,
                              "src": "5031:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5046:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5031:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5027:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 828,
                        "initializationExpression": {
                          "assignments": [
                            789
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 789,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5020:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 828,
                              "src": "5012:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 788,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5012:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 791,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5024:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5012:13:7"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5054:3:7",
                            "subExpression": {
                              "id": 796,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 789,
                              "src": "5054:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 798,
                          "nodeType": "ExpressionStatement",
                          "src": "5054:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "5007:326:7"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 829,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "5350:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 830,
                              "name": "ticketsClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "5370:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 832,
                            "indexExpression": {
                              "id": 831,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 779,
                              "src": "5385:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5370:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5350:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 783,
                        "id": 834,
                        "nodeType": "Return",
                        "src": "5343:47:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 777,
                    "nodeType": "StructuredDocumentation",
                    "src": "4841:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "d9f483f8",
                  "id": 836,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimableTickets",
                  "nameLocation": "4894:19:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "4922:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "4914:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4914:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4913:14:7"
                  },
                  "returnParameters": {
                    "id": 783,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 782,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "4949:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 781,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4949:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4948:9:7"
                  },
                  "scope": 896,
                  "src": "4885:512:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1119
                  ],
                  "body": {
                    "id": 848,
                    "nodeType": "Block",
                    "src": "5518:44:7",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 844,
                            "name": "ticketsClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "5535:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 846,
                          "indexExpression": {
                            "id": 845,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "5550:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5535:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 843,
                        "id": 847,
                        "nodeType": "Return",
                        "src": "5528:27:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 837,
                    "nodeType": "StructuredDocumentation",
                    "src": "5403:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "e8a8ee28",
                  "id": 849,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimedTickets",
                  "nameLocation": "5456:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "5482:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "5474:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5474:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5473:14:7"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "5509:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5509:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5508:9:7"
                  },
                  "scope": 896,
                  "src": "5447:115:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1103
                  ],
                  "body": {
                    "id": 857,
                    "nodeType": "Block",
                    "src": "5669:35:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 855,
                          "name": "ticketCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "5686:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 854,
                        "id": 856,
                        "nodeType": "Return",
                        "src": "5679:18:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 850,
                    "nodeType": "StructuredDocumentation",
                    "src": "5568:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "06e8337f",
                  "id": 858,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalTickets",
                  "nameLocation": "5621:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 851,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5636:2:7"
                  },
                  "returnParameters": {
                    "id": 854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 858,
                        "src": "5660:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5660:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5659:9:7"
                  },
                  "scope": 896,
                  "src": "5612:92:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1097
                  ],
                  "body": {
                    "id": 866,
                    "nodeType": "Block",
                    "src": "5806:31:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 864,
                          "name": "jackpot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 430,
                          "src": "5823:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 863,
                        "id": 865,
                        "nodeType": "Return",
                        "src": "5816:14:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 859,
                    "nodeType": "StructuredDocumentation",
                    "src": "5710:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "9329066c",
                  "id": 867,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getJackpot",
                  "nameLocation": "5763:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5773:2:7"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 867,
                        "src": "5797:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5797:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5796:9:7"
                  },
                  "scope": 896,
                  "src": "5754:83:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1091
                  ],
                  "body": {
                    "id": 876,
                    "nodeType": "Block",
                    "src": "5957:38:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 874,
                          "name": "eligibleBadges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 449,
                          "src": "5974:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 873,
                        "id": 875,
                        "nodeType": "Return",
                        "src": "5967:21:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 868,
                    "nodeType": "StructuredDocumentation",
                    "src": "5843:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "4705ab24",
                  "id": 877,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEligibleBadges",
                  "nameLocation": "5896:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 869,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5913:2:7"
                  },
                  "returnParameters": {
                    "id": 873,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 872,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 877,
                        "src": "5939:16:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 870,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5939:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 871,
                          "nodeType": "ArrayTypeName",
                          "src": "5939:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5938:18:7"
                  },
                  "scope": 896,
                  "src": "5887:108:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1129
                  ],
                  "body": {
                    "id": 885,
                    "nodeType": "Block",
                    "src": "6098:30:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 883,
                          "name": "winner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 436,
                          "src": "6115:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 882,
                        "id": 884,
                        "nodeType": "Return",
                        "src": "6108:13:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 878,
                    "nodeType": "StructuredDocumentation",
                    "src": "6001:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "8e7ea5b2",
                  "id": 886,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getWinner",
                  "nameLocation": "6054:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 879,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6063:2:7"
                  },
                  "returnParameters": {
                    "id": 882,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 881,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 886,
                        "src": "6089:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 880,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6089:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6088:9:7"
                  },
                  "scope": 896,
                  "src": "6045:83:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1084
                  ],
                  "body": {
                    "id": 894,
                    "nodeType": "Block",
                    "src": "6238:44:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 892,
                          "name": "revealAfterTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 422,
                          "src": "6255:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 891,
                        "id": 893,
                        "nodeType": "Return",
                        "src": "6248:27:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 887,
                    "nodeType": "StructuredDocumentation",
                    "src": "6134:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "4639545f",
                  "id": 895,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRevealedAfter",
                  "nameLocation": "6187:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6203:2:7"
                  },
                  "returnParameters": {
                    "id": 891,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 890,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 895,
                        "src": "6229:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 889,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6229:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6228:9:7"
                  },
                  "scope": 896,
                  "src": "6178:104:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 897,
              "src": "506:5778:7",
              "usedErrors": [
                13,
                18,
                1001,
                1004,
                1007,
                1012,
                1017,
                1020,
                1023,
                1026,
                1029
              ],
              "usedEvents": [
                24,
                1037,
                1044,
                1051
              ]
            }
          ],
          "src": "32:6253:7"
        },
        "id": 7
      },
      "contracts/SuperchainPointsRaffleFactory.sol": {
        "ast": {
          "absolutePath": "contracts/SuperchainPointsRaffleFactory.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ],
            "IERC20": [
              356
            ],
            "ISuperchainPointsRaffle": [
              1130
            ],
            "ISuperchainPointsRaffleFactory": [
              1151
            ],
            "Ownable": [
              147
            ],
            "SuperchainPointsRaffle": [
              896
            ],
            "SuperchainPointsRaffleFactory": [
              996
            ]
          },
          "id": 997,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 898,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 900,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 997,
              "sourceUnit": 148,
              "src": "58:67:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 899,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "66:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "id": 902,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 997,
              "sourceUnit": 156,
              "src": "126:69:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 901,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "134:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "id": 904,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 997,
              "sourceUnit": 152,
              "src": "196:73:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 903,
                    "name": "IERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 278,
                    "src": "204:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPointsRaffle.sol",
              "file": "./interfaces/ISuperchainPointsRaffle.sol",
              "id": 906,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 997,
              "sourceUnit": 1131,
              "src": "270:81:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 905,
                    "name": "ISuperchainPointsRaffle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1130,
                    "src": "278:23:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/SuperchainPointsRaffle.sol",
              "file": "./SuperchainPointsRaffle.sol",
              "id": 908,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 997,
              "sourceUnit": 897,
              "src": "352:68:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 907,
                    "name": "SuperchainPointsRaffle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 896,
                    "src": "360:22:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPointsRaffleFactory.sol",
              "file": "./interfaces/ISuperchainPointsRaffleFactory.sol",
              "id": 910,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 997,
              "sourceUnit": 1152,
              "src": "421:95:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 909,
                    "name": "ISuperchainPointsRaffleFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1151,
                    "src": "429:30:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 912,
                    "name": "ISuperchainPointsRaffleFactory",
                    "nameLocations": [
                      "707:30:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1151,
                    "src": "707:30:8"
                  },
                  "id": 913,
                  "nodeType": "InheritanceSpecifier",
                  "src": "707:30:8"
                },
                {
                  "baseName": {
                    "id": 914,
                    "name": "Ownable",
                    "nameLocations": [
                      "739:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "739:7:8"
                  },
                  "id": 915,
                  "nodeType": "InheritanceSpecifier",
                  "src": "739:7:8"
                }
              ],
              "canonicalName": "SuperchainPointsRaffleFactory",
              "contractDependencies": [
                896
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 911,
                "nodeType": "StructuredDocumentation",
                "src": "518:147:8",
                "text": "@title SuperchainPointsRaffleFactory\n @notice Factory for SuperchainPointsRaffle contracts that also acts as a proxy for the current raffle"
              },
              "fullyImplemented": true,
              "id": 996,
              "linearizedBaseContracts": [
                996,
                147,
                386,
                1151,
                1142,
                1136
              ],
              "name": "SuperchainPointsRaffleFactory",
              "nameLocation": "674:29:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "b2ab4ab7",
                  "id": 918,
                  "mutability": "mutable",
                  "name": "superchainPoints",
                  "nameLocation": "767:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "753:30:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$356",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 917,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 916,
                      "name": "IERC20",
                      "nameLocations": [
                        "753:6:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 356,
                      "src": "753:6:8"
                    },
                    "referencedDeclaration": 356,
                    "src": "753:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$356",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a94bd919",
                  "id": 921,
                  "mutability": "mutable",
                  "name": "superchainBadges",
                  "nameLocation": "805:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "789:32:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$278",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 920,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 919,
                      "name": "IERC1155",
                      "nameLocations": [
                        "789:8:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 278,
                      "src": "789:8:8"
                    },
                    "referencedDeclaration": 278,
                    "src": "789:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$278",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a8527cbe",
                  "id": 924,
                  "mutability": "mutable",
                  "name": "currentRaffle",
                  "nameLocation": "859:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 996,
                  "src": "828:44:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1130",
                    "typeString": "contract ISuperchainPointsRaffle"
                  },
                  "typeName": {
                    "id": 923,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 922,
                      "name": "ISuperchainPointsRaffle",
                      "nameLocations": [
                        "828:23:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1130,
                      "src": "828:23:8"
                    },
                    "referencedDeclaration": 1130,
                    "src": "828:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1130",
                      "typeString": "contract ISuperchainPointsRaffle"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 947,
                    "nodeType": "Block",
                    "src": "1240:99:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 939,
                            "name": "superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "1250:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 940,
                            "name": "_superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "1269:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1250:36:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 942,
                        "nodeType": "ExpressionStatement",
                        "src": "1250:36:8"
                      },
                      {
                        "expression": {
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 943,
                            "name": "superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 921,
                            "src": "1296:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 944,
                            "name": "_superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 933,
                            "src": "1315:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "src": "1296:36:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 946,
                        "nodeType": "ExpressionStatement",
                        "src": "1296:36:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 925,
                    "nodeType": "StructuredDocumentation",
                    "src": "879:214:8",
                    "text": "@param _initialOwner The initial owner of the contract\n @param _superchainPoints The address of the SuperchainPoints contract\n @param _superchainBadges The address of the SuperchainBadges contract"
                  },
                  "id": 948,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 936,
                          "name": "_initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 927,
                          "src": "1225:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 937,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 935,
                        "name": "Ownable",
                        "nameLocations": [
                          "1217:7:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1217:7:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1217:22:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 934,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "_initialOwner",
                        "nameLocation": "1127:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 948,
                        "src": "1119:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1119:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "_superchainPoints",
                        "nameLocation": "1157:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 948,
                        "src": "1150:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$356",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 929,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 928,
                            "name": "IERC20",
                            "nameLocations": [
                              "1150:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 356,
                            "src": "1150:6:8"
                          },
                          "referencedDeclaration": 356,
                          "src": "1150:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 933,
                        "mutability": "mutable",
                        "name": "_superchainBadges",
                        "nameLocation": "1193:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 948,
                        "src": "1184:26:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$278",
                          "typeString": "contract IERC1155"
                        },
                        "typeName": {
                          "id": 932,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 931,
                            "name": "IERC1155",
                            "nameLocations": [
                              "1184:8:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 278,
                            "src": "1184:8:8"
                          },
                          "referencedDeclaration": 278,
                          "src": "1184:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1109:107:8"
                  },
                  "returnParameters": {
                    "id": 938,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1240:0:8"
                  },
                  "scope": 996,
                  "src": "1098:241:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1150
                  ],
                  "body": {
                    "id": 994,
                    "nodeType": "Block",
                    "src": "1386:345:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 955,
                                  "name": "currentRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 924,
                                  "src": "1408:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1130",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1130",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                ],
                                "id": 954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1400:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 953,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1400:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1400:22:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 959,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1434:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1426:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 957,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1426:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1426:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1400:36:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 962,
                                  "name": "currentRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 924,
                                  "src": "1440:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1130",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                },
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1454:9:8",
                                "memberName": "getWinner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1129,
                                "src": "1440:23:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1440:25:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 967,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1477:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1469:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 965,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1469:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1469:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1440:39:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1400:79:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 975,
                        "nodeType": "IfStatement",
                        "src": "1396:132:8",
                        "trueBody": {
                          "id": 974,
                          "nodeType": "Block",
                          "src": "1481:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 971,
                                  "name": "OngoingRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1135,
                                  "src": "1502:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1502:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 973,
                              "nodeType": "RevertStatement",
                              "src": "1495:22:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 976,
                            "name": "currentRaffle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 924,
                            "src": "1538:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1130",
                              "typeString": "contract ISuperchainPointsRaffle"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 980,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "1594:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1594:7:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 982,
                                "name": "superchainPoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 918,
                                "src": "1615:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$356",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 983,
                                "name": "superchainBadges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "1645:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC1155_$278",
                                  "typeString": "contract IERC1155"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$356",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC1155_$278",
                                  "typeString": "contract IERC1155"
                                }
                              ],
                              "id": 979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1554:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_IERC20_$356_$_t_contract$_IERC1155_$278_$returns$_t_contract$_SuperchainPointsRaffle_$896_$",
                                "typeString": "function (address,contract IERC20,contract IERC1155) returns (contract SuperchainPointsRaffle)"
                              },
                              "typeName": {
                                "id": 978,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 977,
                                  "name": "SuperchainPointsRaffle",
                                  "nameLocations": [
                                    "1558:22:8"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 896,
                                  "src": "1558:22:8"
                                },
                                "referencedDeclaration": 896,
                                "src": "1558:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$896",
                                  "typeString": "contract SuperchainPointsRaffle"
                                }
                              }
                            },
                            "id": 984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1554:117:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$896",
                              "typeString": "contract SuperchainPointsRaffle"
                            }
                          },
                          "src": "1538:133:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1130",
                            "typeString": "contract ISuperchainPointsRaffle"
                          }
                        },
                        "id": 986,
                        "nodeType": "ExpressionStatement",
                        "src": "1538:133:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 990,
                                  "name": "currentRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 924,
                                  "src": "1709:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1130",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1130",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                ],
                                "id": 989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1701:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 988,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1701:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1701:22:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 987,
                            "name": "RaffleCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "1687:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1687:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 993,
                        "nodeType": "EmitStatement",
                        "src": "1682:42:8"
                      }
                    ]
                  },
                  "functionSelector": "485ac2a7",
                  "id": 995,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 951,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 950,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1376:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1376:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1376:9:8"
                    }
                  ],
                  "name": "createRaffle",
                  "nameLocation": "1354:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 949,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1366:2:8"
                  },
                  "returnParameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1386:0:8"
                  },
                  "scope": 996,
                  "src": "1345:386:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 997,
              "src": "665:1069:8",
              "usedErrors": [
                13,
                18,
                1135
              ],
              "usedEvents": [
                24,
                1141
              ]
            }
          ],
          "src": "32:1703:8"
        },
        "id": 8
      },
      "contracts/interfaces/ISuperchainPointsRaffle.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ISuperchainPointsRaffle.sol",
          "exportedSymbols": {
            "ISuperchainPointsRaffle": [
              1130
            ],
            "ISuperchainPointsRaffleErrors": [
              1030
            ],
            "ISuperchainPointsRaffleEvents": [
              1052
            ]
          },
          "id": 1131,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 998,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1030,
              "linearizedBaseContracts": [
                1030
              ],
              "name": "ISuperchainPointsRaffleErrors",
              "nameLocation": "68:29:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 999,
                    "nodeType": "StructuredDocumentation",
                    "src": "104:59:9",
                    "text": "@notice Error thrown when the raffle is already started"
                  },
                  "errorSelector": "0dfcbc78",
                  "id": 1001,
                  "name": "RaffleAlreadyStarted",
                  "nameLocation": "174:20:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1000,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "194:2:9"
                  },
                  "src": "168:29:9"
                },
                {
                  "documentation": {
                    "id": 1002,
                    "nodeType": "StructuredDocumentation",
                    "src": "203:55:9",
                    "text": "@notice Error thrown when the raffle is not started"
                  },
                  "errorSelector": "75d47e7f",
                  "id": 1004,
                  "name": "NoOngoingRaffle",
                  "nameLocation": "269:15:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1003,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "284:2:9"
                  },
                  "src": "263:24:9"
                },
                {
                  "documentation": {
                    "id": 1005,
                    "nodeType": "StructuredDocumentation",
                    "src": "293:51:9",
                    "text": "@notice Error thrown when points transfer fails"
                  },
                  "errorSelector": "90b8ec18",
                  "id": 1007,
                  "name": "TransferFailed",
                  "nameLocation": "355:14:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1006,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "369:2:9"
                  },
                  "src": "349:23:9"
                },
                {
                  "documentation": {
                    "id": 1008,
                    "nodeType": "StructuredDocumentation",
                    "src": "378:73:9",
                    "text": "@notice Random pattern requires seed to be revealed in a future block"
                  },
                  "errorSelector": "a3665c49",
                  "id": 1012,
                  "name": "CannotRevealBeforeBlock",
                  "nameLocation": "462:23:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1011,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "486:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "486:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "485:9:9"
                  },
                  "src": "456:39:9"
                },
                {
                  "documentation": {
                    "id": 1013,
                    "nodeType": "StructuredDocumentation",
                    "src": "501:46:9",
                    "text": "@notice UX requires reveal after timestamp"
                  },
                  "errorSelector": "7498ff66",
                  "id": 1017,
                  "name": "CannotRevealBeforeTimestamp",
                  "nameLocation": "558:27:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1016,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1015,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "594:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "586:17:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1014,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "585:19:9"
                  },
                  "src": "552:53:9"
                },
                {
                  "documentation": {
                    "id": 1018,
                    "nodeType": "StructuredDocumentation",
                    "src": "611:68:9",
                    "text": "@notice Error thrown when the seed doesn't match the sealed seed"
                  },
                  "errorSelector": "863a7486",
                  "id": 1020,
                  "name": "InvalidSeed",
                  "nameLocation": "690:11:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1019,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "701:2:9"
                  },
                  "src": "684:20:9"
                },
                {
                  "documentation": {
                    "id": 1021,
                    "nodeType": "StructuredDocumentation",
                    "src": "710:53:9",
                    "text": "@notice Error thrown when the ticket is not found"
                  },
                  "errorSelector": "0793430c",
                  "id": 1023,
                  "name": "TicketNotFound",
                  "nameLocation": "774:14:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1022,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "788:2:9"
                  },
                  "src": "768:23:9"
                },
                {
                  "documentation": {
                    "id": 1024,
                    "nodeType": "StructuredDocumentation",
                    "src": "797:125:9",
                    "text": "@notice Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed"
                  },
                  "errorSelector": "2da2704e",
                  "id": 1026,
                  "name": "NoTicketsToClaim",
                  "nameLocation": "933:16:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1025,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "949:2:9"
                  },
                  "src": "927:25:9"
                },
                {
                  "documentation": {
                    "id": 1027,
                    "nodeType": "StructuredDocumentation",
                    "src": "958:60:9",
                    "text": "@notice Error thrown when the seed has already been used"
                  },
                  "errorSelector": "c1609d28",
                  "id": 1029,
                  "name": "SeedAlreadyUsed",
                  "nameLocation": "1029:15:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1028,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1044:2:9"
                  },
                  "src": "1023:24:9"
                }
              ],
              "scope": 1131,
              "src": "58:991:9",
              "usedErrors": [
                1001,
                1004,
                1007,
                1012,
                1017,
                1020,
                1023,
                1026,
                1029
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleEvents",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1052,
              "linearizedBaseContracts": [
                1052
              ],
              "name": "ISuperchainPointsRaffleEvents",
              "nameLocation": "1061:29:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1031,
                    "nodeType": "StructuredDocumentation",
                    "src": "1097:195:9",
                    "text": "@notice Event emitted when a raffle is started\n @param sealedSeed The seed used to generate the raffle\n @param amount The amount of points to be distributed to the raffle winner"
                  },
                  "eventSelector": "3b81d2f4abc4b25cdb3a280f602aba499a20e5e7f079340839d5e4481c2fff17",
                  "id": 1037,
                  "name": "RaffleStarted",
                  "nameLocation": "1303:13:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1036,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sealedSeed",
                        "nameLocation": "1325:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "1317:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1035,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1345:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "1337:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1337:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:36:9"
                  },
                  "src": "1297:56:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1038,
                    "nodeType": "StructuredDocumentation",
                    "src": "1359:182:9",
                    "text": "@notice Event emitted when a raffle is finished\n @param winner The address of the raffle winner\n @param amount The amount of points distributed to the raffle winner"
                  },
                  "eventSelector": "7e2ca3905e2a3f4806a624223ea6cdcd30dad54d82e68b44481a5e00f322efc7",
                  "id": 1044,
                  "name": "RaffleWinner",
                  "nameLocation": "1552:12:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1043,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1040,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "1573:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1044,
                        "src": "1565:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1565:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1042,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1589:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1044,
                        "src": "1581:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1041,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1564:32:9"
                  },
                  "src": "1546:51:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1045,
                    "nodeType": "StructuredDocumentation",
                    "src": "1603:151:9",
                    "text": "@notice Event emitted when tickets are claimed\n @param claimer The address of the claimer\n @param amount The amount of points claimed"
                  },
                  "eventSelector": "3492e8dc9c9e6d0557ae45dfe2d8cd4fd614084227839a8a969f39b114895425",
                  "id": 1051,
                  "name": "TicketsClaimed",
                  "nameLocation": "1765:14:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1047,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "claimer",
                        "nameLocation": "1788:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "1780:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1780:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1805:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "1797:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1797:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1779:33:9"
                  },
                  "src": "1759:54:9"
                }
              ],
              "scope": 1131,
              "src": "1051:764:9",
              "usedErrors": [],
              "usedEvents": [
                1037,
                1044,
                1051
              ]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1053,
                    "name": "ISuperchainPointsRaffleErrors",
                    "nameLocations": [
                      "1858:29:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "1858:29:9"
                  },
                  "id": 1054,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1858:29:9"
                },
                {
                  "baseName": {
                    "id": 1055,
                    "name": "ISuperchainPointsRaffleEvents",
                    "nameLocations": [
                      "1893:29:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1052,
                    "src": "1893:29:9"
                  },
                  "id": 1056,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1893:29:9"
                }
              ],
              "canonicalName": "ISuperchainPointsRaffle",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1130,
              "linearizedBaseContracts": [
                1130,
                1052,
                1030
              ],
              "name": "ISuperchainPointsRaffle",
              "nameLocation": "1827:23:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1057,
                    "nodeType": "StructuredDocumentation",
                    "src": "1929:391:9",
                    "text": "@notice Starts the raffle\n @param _sealedSeed The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\n @param _amount The amount of points to be distributed to the raffle winner\n @param _badges The badges that are eligible to participate in the raffle\n @param _badgeAllocation The number of tickets allocated to each badge"
                  },
                  "functionSelector": "31e54a2e",
                  "id": 1072,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "2334:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1059,
                        "mutability": "mutable",
                        "name": "_sealedSeed",
                        "nameLocation": "2362:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "2354:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2354:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1061,
                        "mutability": "mutable",
                        "name": "_revealAfterTimestamp",
                        "nameLocation": "2391:21:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "2383:29:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2383:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2430:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "2422:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2422:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1066,
                        "mutability": "mutable",
                        "name": "_badges",
                        "nameLocation": "2464:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "2447:24:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1064,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2447:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1065,
                          "nodeType": "ArrayTypeName",
                          "src": "2447:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1069,
                        "mutability": "mutable",
                        "name": "_badgeAllocation",
                        "nameLocation": "2498:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "2481:33:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1067,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2481:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1068,
                          "nodeType": "ArrayTypeName",
                          "src": "2481:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2344:176:9"
                  },
                  "returnParameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2529:0:9"
                  },
                  "scope": 1130,
                  "src": "2325:205:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1073,
                    "nodeType": "StructuredDocumentation",
                    "src": "2536:120:9",
                    "text": "@notice Reveals the raffle winner and transfers the points\n @param _seed The seed used to generate the raffle"
                  },
                  "functionSelector": "a9a86f4d",
                  "id": 1078,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revealWinner",
                  "nameLocation": "2670:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1075,
                        "mutability": "mutable",
                        "name": "_seed",
                        "nameLocation": "2691:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "2683:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2683:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2682:15:9"
                  },
                  "returnParameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2706:0:9"
                  },
                  "scope": 1130,
                  "src": "2661:46:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1079,
                    "nodeType": "StructuredDocumentation",
                    "src": "2713:68:9",
                    "text": "@notice Returns the timestamp at which the seed will be revealed"
                  },
                  "functionSelector": "4639545f",
                  "id": 1084,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRevealedAfter",
                  "nameLocation": "2795:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2811:2:9"
                  },
                  "returnParameters": {
                    "id": 1083,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1082,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "2837:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1081,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2837:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2836:9:9"
                  },
                  "scope": 1130,
                  "src": "2786:60:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1085,
                    "nodeType": "StructuredDocumentation",
                    "src": "2852:77:9",
                    "text": "@notice Returns the badges that are eligible to participate in the raffle"
                  },
                  "functionSelector": "4705ab24",
                  "id": 1091,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEligibleBadges",
                  "nameLocation": "2943:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2960:2:9"
                  },
                  "returnParameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1091,
                        "src": "2986:16:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1087,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2986:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1088,
                          "nodeType": "ArrayTypeName",
                          "src": "2986:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2985:18:9"
                  },
                  "scope": 1130,
                  "src": "2934:70:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1092,
                    "nodeType": "StructuredDocumentation",
                    "src": "3010:82:9",
                    "text": "@notice Returns the amount of points that are distributed to the raffle winner"
                  },
                  "functionSelector": "9329066c",
                  "id": 1097,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getJackpot",
                  "nameLocation": "3106:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3116:2:9"
                  },
                  "returnParameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1097,
                        "src": "3142:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1094,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3142:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3141:9:9"
                  },
                  "scope": 1130,
                  "src": "3097:54:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1098,
                    "nodeType": "StructuredDocumentation",
                    "src": "3157:67:9",
                    "text": "@notice Returns the total number of tickets that can be claimed"
                  },
                  "functionSelector": "06e8337f",
                  "id": 1103,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalTickets",
                  "nameLocation": "3238:15:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1099,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3253:2:9"
                  },
                  "returnParameters": {
                    "id": 1102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1103,
                        "src": "3279:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3279:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3278:9:9"
                  },
                  "scope": 1130,
                  "src": "3229:59:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1104,
                    "nodeType": "StructuredDocumentation",
                    "src": "3294:105:9",
                    "text": "@notice Returns the number of tickets that can be claimed\n @param user The address of the user"
                  },
                  "functionSelector": "d9f483f8",
                  "id": 1111,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimableTickets",
                  "nameLocation": "3413:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3441:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "3433:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3433:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3432:14:9"
                  },
                  "returnParameters": {
                    "id": 1110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1109,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "3470:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1108,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3470:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3469:9:9"
                  },
                  "scope": 1130,
                  "src": "3404:75:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1112,
                    "nodeType": "StructuredDocumentation",
                    "src": "3485:101:9",
                    "text": "@notice Returns the number of tickets already claimed\n @param user The address of the user"
                  },
                  "functionSelector": "e8a8ee28",
                  "id": 1119,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimedTickets",
                  "nameLocation": "3600:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3626:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1119,
                        "src": "3618:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3618:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3617:14:9"
                  },
                  "returnParameters": {
                    "id": 1118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1117,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1119,
                        "src": "3655:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3655:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3654:9:9"
                  },
                  "scope": 1130,
                  "src": "3591:73:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1120,
                    "nodeType": "StructuredDocumentation",
                    "src": "3670:50:9",
                    "text": "@notice Claim tickets to participate in raffle"
                  },
                  "functionSelector": "81fe4c61",
                  "id": 1123,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimTickets",
                  "nameLocation": "3734:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1121,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3746:2:9"
                  },
                  "returnParameters": {
                    "id": 1122,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3757:0:9"
                  },
                  "scope": 1130,
                  "src": "3725:33:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1124,
                    "nodeType": "StructuredDocumentation",
                    "src": "3764:52:9",
                    "text": "@notice Returns the address of the raffle winner"
                  },
                  "functionSelector": "8e7ea5b2",
                  "id": 1129,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getWinner",
                  "nameLocation": "3830:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3839:2:9"
                  },
                  "returnParameters": {
                    "id": 1128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1127,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "3865:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3865:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3864:9:9"
                  },
                  "scope": 1130,
                  "src": "3821:53:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1131,
              "src": "1817:2059:9",
              "usedErrors": [
                1001,
                1004,
                1007,
                1012,
                1017,
                1020,
                1023,
                1026,
                1029
              ],
              "usedEvents": [
                1037,
                1044,
                1051
              ]
            }
          ],
          "src": "32:3845:9"
        },
        "id": 9
      },
      "contracts/interfaces/ISuperchainPointsRaffleFactory.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ISuperchainPointsRaffleFactory.sol",
          "exportedSymbols": {
            "ISuperchainPointsRaffleFactory": [
              1151
            ],
            "ISuperchainPointsRaffleFactoryErrors": [
              1136
            ],
            "ISuperchainPointsRaffleFactoryEvents": [
              1142
            ]
          },
          "id": 1152,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1132,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleFactoryErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1136,
              "linearizedBaseContracts": [
                1136
              ],
              "name": "ISuperchainPointsRaffleFactoryErrors",
              "nameLocation": "68:36:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1133,
                    "nodeType": "StructuredDocumentation",
                    "src": "111:60:10",
                    "text": "@notice Cannot create a raffle if one is already started"
                  },
                  "errorSelector": "ac7aae87",
                  "id": 1135,
                  "name": "OngoingRaffle",
                  "nameLocation": "182:13:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "195:2:10"
                  },
                  "src": "176:22:10"
                }
              ],
              "scope": 1152,
              "src": "58:142:10",
              "usedErrors": [
                1135
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleFactoryEvents",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1142,
              "linearizedBaseContracts": [
                1142
              ],
              "name": "ISuperchainPointsRaffleFactoryEvents",
              "nameLocation": "212:36:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1137,
                    "nodeType": "StructuredDocumentation",
                    "src": "255:44:10",
                    "text": "@notice Emitted when a raffle is created"
                  },
                  "eventSelector": "54ad4cc1960f9b16b4a7fd9f5ee7c05b4de5672cb94bc1dbad3de1ed291c248b",
                  "id": 1141,
                  "name": "RaffleCreated",
                  "nameLocation": "310:13:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1139,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "raffle",
                        "nameLocation": "332:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "324:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "324:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "323:16:10"
                  },
                  "src": "304:36:10"
                }
              ],
              "scope": 1152,
              "src": "202:140:10",
              "usedErrors": [],
              "usedEvents": [
                1141
              ]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1143,
                    "name": "ISuperchainPointsRaffleFactoryErrors",
                    "nameLocations": [
                      "392:36:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1136,
                    "src": "392:36:10"
                  },
                  "id": 1144,
                  "nodeType": "InheritanceSpecifier",
                  "src": "392:36:10"
                },
                {
                  "baseName": {
                    "id": 1145,
                    "name": "ISuperchainPointsRaffleFactoryEvents",
                    "nameLocations": [
                      "434:36:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1142,
                    "src": "434:36:10"
                  },
                  "id": 1146,
                  "nodeType": "InheritanceSpecifier",
                  "src": "434:36:10"
                }
              ],
              "canonicalName": "ISuperchainPointsRaffleFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1151,
              "linearizedBaseContracts": [
                1151,
                1142,
                1136
              ],
              "name": "ISuperchainPointsRaffleFactory",
              "nameLocation": "354:30:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1147,
                    "nodeType": "StructuredDocumentation",
                    "src": "477:65:10",
                    "text": "@notice Checks previous raffle state and creates a new raffle"
                  },
                  "functionSelector": "485ac2a7",
                  "id": 1150,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createRaffle",
                  "nameLocation": "556:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1148,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "568:2:10"
                  },
                  "returnParameters": {
                    "id": 1149,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "579:0:10"
                  },
                  "scope": 1151,
                  "src": "547:33:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1152,
              "src": "344:238:10",
              "usedErrors": [
                1135
              ],
              "usedEvents": [
                1141
              ]
            }
          ],
          "src": "32:551:10"
        },
        "id": 10
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "IERC1155": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "balanceOf(address,uint256)": "00fdd58e",
              "balanceOfBatch(address[],uint256[])": "4e1273f4",
              "isApprovedForAll(address,address)": "e985e9c5",
              "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
              "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "contracts/SuperchainPointsRaffle.sol": {
        "SuperchainPointsRaffle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_initialOwner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_superchainPoints",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC1155",
                  "name": "_superchainBadges",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeBlock",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeTimestamp",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSeed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoOngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoTicketsToClaim",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RaffleAlreadyStarted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SeedAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TicketNotFound",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "sealedSeed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleWinner",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TicketsClaimed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "claimTickets",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimableTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimedTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEligibleBadges",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getJackpot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRevealedAfter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getWinner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_sealedSeed",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_revealAfterTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_jackpot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badges",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badgeAllocation",
                  "type": "uint256[]"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_seed",
                  "type": "bytes32"
                }
              ],
              "name": "revealWinner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainBadges",
              "outputs": [
                {
                  "internalType": "contract IERC1155",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainPoints",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_477": {
                  "entryPoint": null,
                  "id": 477,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 183,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory": {
                  "entryPoint": 287,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 263,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:909:11",
                    "nodeType": "YulBlock",
                    "src": "0:909:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "59:86:11",
                          "nodeType": "YulBlock",
                          "src": "59:86:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "123:16:11",
                                "nodeType": "YulBlock",
                                "src": "123:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "132:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "132:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "135:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "135:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "125:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:6:11"
                                      },
                                      "nativeSrc": "125:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "125:12:11"
                                    },
                                    "nativeSrc": "125:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "125:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "82:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "93:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "108:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "108:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "113:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "113:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "104:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "104:3:11"
                                                },
                                                "nativeSrc": "104:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "104:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "117:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "117:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "100:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "100:3:11"
                                            },
                                            "nativeSrc": "100:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "100:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "89:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:11"
                                        },
                                        "nativeSrc": "89:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "79:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:11"
                                    },
                                    "nativeSrc": "79:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "72:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:11"
                                },
                                "nativeSrc": "72:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "72:50:11"
                              },
                              "nativeSrc": "69:70:11",
                              "nodeType": "YulIf",
                              "src": "69:70:11"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nativeSrc": "14:131:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "48:5:11",
                            "nodeType": "YulTypedName",
                            "src": "48:5:11",
                            "type": ""
                          }
                        ],
                        "src": "14:131:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "295:404:11",
                          "nodeType": "YulBlock",
                          "src": "295:404:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "341:16:11",
                                "nodeType": "YulBlock",
                                "src": "341:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "350:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "350:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "353:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "353:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "343:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "343:6:11"
                                      },
                                      "nativeSrc": "343:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "343:12:11"
                                    },
                                    "nativeSrc": "343:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "343:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "316:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "316:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "325:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "325:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "312:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "312:3:11"
                                    },
                                    "nativeSrc": "312:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "312:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "337:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "337:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "308:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:3:11"
                                },
                                "nativeSrc": "308:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "308:32:11"
                              },
                              "nativeSrc": "305:52:11",
                              "nodeType": "YulIf",
                              "src": "305:52:11"
                            },
                            {
                              "nativeSrc": "366:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "366:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "385:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "385:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "379:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:5:11"
                                },
                                "nativeSrc": "379:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "379:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "370:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "370:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "429:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "429:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "404:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:24:11"
                                },
                                "nativeSrc": "404:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "404:31:11"
                              },
                              "nativeSrc": "404:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "404:31:11"
                            },
                            {
                              "nativeSrc": "444:15:11",
                              "nodeType": "YulAssignment",
                              "src": "444:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "454:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "454:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "444:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "468:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "468:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "493:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "493:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "504:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "504:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "489:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:3:11"
                                    },
                                    "nativeSrc": "489:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "483:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "483:5:11"
                                },
                                "nativeSrc": "483:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "483:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "472:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "472:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "542:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "542:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "517:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "517:24:11"
                                },
                                "nativeSrc": "517:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "517:33:11"
                              },
                              "nativeSrc": "517:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "517:33:11"
                            },
                            {
                              "nativeSrc": "559:17:11",
                              "nodeType": "YulAssignment",
                              "src": "559:17:11",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "569:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "569:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "559:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "559:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "585:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "585:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "610:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "610:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "621:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "621:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "606:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "606:3:11"
                                    },
                                    "nativeSrc": "606:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "606:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "600:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "600:5:11"
                                },
                                "nativeSrc": "600:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "600:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "589:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "589:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nativeSrc": "659:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "659:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "634:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "634:24:11"
                                },
                                "nativeSrc": "634:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "634:33:11"
                              },
                              "nativeSrc": "634:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "634:33:11"
                            },
                            {
                              "nativeSrc": "676:17:11",
                              "nodeType": "YulAssignment",
                              "src": "676:17:11",
                              "value": {
                                "name": "value_2",
                                "nativeSrc": "686:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "686:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "676:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory",
                        "nativeSrc": "150:549:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "245:9:11",
                            "nodeType": "YulTypedName",
                            "src": "245:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "256:7:11",
                            "nodeType": "YulTypedName",
                            "src": "256:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "268:6:11",
                            "nodeType": "YulTypedName",
                            "src": "268:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "276:6:11",
                            "nodeType": "YulTypedName",
                            "src": "276:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "284:6:11",
                            "nodeType": "YulTypedName",
                            "src": "284:6:11",
                            "type": ""
                          }
                        ],
                        "src": "150:549:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "805:102:11",
                          "nodeType": "YulBlock",
                          "src": "805:102:11",
                          "statements": [
                            {
                              "nativeSrc": "815:26:11",
                              "nodeType": "YulAssignment",
                              "src": "815:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "827:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "838:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "838:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "823:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "823:3:11"
                                },
                                "nativeSrc": "823:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "823:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "815:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "857:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "872:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "872:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "888:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "888:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "893:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "893:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "884:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "884:3:11"
                                            },
                                            "nativeSrc": "884:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "884:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "897:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "897:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "880:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "880:3:11"
                                        },
                                        "nativeSrc": "880:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "880:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "868:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "868:3:11"
                                    },
                                    "nativeSrc": "868:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "868:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "850:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "850:6:11"
                                },
                                "nativeSrc": "850:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "850:51:11"
                              },
                              "nativeSrc": "850:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "850:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "704:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "774:9:11",
                            "nodeType": "YulTypedName",
                            "src": "774:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "785:6:11",
                            "nodeType": "YulTypedName",
                            "src": "785:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "796:4:11",
                            "nodeType": "YulTypedName",
                            "src": "796:4:11",
                            "type": ""
                          }
                        ],
                        "src": "704:203:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040526000805460ff60a01b19169055600780546001600160a01b031916905534801561002d57600080fd5b50604051610edf380380610edf83398101604081905261004c9161011f565b826001600160a01b03811661007b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b610084816100b7565b50600480546001600160a01b039384166001600160a01b031991821617909155600580549290931691161790555061016c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461011c57600080fd5b50565b60008060006060848603121561013457600080fd5b835161013f81610107565b602085015190935061015081610107565b604085015190925061016181610107565b809150509250925092565b610d648061017b6000396000f3fe608060405234801561001057600080fd5b50600436106100d55760003560e01c80638e7ea5b2116100875780638e7ea5b21461014d5780639329066c1461015e578063a94bd91914610166578063a9a86f4d14610179578063b2ab4ab71461018c578063d9f483f81461019f578063e8a8ee28146101b2578063f2fde38b146101db57600080fd5b806306e8337f146100da57806331e54a2e146100f15780634639545f146101065780634705ab241461010e578063715018a61461012357806381fe4c611461012b5780638da5cb5b14610133575b600080fd5b6008545b6040519081526020015b60405180910390f35b6101046100ff366004610b41565b6101ee565b005b6003546100de565b610116610432565b6040516100e89190610bc7565b61010461048a565b61010461049e565b6000546001600160a01b03165b6040516100e89190610c0a565b6007546001600160a01b0316610140565b6006546100de565b600554610140906001600160a01b031681565b610104610187366004610c1e565b6105b3565b600454610140906001600160a01b031681565b6100de6101ad366004610c37565b610828565b6100de6101c0366004610c37565b6001600160a01b03166000908152600a602052604090205490565b6101046101e9366004610c37565b610971565b6101f66109af565b600054600160a01b900460ff1615610221576040516301bf978f60e31b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b1790556001858155610244904390610c76565b60025560038490556006839055815167ffffffffffffffff81111561026b5761026b610a8c565b604051908082528060200260200182016040528015610294578160200160208202803683370190505b5080516102a991600b91602090910190610a2c565b5060005b8251811015610341578181815181106102c8576102c8610c8f565b6020026020010151600c60008584815181106102e6576102e6610c8f565b602002602001015181526020019081526020016000208190555082818151811061031257610312610c8f565b6020026020010151600b828154811061032d5761032d610c8f565b6000918252602090912001556001016102ad565b50600480546006546040516323b872dd60e01b8152339381019390935230602484015260448301526000916001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c49190610ca5565b9050806103e4576040516312171d8360e31b815260040160405180910390fd5b7f3b81d2f4abc4b25cdb3a280f602aba499a20e5e7f079340839d5e4481c2fff17600154600654604051610422929190918252602082015260400190565b60405180910390a1505050505050565b6060600b80548060200260200160405190810160405280929190818152602001828054801561048057602002820191906000526020600020905b81548152602001906001019080831161046c575b5050505050905090565b6104926109af565b61049c60006109dc565b565b6007546001600160a01b03161515806104c15750600054600160a01b900460ff16155b156104df576040516375d47e7f60e01b815260040160405180910390fd5b60006104ea33610828565b90508060000361050d576040516316d1382760e11b815260040160405180910390fd5b6008545b8160085461051f9190610c76565b81101561054c57600081815260096020526040902080546001600160a01b03191633179055600101610511565b50336000908152600a6020526040812082905560088054839290610571908490610c76565b90915550506040517f3492e8dc9c9e6d0557ae45dfe2d8cd4fd614084227839a8a969f39b114895425906105a89033908490610cc7565b60405180910390a150565b6105bb6109af565b6007546001600160a01b03161515806105de5750600054600160a01b900460ff16155b156105fc576040516375d47e7f60e01b815260040160405180910390fd5b43600254111561062e5760025460405163a3665c4960e01b815260040161062591815260200190565b60405180910390fd5b42600354111561065757600354604051633a4c7fb360e11b815260040161062591815260200190565b6001546040516bffffffffffffffffffffffff193360601b1660208201526034810183905260540160405160208183030381529060405280519060200120146106b35760405163431d3a4360e11b815260040160405180910390fd5b600254604080516020808201859052924081830152815180820383018152606090910190915280519101206008546009906000906106f19084610ce0565b8152602081019190915260400160002054600780546001600160a01b0319166001600160a01b03909216918217905561073d576040516301e4d0c360e21b815260040160405180910390fd5b6004805460075460065460405163a9059cbb60e01b81526000946001600160a01b039485169463a9059cbb9461077894911692909101610cc7565b6020604051808303816000875af1158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190610ca5565b9050806107db576040516312171d8360e31b815260040160405180910390fd5b6007546006546040517f7e2ca3905e2a3f4806a624223ea6cdcd30dad54d82e68b44481a5e00f322efc79261081b926001600160a01b0390911691610cc7565b60405180910390a1505050565b600080805b600b5481101561094657600554600b80546000926001600160a01b03169162fdd58e918891908690811061086357610863610c8f565b90600052602060002001546040518363ffffffff1660e01b815260040161088b929190610cc7565b602060405180830381865afa1580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190610d02565b111561093e5781600c6000600b84815481106108ea576108ea610c8f565b9060005260206000200154815260200190815260200160002054111561093e57600c6000600b838154811061092157610921610c8f565b906000526020600020015481526020019081526020016000205491505b60010161082d565b506001600160a01b0383166000908152600a602052604090205461096a9082610d1b565b9392505050565b6109796109af565b6001600160a01b0381166109a3576000604051631e4fbdf760e01b81526004016106259190610c0a565b6109ac816109dc565b50565b6000546001600160a01b0316331461049c573360405163118cdaa760e01b81526004016106259190610c0a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610a67579160200282015b82811115610a67578251825591602001919060010190610a4c565b50610a73929150610a77565b5090565b5b80821115610a735760008155600101610a78565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ab357600080fd5b813567ffffffffffffffff811115610acd57610acd610a8c565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715610afa57610afa610a8c565b604052918252602081850181019290810186841115610b1857600080fd5b6020860192505b83831015610b37578235815260209283019201610b1f565b5095945050505050565b600080600080600060a08688031215610b5957600080fd5b853594506020860135935060408601359250606086013567ffffffffffffffff811115610b8557600080fd5b610b9188828901610aa2565b925050608086013567ffffffffffffffff811115610bae57600080fd5b610bba88828901610aa2565b9150509295509295909350565b602080825282518282018190526000918401906040840190835b81811015610bff578351835260209384019390920191600101610be1565b509095945050505050565b6001600160a01b0391909116815260200190565b600060208284031215610c3057600080fd5b5035919050565b600060208284031215610c4957600080fd5b81356001600160a01b038116811461096a57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c8957610c89610c60565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610cb757600080fd5b8151801515811461096a57600080fd5b6001600160a01b03929092168252602082015260400190565b600082610cfd57634e487b7160e01b600052601260045260246000fd5b500690565b600060208284031215610d1457600080fd5b5051919050565b81810381811115610c8957610c89610c6056fea2646970667358221220c830426b5f022a2e5f2e2fcaa5787cbcf2d86a5a4f0bac593351c521b58f24c964736f6c634300081d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEDF CODESIZE SUB DUP1 PUSH2 0xEDF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x4C SWAP2 PUSH2 0x11F JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84 DUP2 PUSH2 0xB7 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x16C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x13F DUP2 PUSH2 0x107 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x150 DUP2 PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x161 DUP2 PUSH2 0x107 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xD64 DUP1 PUSH2 0x17B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E7EA5B2 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x9329066C EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xE8A8EE28 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x31E54A2E EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4639545F EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xDE JUMP JUMPDEST PUSH2 0x116 PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x104 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x140 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x140 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP6 DUP2 SSTORE PUSH2 0x244 SWAP1 NUMBER SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26B PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x294 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2A9 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA2C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x341 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2C8 JUMPI PUSH2 0x2C8 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2E6 JUMPI PUSH2 0x2E6 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x312 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x32D JUMPI PUSH2 0x32D PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x2AD JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x422 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x46C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x49C PUSH1 0x0 PUSH2 0x9DC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0x4C1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x4DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EA CALLER PUSH2 0x828 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST DUP2 PUSH1 0x8 SLOAD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x511 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x571 SWAP1 DUP5 SWAP1 PUSH2 0xC76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x5A8 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x5BB PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0x5DE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x62E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x657 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3A4C7FB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x6F1 SWAP1 DUP5 PUSH2 0xCE0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xA9059CBB SWAP5 PUSH2 0x778 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 ADD PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x81B SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x946 JUMPI PUSH1 0x5 SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x863 JUMPI PUSH2 0x863 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88B SWAP3 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST GT ISZERO PUSH2 0x93E JUMPI DUP2 PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8EA JUMPI PUSH2 0x8EA PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x93E JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x921 JUMPI PUSH2 0x921 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x82D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x96A SWAP1 DUP3 PUSH2 0xD1B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x9AC DUP2 PUSH2 0x9DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x49C JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xA67 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA67 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xA73 SWAP3 SWAP2 POP PUSH2 0xA77 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACD JUMPI PUSH2 0xACD PUSH2 0xA8C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xAFA JUMPI PUSH2 0xAFA PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xB37 JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB1F JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB91 DUP9 DUP3 DUP10 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBBA DUP9 DUP3 DUP10 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBFF JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xBE1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC89 PUSH2 0xC60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC89 PUSH2 0xC60 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 ADDRESS TIMESTAMP PUSH12 0x5F022A2E5F2E2FCAA5787CBC CALLCODE 0xD8 PUSH11 0x5A4F0BAC593351C521B58F 0x24 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
              "sourceMap": "506:5778:7:-:0;;;608:5;580:33;;-1:-1:-1;;;;580:33:7;;;842:36;;;-1:-1:-1;;;;;;842:36:7;;;1345:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1472:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;850:51:11;823:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1497:16:7::1;:36:::0;;-1:-1:-1;;;;;1497:36:7;;::::1;-1:-1:-1::0;;;;;;1497:36:7;;::::1;;::::0;;;1543:16:::1;:36:::0;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;506:5778:7;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:131:11:-;-1:-1:-1;;;;;89:31:11;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:549::-;268:6;276;284;337:2;325:9;316:7;312:23;308:32;305:52;;;353:1;350;343:12;305:52;385:9;379:16;404:31;429:5;404:31;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:33:11;483:25;517:33;:::i;:::-;621:2;606:18;;600:25;569:7;;-1:-1:-1;634:33:11;600:25;634:33;:::i;:::-;686:7;676:17;;;150:549;;;;;:::o;704:203::-;506:5778:7;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_84": {
                  "entryPoint": 2479,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_368": {
                  "entryPoint": null,
                  "id": 368,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 2524,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@claimTickets_776": {
                  "entryPoint": 1182,
                  "id": 776,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getClaimableTickets_836": {
                  "entryPoint": 2088,
                  "id": 836,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getClaimedTickets_849": {
                  "entryPoint": null,
                  "id": 849,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getEligibleBadges_877": {
                  "entryPoint": 1074,
                  "id": 877,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getJackpot_867": {
                  "entryPoint": null,
                  "id": 867,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getRevealedAfter_895": {
                  "entryPoint": null,
                  "id": 895,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getTotalTickets_858": {
                  "entryPoint": null,
                  "id": 858,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getWinner_886": {
                  "entryPoint": null,
                  "id": 886,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@initialize_590": {
                  "entryPoint": 494,
                  "id": 590,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@renounceOwnership_98": {
                  "entryPoint": 1162,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@revealWinner_704": {
                  "entryPoint": 1459,
                  "id": 704,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@superchainBadges_428": {
                  "entryPoint": null,
                  "id": 428,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainPoints_425": {
                  "entryPoint": null,
                  "id": 425,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_126": {
                  "entryPoint": 2417,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_array_uint256_dyn": {
                  "entryPoint": 2722,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 3127,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 3237,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": 3102,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32t_uint256t_uint256t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 2881,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 3330,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 3082,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 3271,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 3015,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 3190,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 3355,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mod_t_uint256": {
                  "entryPoint": 3296,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3168,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 3215,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 2700,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:6698:11",
                    "nodeType": "YulBlock",
                    "src": "0:6698:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "115:76:11",
                          "nodeType": "YulBlock",
                          "src": "115:76:11",
                          "statements": [
                            {
                              "nativeSrc": "125:26:11",
                              "nodeType": "YulAssignment",
                              "src": "125:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "137:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "148:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "133:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:11"
                                },
                                "nativeSrc": "133:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "125:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "167:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "178:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "160:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:11"
                                },
                                "nativeSrc": "160:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:11"
                              },
                              "nativeSrc": "160:25:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "14:177:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "84:9:11",
                            "nodeType": "YulTypedName",
                            "src": "84:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "95:6:11",
                            "nodeType": "YulTypedName",
                            "src": "95:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "106:4:11",
                            "nodeType": "YulTypedName",
                            "src": "106:4:11",
                            "type": ""
                          }
                        ],
                        "src": "14:177:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "228:95:11",
                          "nodeType": "YulBlock",
                          "src": "228:95:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "245:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "245:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "252:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "252:3:11",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "257:10:11",
                                        "nodeType": "YulLiteral",
                                        "src": "257:10:11",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "248:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "248:3:11"
                                    },
                                    "nativeSrc": "248:20:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "248:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "238:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "238:6:11"
                                },
                                "nativeSrc": "238:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "238:31:11"
                              },
                              "nativeSrc": "238:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "238:31:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "285:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "285:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "288:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "288:4:11",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "278:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "278:6:11"
                                },
                                "nativeSrc": "278:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "278:15:11"
                              },
                              "nativeSrc": "278:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "278:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "309:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "309:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "312:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "312:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "302:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:6:11"
                                },
                                "nativeSrc": "302:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "302:15:11"
                              },
                              "nativeSrc": "302:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "302:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "196:127:11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "196:127:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "392:890:11",
                          "nodeType": "YulBlock",
                          "src": "392:890:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "441:16:11",
                                "nodeType": "YulBlock",
                                "src": "441:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "450:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "450:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "453:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "453:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "443:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "443:6:11"
                                      },
                                      "nativeSrc": "443:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "443:12:11"
                                    },
                                    "nativeSrc": "443:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "443:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "420:6:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "420:6:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "428:4:11",
                                            "nodeType": "YulLiteral",
                                            "src": "428:4:11",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "416:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "416:3:11"
                                        },
                                        "nativeSrc": "416:17:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "416:17:11"
                                      },
                                      {
                                        "name": "end",
                                        "nativeSrc": "435:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "435:3:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "412:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "412:3:11"
                                    },
                                    "nativeSrc": "412:27:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "412:27:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "405:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "405:6:11"
                                },
                                "nativeSrc": "405:35:11",
                                "nodeType": "YulFunctionCall",
                                "src": "405:35:11"
                              },
                              "nativeSrc": "402:55:11",
                              "nodeType": "YulIf",
                              "src": "402:55:11"
                            },
                            {
                              "nativeSrc": "466:34:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "466:34:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "493:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "480:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "480:12:11"
                                },
                                "nativeSrc": "480:20:11",
                                "nodeType": "YulFunctionCall",
                                "src": "480:20:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "470:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "470:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "543:22:11",
                                "nodeType": "YulBlock",
                                "src": "543:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "545:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "545:16:11"
                                      },
                                      "nativeSrc": "545:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "545:18:11"
                                    },
                                    "nativeSrc": "545:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "545:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "515:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "515:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "523:18:11",
                                    "nodeType": "YulLiteral",
                                    "src": "523:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "512:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "512:2:11"
                                },
                                "nativeSrc": "512:30:11",
                                "nodeType": "YulFunctionCall",
                                "src": "512:30:11"
                              },
                              "nativeSrc": "509:56:11",
                              "nodeType": "YulIf",
                              "src": "509:56:11"
                            },
                            {
                              "nativeSrc": "574:24:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "574:24:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "588:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "588:1:11",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "591:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "591:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "584:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "584:3:11"
                                },
                                "nativeSrc": "584:14:11",
                                "nodeType": "YulFunctionCall",
                                "src": "584:14:11"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "578:2:11",
                                  "nodeType": "YulTypedName",
                                  "src": "578:2:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "607:23:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "607:23:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "627:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "627:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "621:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "621:5:11"
                                },
                                "nativeSrc": "621:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "621:9:11"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "611:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "611:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "639:56:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "639:56:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "661:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "661:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "677:2:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "677:2:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "681:2:11",
                                            "nodeType": "YulLiteral",
                                            "src": "681:2:11",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "673:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "673:3:11"
                                        },
                                        "nativeSrc": "673:11:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "673:11:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "690:2:11",
                                            "nodeType": "YulLiteral",
                                            "src": "690:2:11",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "686:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "686:3:11"
                                        },
                                        "nativeSrc": "686:7:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "686:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "669:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "669:3:11"
                                    },
                                    "nativeSrc": "669:25:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "669:25:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "657:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "657:3:11"
                                },
                                "nativeSrc": "657:38:11",
                                "nodeType": "YulFunctionCall",
                                "src": "657:38:11"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "643:10:11",
                                  "nodeType": "YulTypedName",
                                  "src": "643:10:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "770:22:11",
                                "nodeType": "YulBlock",
                                "src": "770:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "772:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "772:16:11"
                                      },
                                      "nativeSrc": "772:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "772:18:11"
                                    },
                                    "nativeSrc": "772:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "772:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "713:10:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "713:10:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "725:18:11",
                                        "nodeType": "YulLiteral",
                                        "src": "725:18:11",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "710:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "710:2:11"
                                    },
                                    "nativeSrc": "710:34:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "710:34:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "749:10:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "749:10:11"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "761:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "761:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "746:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "746:2:11"
                                    },
                                    "nativeSrc": "746:22:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "746:22:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "707:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "707:2:11"
                                },
                                "nativeSrc": "707:62:11",
                                "nodeType": "YulFunctionCall",
                                "src": "707:62:11"
                              },
                              "nativeSrc": "704:88:11",
                              "nodeType": "YulIf",
                              "src": "704:88:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "808:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "808:2:11",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "812:10:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "812:10:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "801:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "801:6:11"
                                },
                                "nativeSrc": "801:22:11",
                                "nodeType": "YulFunctionCall",
                                "src": "801:22:11"
                              },
                              "nativeSrc": "801:22:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "801:22:11"
                            },
                            {
                              "nativeSrc": "832:17:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "832:17:11",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "843:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "843:6:11"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nativeSrc": "836:3:11",
                                  "nodeType": "YulTypedName",
                                  "src": "836:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "865:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "865:6:11"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "873:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "873:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "858:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "858:6:11"
                                },
                                "nativeSrc": "858:22:11",
                                "nodeType": "YulFunctionCall",
                                "src": "858:22:11"
                              },
                              "nativeSrc": "858:22:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "858:22:11"
                            },
                            {
                              "nativeSrc": "889:24:11",
                              "nodeType": "YulAssignment",
                              "src": "889:24:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "900:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "900:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "908:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "908:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "896:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "896:3:11"
                                },
                                "nativeSrc": "896:17:11",
                                "nodeType": "YulFunctionCall",
                                "src": "896:17:11"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nativeSrc": "889:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "889:3:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "922:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "922:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "944:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "944:6:11"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "952:2:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "952:2:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "940:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "940:3:11"
                                    },
                                    "nativeSrc": "940:15:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "940:15:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "957:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "957:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "936:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "936:3:11"
                                },
                                "nativeSrc": "936:26:11",
                                "nodeType": "YulFunctionCall",
                                "src": "936:26:11"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nativeSrc": "926:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "926:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "990:16:11",
                                "nodeType": "YulBlock",
                                "src": "990:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "999:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "999:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1002:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1002:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "992:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "992:6:11"
                                      },
                                      "nativeSrc": "992:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "992:12:11"
                                    },
                                    "nativeSrc": "992:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "992:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nativeSrc": "977:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "977:6:11"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "985:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "985:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "974:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "974:2:11"
                                },
                                "nativeSrc": "974:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "974:15:11"
                              },
                              "nativeSrc": "971:35:11",
                              "nodeType": "YulIf",
                              "src": "971:35:11"
                            },
                            {
                              "nativeSrc": "1015:28:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1015:28:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1030:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1030:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1038:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1038:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1026:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1026:3:11"
                                },
                                "nativeSrc": "1026:17:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1026:17:11"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nativeSrc": "1019:3:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1019:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1110:142:11",
                                "nodeType": "YulBlock",
                                "src": "1110:142:11",
                                "statements": [
                                  {
                                    "nativeSrc": "1124:14:11",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1124:14:11",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "1137:1:11",
                                      "nodeType": "YulLiteral",
                                      "src": "1137:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1128:5:11",
                                        "nodeType": "YulTypedName",
                                        "src": "1128:5:11",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "1151:26:11",
                                    "nodeType": "YulAssignment",
                                    "src": "1151:26:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nativeSrc": "1173:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1173:3:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nativeSrc": "1160:12:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1160:12:11"
                                      },
                                      "nativeSrc": "1160:17:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1160:17:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1151:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1151:5:11"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nativeSrc": "1197:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1197:3:11"
                                        },
                                        {
                                          "name": "value",
                                          "nativeSrc": "1202:5:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1202:5:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "1190:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1190:6:11"
                                      },
                                      "nativeSrc": "1190:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1190:18:11"
                                    },
                                    "nativeSrc": "1190:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1190:18:11"
                                  },
                                  {
                                    "nativeSrc": "1221:21:11",
                                    "nodeType": "YulAssignment",
                                    "src": "1221:21:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nativeSrc": "1232:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1232:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1237:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1237:4:11",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1228:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1228:3:11"
                                      },
                                      "nativeSrc": "1228:14:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1228:14:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nativeSrc": "1221:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1221:3:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "1063:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1063:3:11"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nativeSrc": "1068:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1068:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "1060:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1060:2:11"
                                },
                                "nativeSrc": "1060:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1060:15:11"
                              },
                              "nativeSrc": "1052:200:11",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "1076:25:11",
                                "nodeType": "YulBlock",
                                "src": "1076:25:11",
                                "statements": [
                                  {
                                    "nativeSrc": "1078:21:11",
                                    "nodeType": "YulAssignment",
                                    "src": "1078:21:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nativeSrc": "1089:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1089:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1094:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1094:4:11",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1085:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1085:3:11"
                                      },
                                      "nativeSrc": "1085:14:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1085:14:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nativeSrc": "1078:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1078:3:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "1056:3:11",
                                "nodeType": "YulBlock",
                                "src": "1056:3:11",
                                "statements": []
                              },
                              "src": "1052:200:11"
                            },
                            {
                              "nativeSrc": "1261:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1261:15:11",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "1270:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "1270:6:11"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nativeSrc": "1261:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1261:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_uint256_dyn",
                        "nativeSrc": "328:954:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "366:6:11",
                            "nodeType": "YulTypedName",
                            "src": "366:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "374:3:11",
                            "nodeType": "YulTypedName",
                            "src": "374:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nativeSrc": "382:5:11",
                            "nodeType": "YulTypedName",
                            "src": "382:5:11",
                            "type": ""
                          }
                        ],
                        "src": "328:954:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1475:758:11",
                          "nodeType": "YulBlock",
                          "src": "1475:758:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1522:16:11",
                                "nodeType": "YulBlock",
                                "src": "1522:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1531:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1531:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1534:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1534:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1524:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1524:6:11"
                                      },
                                      "nativeSrc": "1524:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1524:12:11"
                                    },
                                    "nativeSrc": "1524:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1524:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1496:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1496:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1505:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1505:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1492:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1492:3:11"
                                    },
                                    "nativeSrc": "1492:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1492:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1517:3:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1517:3:11",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1488:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1488:3:11"
                                },
                                "nativeSrc": "1488:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1488:33:11"
                              },
                              "nativeSrc": "1485:53:11",
                              "nodeType": "YulIf",
                              "src": "1485:53:11"
                            },
                            {
                              "nativeSrc": "1547:14:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1547:14:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1560:1:11",
                                "nodeType": "YulLiteral",
                                "src": "1560:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1551:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1551:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1570:32:11",
                              "nodeType": "YulAssignment",
                              "src": "1570:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1592:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1592:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1579:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1579:12:11"
                                },
                                "nativeSrc": "1579:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1579:23:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1570:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1570:5:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1611:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1611:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1621:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "1621:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1611:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1611:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1635:16:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1635:16:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1650:1:11",
                                "nodeType": "YulLiteral",
                                "src": "1650:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "1639:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1639:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1660:43:11",
                              "nodeType": "YulAssignment",
                              "src": "1660:43:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1688:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1688:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1699:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1699:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1684:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1684:3:11"
                                    },
                                    "nativeSrc": "1684:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1684:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1671:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1671:12:11"
                                },
                                "nativeSrc": "1671:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1671:32:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "1660:7:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1660:7:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1712:17:11",
                              "nodeType": "YulAssignment",
                              "src": "1712:17:11",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "1722:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "1722:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1712:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1712:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1738:16:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1738:16:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1753:1:11",
                                "nodeType": "YulLiteral",
                                "src": "1753:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "1742:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1742:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1763:43:11",
                              "nodeType": "YulAssignment",
                              "src": "1763:43:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1791:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1791:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1802:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1802:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1787:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1787:3:11"
                                    },
                                    "nativeSrc": "1787:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1787:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1774:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1774:12:11"
                                },
                                "nativeSrc": "1774:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1774:32:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "1763:7:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1763:7:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1815:17:11",
                              "nodeType": "YulAssignment",
                              "src": "1815:17:11",
                              "value": {
                                "name": "value_2",
                                "nativeSrc": "1825:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "1825:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "1815:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1815:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1841:46:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1841:46:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1872:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1872:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1883:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1883:2:11",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1868:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1868:3:11"
                                    },
                                    "nativeSrc": "1868:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1868:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1855:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1855:12:11"
                                },
                                "nativeSrc": "1855:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1855:32:11"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "1845:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1845:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1930:16:11",
                                "nodeType": "YulBlock",
                                "src": "1930:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1939:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1939:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1942:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1942:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1932:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1932:6:11"
                                      },
                                      "nativeSrc": "1932:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1932:12:11"
                                    },
                                    "nativeSrc": "1932:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1932:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1902:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1902:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1910:18:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1910:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1899:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1899:2:11"
                                },
                                "nativeSrc": "1899:30:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1899:30:11"
                              },
                              "nativeSrc": "1896:50:11",
                              "nodeType": "YulIf",
                              "src": "1896:50:11"
                            },
                            {
                              "nativeSrc": "1955:71:11",
                              "nodeType": "YulAssignment",
                              "src": "1955:71:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1998:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1998:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "2009:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2009:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1994:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1994:3:11"
                                    },
                                    "nativeSrc": "1994:22:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1994:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "2018:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2018:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nativeSrc": "1965:28:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1965:28:11"
                                },
                                "nativeSrc": "1965:61:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1965:61:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nativeSrc": "1955:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1955:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2035:49:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2035:49:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2068:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2068:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2079:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "2079:3:11",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2064:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2064:3:11"
                                    },
                                    "nativeSrc": "2064:19:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2064:19:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2051:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2051:12:11"
                                },
                                "nativeSrc": "2051:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2051:33:11"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nativeSrc": "2039:8:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2039:8:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2129:16:11",
                                "nodeType": "YulBlock",
                                "src": "2129:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2138:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2138:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2141:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2141:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2131:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2131:6:11"
                                      },
                                      "nativeSrc": "2131:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2131:12:11"
                                    },
                                    "nativeSrc": "2131:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2131:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nativeSrc": "2099:8:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2099:8:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2109:18:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2109:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2096:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2096:2:11"
                                },
                                "nativeSrc": "2096:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2096:32:11"
                              },
                              "nativeSrc": "2093:52:11",
                              "nodeType": "YulIf",
                              "src": "2093:52:11"
                            },
                            {
                              "nativeSrc": "2154:73:11",
                              "nodeType": "YulAssignment",
                              "src": "2154:73:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2197:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2197:9:11"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nativeSrc": "2208:8:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2208:8:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2193:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2193:3:11"
                                    },
                                    "nativeSrc": "2193:24:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2193:24:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "2219:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2219:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nativeSrc": "2164:28:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2164:28:11"
                                },
                                "nativeSrc": "2164:63:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2164:63:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nativeSrc": "2154:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2154:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256t_uint256t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
                        "nativeSrc": "1287:946:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1409:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1409:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1420:7:11",
                            "nodeType": "YulTypedName",
                            "src": "1420:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1432:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1432:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1440:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1440:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1448:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1448:6:11",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nativeSrc": "1456:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1456:6:11",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nativeSrc": "1464:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1464:6:11",
                            "type": ""
                          }
                        ],
                        "src": "1287:946:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "2389:460:11",
                          "nodeType": "YulBlock",
                          "src": "2389:460:11",
                          "statements": [
                            {
                              "nativeSrc": "2399:32:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2399:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2417:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2417:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2428:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2428:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2413:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2413:3:11"
                                },
                                "nativeSrc": "2413:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2413:18:11"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nativeSrc": "2403:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2403:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2447:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2447:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2458:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2458:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2440:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2440:6:11"
                                },
                                "nativeSrc": "2440:21:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2440:21:11"
                              },
                              "nativeSrc": "2440:21:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "2440:21:11"
                            },
                            {
                              "nativeSrc": "2470:17:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2470:17:11",
                              "value": {
                                "name": "tail_1",
                                "nativeSrc": "2481:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "2481:6:11"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "2474:3:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2474:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2496:27:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2496:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "2516:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2516:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2510:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2510:5:11"
                                },
                                "nativeSrc": "2510:13:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2510:13:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "2500:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2500:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nativeSrc": "2539:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2539:6:11"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "2547:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2547:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2532:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2532:6:11"
                                },
                                "nativeSrc": "2532:22:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2532:22:11"
                              },
                              "nativeSrc": "2532:22:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "2532:22:11"
                            },
                            {
                              "nativeSrc": "2563:25:11",
                              "nodeType": "YulAssignment",
                              "src": "2563:25:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2574:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2574:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2585:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2585:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2570:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2570:3:11"
                                },
                                "nativeSrc": "2570:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2570:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "2563:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2563:3:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2597:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2597:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "2615:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2615:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2623:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2623:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2611:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2611:3:11"
                                },
                                "nativeSrc": "2611:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2611:15:11"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nativeSrc": "2601:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2601:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2635:10:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2635:10:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2644:1:11",
                                "nodeType": "YulLiteral",
                                "src": "2644:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "2639:1:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2639:1:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2703:120:11",
                                "nodeType": "YulBlock",
                                "src": "2703:120:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "2724:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2724:3:11"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nativeSrc": "2735:6:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "2735:6:11"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "2729:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "2729:5:11"
                                          },
                                          "nativeSrc": "2729:13:11",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2729:13:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2717:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2717:6:11"
                                      },
                                      "nativeSrc": "2717:26:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2717:26:11"
                                    },
                                    "nativeSrc": "2717:26:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2717:26:11"
                                  },
                                  {
                                    "nativeSrc": "2756:19:11",
                                    "nodeType": "YulAssignment",
                                    "src": "2756:19:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "2767:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2767:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2772:2:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2772:2:11",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2763:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2763:3:11"
                                      },
                                      "nativeSrc": "2763:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2763:12:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "2756:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2756:3:11"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "2788:25:11",
                                    "nodeType": "YulAssignment",
                                    "src": "2788:25:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nativeSrc": "2802:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2802:6:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2810:2:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2810:2:11",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2798:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2798:3:11"
                                      },
                                      "nativeSrc": "2798:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2798:15:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nativeSrc": "2788:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2788:6:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "2665:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2665:1:11"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "2668:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2668:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "2662:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2662:2:11"
                                },
                                "nativeSrc": "2662:13:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2662:13:11"
                              },
                              "nativeSrc": "2654:169:11",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "2676:18:11",
                                "nodeType": "YulBlock",
                                "src": "2676:18:11",
                                "statements": [
                                  {
                                    "nativeSrc": "2678:14:11",
                                    "nodeType": "YulAssignment",
                                    "src": "2678:14:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "2687:1:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2687:1:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2690:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2690:1:11",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2683:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2683:3:11"
                                      },
                                      "nativeSrc": "2683:9:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2683:9:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "2678:1:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2678:1:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "2658:3:11",
                                "nodeType": "YulBlock",
                                "src": "2658:3:11",
                                "statements": []
                              },
                              "src": "2654:169:11"
                            },
                            {
                              "nativeSrc": "2832:11:11",
                              "nodeType": "YulAssignment",
                              "src": "2832:11:11",
                              "value": {
                                "name": "pos",
                                "nativeSrc": "2840:3:11",
                                "nodeType": "YulIdentifier",
                                "src": "2840:3:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2832:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2832:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                        "nativeSrc": "2238:611:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2358:9:11",
                            "nodeType": "YulTypedName",
                            "src": "2358:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2369:6:11",
                            "nodeType": "YulTypedName",
                            "src": "2369:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2380:4:11",
                            "nodeType": "YulTypedName",
                            "src": "2380:4:11",
                            "type": ""
                          }
                        ],
                        "src": "2238:611:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "2955:102:11",
                          "nodeType": "YulBlock",
                          "src": "2955:102:11",
                          "statements": [
                            {
                              "nativeSrc": "2965:26:11",
                              "nodeType": "YulAssignment",
                              "src": "2965:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2977:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2977:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2988:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2988:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2973:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2973:3:11"
                                },
                                "nativeSrc": "2973:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2973:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2965:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2965:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3007:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3007:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3022:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3022:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3038:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3038:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3043:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3043:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "3034:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "3034:3:11"
                                            },
                                            "nativeSrc": "3034:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3034:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3047:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "3047:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "3030:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3030:3:11"
                                        },
                                        "nativeSrc": "3030:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3030:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3018:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3018:3:11"
                                    },
                                    "nativeSrc": "3018:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3018:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3000:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3000:6:11"
                                },
                                "nativeSrc": "3000:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3000:51:11"
                              },
                              "nativeSrc": "3000:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "3000:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "2854:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2924:9:11",
                            "nodeType": "YulTypedName",
                            "src": "2924:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2935:6:11",
                            "nodeType": "YulTypedName",
                            "src": "2935:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2946:4:11",
                            "nodeType": "YulTypedName",
                            "src": "2946:4:11",
                            "type": ""
                          }
                        ],
                        "src": "2854:203:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3179:102:11",
                          "nodeType": "YulBlock",
                          "src": "3179:102:11",
                          "statements": [
                            {
                              "nativeSrc": "3189:26:11",
                              "nodeType": "YulAssignment",
                              "src": "3189:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3201:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3201:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3212:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3212:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3197:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3197:3:11"
                                },
                                "nativeSrc": "3197:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3197:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3189:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3189:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3231:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3231:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3246:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3246:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3262:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3262:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3267:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3267:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "3258:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "3258:3:11"
                                            },
                                            "nativeSrc": "3258:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3258:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3271:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "3271:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "3254:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3254:3:11"
                                        },
                                        "nativeSrc": "3254:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3254:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3242:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3242:3:11"
                                    },
                                    "nativeSrc": "3242:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3242:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3224:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3224:6:11"
                                },
                                "nativeSrc": "3224:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3224:51:11"
                              },
                              "nativeSrc": "3224:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "3224:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed",
                        "nativeSrc": "3062:219:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3148:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3148:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3159:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3159:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3170:4:11",
                            "nodeType": "YulTypedName",
                            "src": "3170:4:11",
                            "type": ""
                          }
                        ],
                        "src": "3062:219:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3356:156:11",
                          "nodeType": "YulBlock",
                          "src": "3356:156:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3402:16:11",
                                "nodeType": "YulBlock",
                                "src": "3402:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3411:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3411:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3414:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3414:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3404:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3404:6:11"
                                      },
                                      "nativeSrc": "3404:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3404:12:11"
                                    },
                                    "nativeSrc": "3404:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3404:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3377:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3377:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3386:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3386:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3373:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3373:3:11"
                                    },
                                    "nativeSrc": "3373:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3373:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3398:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3398:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3369:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3369:3:11"
                                },
                                "nativeSrc": "3369:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3369:32:11"
                              },
                              "nativeSrc": "3366:52:11",
                              "nodeType": "YulIf",
                              "src": "3366:52:11"
                            },
                            {
                              "nativeSrc": "3427:14:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3427:14:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3440:1:11",
                                "nodeType": "YulLiteral",
                                "src": "3440:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3431:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "3431:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3450:32:11",
                              "nodeType": "YulAssignment",
                              "src": "3450:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3472:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3472:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3459:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3459:12:11"
                                },
                                "nativeSrc": "3459:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3459:23:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3450:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3450:5:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3491:15:11",
                              "nodeType": "YulAssignment",
                              "src": "3491:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "3501:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "3501:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3491:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3491:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nativeSrc": "3286:226:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3322:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3322:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3333:7:11",
                            "nodeType": "YulTypedName",
                            "src": "3333:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3345:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3345:6:11",
                            "type": ""
                          }
                        ],
                        "src": "3286:226:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3632:102:11",
                          "nodeType": "YulBlock",
                          "src": "3632:102:11",
                          "statements": [
                            {
                              "nativeSrc": "3642:26:11",
                              "nodeType": "YulAssignment",
                              "src": "3642:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3654:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3654:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3665:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3665:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3650:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3650:3:11"
                                },
                                "nativeSrc": "3650:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3650:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3642:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3642:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3684:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3684:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3699:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3699:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3715:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3715:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3720:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3720:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "3711:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "3711:3:11"
                                            },
                                            "nativeSrc": "3711:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3711:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3724:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "3724:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "3707:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3707:3:11"
                                        },
                                        "nativeSrc": "3707:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3707:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3695:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3695:3:11"
                                    },
                                    "nativeSrc": "3695:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3695:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3677:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3677:6:11"
                                },
                                "nativeSrc": "3677:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3677:51:11"
                              },
                              "nativeSrc": "3677:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "3677:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed",
                        "nativeSrc": "3517:217:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3601:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3601:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3612:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3612:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3623:4:11",
                            "nodeType": "YulTypedName",
                            "src": "3623:4:11",
                            "type": ""
                          }
                        ],
                        "src": "3517:217:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3809:216:11",
                          "nodeType": "YulBlock",
                          "src": "3809:216:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3855:16:11",
                                "nodeType": "YulBlock",
                                "src": "3855:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3864:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3864:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3867:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3867:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3857:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3857:6:11"
                                      },
                                      "nativeSrc": "3857:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3857:12:11"
                                    },
                                    "nativeSrc": "3857:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3857:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3830:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3830:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3839:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3839:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3826:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3826:3:11"
                                    },
                                    "nativeSrc": "3826:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3826:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3851:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3851:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3822:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3822:3:11"
                                },
                                "nativeSrc": "3822:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3822:32:11"
                              },
                              "nativeSrc": "3819:52:11",
                              "nodeType": "YulIf",
                              "src": "3819:52:11"
                            },
                            {
                              "nativeSrc": "3880:36:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3880:36:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3906:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3906:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3893:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3893:12:11"
                                },
                                "nativeSrc": "3893:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3893:23:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3884:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "3884:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3979:16:11",
                                "nodeType": "YulBlock",
                                "src": "3979:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3988:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3988:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3991:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3991:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3981:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3981:6:11"
                                      },
                                      "nativeSrc": "3981:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3981:12:11"
                                    },
                                    "nativeSrc": "3981:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3981:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "3938:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3938:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "3949:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "3949:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "3964:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3964:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "3969:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3969:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "3960:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3960:3:11"
                                                },
                                                "nativeSrc": "3960:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3960:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3973:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3973:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "3956:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "3956:3:11"
                                            },
                                            "nativeSrc": "3956:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3956:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "3945:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3945:3:11"
                                        },
                                        "nativeSrc": "3945:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3945:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "3935:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3935:2:11"
                                    },
                                    "nativeSrc": "3935:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3935:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3928:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3928:6:11"
                                },
                                "nativeSrc": "3928:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3928:50:11"
                              },
                              "nativeSrc": "3925:70:11",
                              "nodeType": "YulIf",
                              "src": "3925:70:11"
                            },
                            {
                              "nativeSrc": "4004:15:11",
                              "nodeType": "YulAssignment",
                              "src": "4004:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "4014:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "4014:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "4004:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4004:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "3739:286:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3775:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3775:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3786:7:11",
                            "nodeType": "YulTypedName",
                            "src": "3786:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3798:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3798:6:11",
                            "type": ""
                          }
                        ],
                        "src": "3739:286:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4062:95:11",
                          "nodeType": "YulBlock",
                          "src": "4062:95:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4079:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4079:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4086:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4086:3:11",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4091:10:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4091:10:11",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "4082:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4082:3:11"
                                    },
                                    "nativeSrc": "4082:20:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4082:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4072:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4072:6:11"
                                },
                                "nativeSrc": "4072:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4072:31:11"
                              },
                              "nativeSrc": "4072:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4072:31:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4119:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4119:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4122:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4122:4:11",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4112:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4112:6:11"
                                },
                                "nativeSrc": "4112:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4112:15:11"
                              },
                              "nativeSrc": "4112:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4112:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4143:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4143:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4146:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4146:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "4136:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4136:6:11"
                                },
                                "nativeSrc": "4136:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4136:15:11"
                              },
                              "nativeSrc": "4136:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4136:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "4030:127:11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4030:127:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4210:77:11",
                          "nodeType": "YulBlock",
                          "src": "4210:77:11",
                          "statements": [
                            {
                              "nativeSrc": "4220:16:11",
                              "nodeType": "YulAssignment",
                              "src": "4220:16:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4231:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4231:1:11"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4234:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4234:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4227:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4227:3:11"
                                },
                                "nativeSrc": "4227:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4227:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "4220:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4220:3:11"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4259:22:11",
                                "nodeType": "YulBlock",
                                "src": "4259:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4261:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4261:16:11"
                                      },
                                      "nativeSrc": "4261:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4261:18:11"
                                    },
                                    "nativeSrc": "4261:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4261:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4251:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4251:1:11"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "4254:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4254:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4248:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4248:2:11"
                                },
                                "nativeSrc": "4248:10:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4248:10:11"
                              },
                              "nativeSrc": "4245:36:11",
                              "nodeType": "YulIf",
                              "src": "4245:36:11"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "4162:125:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4193:1:11",
                            "nodeType": "YulTypedName",
                            "src": "4193:1:11",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4196:1:11",
                            "nodeType": "YulTypedName",
                            "src": "4196:1:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "4202:3:11",
                            "nodeType": "YulTypedName",
                            "src": "4202:3:11",
                            "type": ""
                          }
                        ],
                        "src": "4162:125:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4324:95:11",
                          "nodeType": "YulBlock",
                          "src": "4324:95:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4341:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4341:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4348:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4348:3:11",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4353:10:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4353:10:11",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "4344:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4344:3:11"
                                    },
                                    "nativeSrc": "4344:20:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4344:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4334:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4334:6:11"
                                },
                                "nativeSrc": "4334:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4334:31:11"
                              },
                              "nativeSrc": "4334:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4334:31:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4381:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4381:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4384:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4384:4:11",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4374:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4374:6:11"
                                },
                                "nativeSrc": "4374:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4374:15:11"
                              },
                              "nativeSrc": "4374:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4374:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4405:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4405:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4408:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4408:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "4398:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4398:6:11"
                                },
                                "nativeSrc": "4398:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4398:15:11"
                              },
                              "nativeSrc": "4398:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4398:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nativeSrc": "4292:127:11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4292:127:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4581:214:11",
                          "nodeType": "YulBlock",
                          "src": "4581:214:11",
                          "statements": [
                            {
                              "nativeSrc": "4591:26:11",
                              "nodeType": "YulAssignment",
                              "src": "4591:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4603:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4603:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4614:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4614:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4599:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4599:3:11"
                                },
                                "nativeSrc": "4599:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4599:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4591:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4591:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4633:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4633:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4648:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4648:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4664:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "4664:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4669:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "4669:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "4660:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "4660:3:11"
                                            },
                                            "nativeSrc": "4660:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4660:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4673:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "4673:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4656:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "4656:3:11"
                                        },
                                        "nativeSrc": "4656:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4656:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4644:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4644:3:11"
                                    },
                                    "nativeSrc": "4644:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4644:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4626:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4626:6:11"
                                },
                                "nativeSrc": "4626:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4626:51:11"
                              },
                              "nativeSrc": "4626:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4626:51:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4697:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4697:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4708:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4708:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4693:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4693:3:11"
                                    },
                                    "nativeSrc": "4693:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4693:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "4717:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4717:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4733:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "4733:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4738:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "4738:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "4729:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "4729:3:11"
                                            },
                                            "nativeSrc": "4729:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4729:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4742:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "4742:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4725:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "4725:3:11"
                                        },
                                        "nativeSrc": "4725:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4725:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4713:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4713:3:11"
                                    },
                                    "nativeSrc": "4713:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4713:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4686:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4686:6:11"
                                },
                                "nativeSrc": "4686:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4686:60:11"
                              },
                              "nativeSrc": "4686:60:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4686:60:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4766:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4766:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4777:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4777:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4762:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4762:3:11"
                                    },
                                    "nativeSrc": "4762:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4762:18:11"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "4782:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4782:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4755:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4755:6:11"
                                },
                                "nativeSrc": "4755:34:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4755:34:11"
                              },
                              "nativeSrc": "4755:34:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4755:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "4424:371:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4534:9:11",
                            "nodeType": "YulTypedName",
                            "src": "4534:9:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "4545:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4545:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "4553:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4553:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4561:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4561:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4572:4:11",
                            "nodeType": "YulTypedName",
                            "src": "4572:4:11",
                            "type": ""
                          }
                        ],
                        "src": "4424:371:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4878:199:11",
                          "nodeType": "YulBlock",
                          "src": "4878:199:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "4924:16:11",
                                "nodeType": "YulBlock",
                                "src": "4924:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4933:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4933:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4936:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4936:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4926:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4926:6:11"
                                      },
                                      "nativeSrc": "4926:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4926:12:11"
                                    },
                                    "nativeSrc": "4926:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4926:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "4899:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4899:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4908:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4908:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "4895:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4895:3:11"
                                    },
                                    "nativeSrc": "4895:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4895:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4920:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4920:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "4891:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4891:3:11"
                                },
                                "nativeSrc": "4891:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4891:32:11"
                              },
                              "nativeSrc": "4888:52:11",
                              "nodeType": "YulIf",
                              "src": "4888:52:11"
                            },
                            {
                              "nativeSrc": "4949:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4949:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4968:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4968:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "4962:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4962:5:11"
                                },
                                "nativeSrc": "4962:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4962:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "4953:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "4953:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5031:16:11",
                                "nodeType": "YulBlock",
                                "src": "5031:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5040:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5040:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5043:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5043:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5033:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5033:6:11"
                                      },
                                      "nativeSrc": "5033:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5033:12:11"
                                    },
                                    "nativeSrc": "5033:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5033:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "5000:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5000:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "5021:5:11",
                                                "nodeType": "YulIdentifier",
                                                "src": "5021:5:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "5014:6:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "5014:6:11"
                                            },
                                            "nativeSrc": "5014:13:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5014:13:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "5007:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5007:6:11"
                                        },
                                        "nativeSrc": "5007:21:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5007:21:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "4997:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4997:2:11"
                                    },
                                    "nativeSrc": "4997:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4997:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4990:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4990:6:11"
                                },
                                "nativeSrc": "4990:40:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4990:40:11"
                              },
                              "nativeSrc": "4987:60:11",
                              "nodeType": "YulIf",
                              "src": "4987:60:11"
                            },
                            {
                              "nativeSrc": "5056:15:11",
                              "nodeType": "YulAssignment",
                              "src": "5056:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "5066:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "5066:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "5056:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5056:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nativeSrc": "4800:277:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4844:9:11",
                            "nodeType": "YulTypedName",
                            "src": "4844:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "4855:7:11",
                            "nodeType": "YulTypedName",
                            "src": "4855:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "4867:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4867:6:11",
                            "type": ""
                          }
                        ],
                        "src": "4800:277:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5211:119:11",
                          "nodeType": "YulBlock",
                          "src": "5211:119:11",
                          "statements": [
                            {
                              "nativeSrc": "5221:26:11",
                              "nodeType": "YulAssignment",
                              "src": "5221:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5233:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5233:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5244:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5244:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5229:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5229:3:11"
                                },
                                "nativeSrc": "5229:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5229:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5221:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5221:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5263:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5263:9:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5274:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5274:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5256:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5256:6:11"
                                },
                                "nativeSrc": "5256:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5256:25:11"
                              },
                              "nativeSrc": "5256:25:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5256:25:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5301:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5301:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5312:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "5312:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5297:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5297:3:11"
                                    },
                                    "nativeSrc": "5297:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5297:18:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5317:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5317:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5290:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5290:6:11"
                                },
                                "nativeSrc": "5290:34:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5290:34:11"
                              },
                              "nativeSrc": "5290:34:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5290:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
                        "nativeSrc": "5082:248:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5172:9:11",
                            "nodeType": "YulTypedName",
                            "src": "5172:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5183:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5183:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5191:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5191:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5202:4:11",
                            "nodeType": "YulTypedName",
                            "src": "5202:4:11",
                            "type": ""
                          }
                        ],
                        "src": "5082:248:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5464:145:11",
                          "nodeType": "YulBlock",
                          "src": "5464:145:11",
                          "statements": [
                            {
                              "nativeSrc": "5474:26:11",
                              "nodeType": "YulAssignment",
                              "src": "5474:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5486:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5486:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5497:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5497:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5482:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5482:3:11"
                                },
                                "nativeSrc": "5482:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5482:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5474:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5474:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5516:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5516:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5531:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5531:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5547:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5547:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5552:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5552:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5543:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "5543:3:11"
                                            },
                                            "nativeSrc": "5543:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5543:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5556:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "5556:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5539:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5539:3:11"
                                        },
                                        "nativeSrc": "5539:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5539:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5527:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5527:3:11"
                                    },
                                    "nativeSrc": "5527:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5527:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5509:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5509:6:11"
                                },
                                "nativeSrc": "5509:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5509:51:11"
                              },
                              "nativeSrc": "5509:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5509:51:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5580:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5580:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5591:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "5591:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5576:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5576:3:11"
                                    },
                                    "nativeSrc": "5576:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5576:18:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5596:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5596:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5569:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5569:6:11"
                                },
                                "nativeSrc": "5569:34:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5569:34:11"
                              },
                              "nativeSrc": "5569:34:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5569:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "5335:274:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5425:9:11",
                            "nodeType": "YulTypedName",
                            "src": "5425:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5436:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5436:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5444:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5444:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5455:4:11",
                            "nodeType": "YulTypedName",
                            "src": "5455:4:11",
                            "type": ""
                          }
                        ],
                        "src": "5335:274:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5761:147:11",
                          "nodeType": "YulBlock",
                          "src": "5761:147:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "5778:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5778:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5791:2:11",
                                            "nodeType": "YulLiteral",
                                            "src": "5791:2:11",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value0",
                                            "nativeSrc": "5795:6:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "5795:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "5787:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5787:3:11"
                                        },
                                        "nativeSrc": "5787:15:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5787:15:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5808:26:11",
                                            "nodeType": "YulLiteral",
                                            "src": "5808:26:11",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "5804:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5804:3:11"
                                        },
                                        "nativeSrc": "5804:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5804:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5783:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5783:3:11"
                                    },
                                    "nativeSrc": "5783:53:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5783:53:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5771:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5771:6:11"
                                },
                                "nativeSrc": "5771:66:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5771:66:11"
                              },
                              "nativeSrc": "5771:66:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5771:66:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "5857:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5857:3:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5862:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "5862:2:11",
                                        "type": "",
                                        "value": "20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5853:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5853:3:11"
                                    },
                                    "nativeSrc": "5853:12:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5853:12:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5867:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5867:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5846:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5846:6:11"
                                },
                                "nativeSrc": "5846:28:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5846:28:11"
                              },
                              "nativeSrc": "5846:28:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5846:28:11"
                            },
                            {
                              "nativeSrc": "5883:19:11",
                              "nodeType": "YulAssignment",
                              "src": "5883:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "5894:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5894:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5899:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5899:2:11",
                                    "type": "",
                                    "value": "52"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5890:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5890:3:11"
                                },
                                "nativeSrc": "5890:12:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5890:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "5883:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5883:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nativeSrc": "5614:294:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "5729:3:11",
                            "nodeType": "YulTypedName",
                            "src": "5729:3:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5734:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5734:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5742:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5742:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "5753:3:11",
                            "nodeType": "YulTypedName",
                            "src": "5753:3:11",
                            "type": ""
                          }
                        ],
                        "src": "5614:294:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6060:100:11",
                          "nodeType": "YulBlock",
                          "src": "6060:100:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6077:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6077:3:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "6082:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6082:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6070:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6070:6:11"
                                },
                                "nativeSrc": "6070:19:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6070:19:11"
                              },
                              "nativeSrc": "6070:19:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6070:19:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "6109:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6109:3:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6114:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "6114:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6105:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6105:3:11"
                                    },
                                    "nativeSrc": "6105:12:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6105:12:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "6119:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6119:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6098:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6098:6:11"
                                },
                                "nativeSrc": "6098:28:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6098:28:11"
                              },
                              "nativeSrc": "6098:28:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6098:28:11"
                            },
                            {
                              "nativeSrc": "6135:19:11",
                              "nodeType": "YulAssignment",
                              "src": "6135:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6146:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6146:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6151:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "6151:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6142:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6142:3:11"
                                },
                                "nativeSrc": "6142:12:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6142:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "6135:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6135:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nativeSrc": "5913:247:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "6028:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6028:3:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "6033:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6033:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "6041:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6041:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "6052:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6052:3:11",
                            "type": ""
                          }
                        ],
                        "src": "5913:247:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6203:171:11",
                          "nodeType": "YulBlock",
                          "src": "6203:171:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "6234:111:11",
                                "nodeType": "YulBlock",
                                "src": "6234:111:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6255:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6255:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6262:3:11",
                                              "nodeType": "YulLiteral",
                                              "src": "6262:3:11",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6267:10:11",
                                              "nodeType": "YulLiteral",
                                              "src": "6267:10:11",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "6258:3:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "6258:3:11"
                                          },
                                          "nativeSrc": "6258:20:11",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6258:20:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "6248:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6248:6:11"
                                      },
                                      "nativeSrc": "6248:31:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6248:31:11"
                                    },
                                    "nativeSrc": "6248:31:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6248:31:11"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6299:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6299:1:11",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6302:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6302:4:11",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "6292:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6292:6:11"
                                      },
                                      "nativeSrc": "6292:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6292:15:11"
                                    },
                                    "nativeSrc": "6292:15:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6292:15:11"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6327:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6327:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6330:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6330:4:11",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "6320:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6320:6:11"
                                      },
                                      "nativeSrc": "6320:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6320:15:11"
                                    },
                                    "nativeSrc": "6320:15:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6320:15:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "6223:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6223:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "6216:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6216:6:11"
                                },
                                "nativeSrc": "6216:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6216:9:11"
                              },
                              "nativeSrc": "6213:132:11",
                              "nodeType": "YulIf",
                              "src": "6213:132:11"
                            },
                            {
                              "nativeSrc": "6354:14:11",
                              "nodeType": "YulAssignment",
                              "src": "6354:14:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "6363:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6363:1:11"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "6366:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6366:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nativeSrc": "6359:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6359:3:11"
                                },
                                "nativeSrc": "6359:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6359:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "6354:1:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6354:1:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nativeSrc": "6165:209:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "6188:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6188:1:11",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "6191:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6191:1:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "6197:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6197:1:11",
                            "type": ""
                          }
                        ],
                        "src": "6165:209:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6460:103:11",
                          "nodeType": "YulBlock",
                          "src": "6460:103:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "6506:16:11",
                                "nodeType": "YulBlock",
                                "src": "6506:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6515:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6515:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6518:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6518:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "6508:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6508:6:11"
                                      },
                                      "nativeSrc": "6508:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6508:12:11"
                                    },
                                    "nativeSrc": "6508:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6508:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "6481:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6481:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6490:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6490:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "6477:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6477:3:11"
                                    },
                                    "nativeSrc": "6477:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6477:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6502:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "6502:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "6473:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6473:3:11"
                                },
                                "nativeSrc": "6473:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6473:32:11"
                              },
                              "nativeSrc": "6470:52:11",
                              "nodeType": "YulIf",
                              "src": "6470:52:11"
                            },
                            {
                              "nativeSrc": "6531:26:11",
                              "nodeType": "YulAssignment",
                              "src": "6531:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6547:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6547:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "6541:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6541:5:11"
                                },
                                "nativeSrc": "6541:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6541:16:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "6531:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6531:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nativeSrc": "6379:184:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6426:9:11",
                            "nodeType": "YulTypedName",
                            "src": "6426:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "6437:7:11",
                            "nodeType": "YulTypedName",
                            "src": "6437:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "6449:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6449:6:11",
                            "type": ""
                          }
                        ],
                        "src": "6379:184:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6617:79:11",
                          "nodeType": "YulBlock",
                          "src": "6617:79:11",
                          "statements": [
                            {
                              "nativeSrc": "6627:17:11",
                              "nodeType": "YulAssignment",
                              "src": "6627:17:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "6639:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6639:1:11"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "6642:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6642:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "6635:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6635:3:11"
                                },
                                "nativeSrc": "6635:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6635:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nativeSrc": "6627:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6627:4:11"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "6668:22:11",
                                "nodeType": "YulBlock",
                                "src": "6668:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "6670:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6670:16:11"
                                      },
                                      "nativeSrc": "6670:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6670:18:11"
                                    },
                                    "nativeSrc": "6670:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6670:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nativeSrc": "6659:4:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6659:4:11"
                                  },
                                  {
                                    "name": "x",
                                    "nativeSrc": "6665:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6665:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "6656:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6656:2:11"
                                },
                                "nativeSrc": "6656:11:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6656:11:11"
                              },
                              "nativeSrc": "6653:37:11",
                              "nodeType": "YulIf",
                              "src": "6653:37:11"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nativeSrc": "6568:128:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "6599:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6599:1:11",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "6602:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6602:1:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nativeSrc": "6608:4:11",
                            "nodeType": "YulTypedName",
                            "src": "6608:4:11",
                            "type": ""
                          }
                        ],
                        "src": "6568:128:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _1 := shl(5, length)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_1, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, length)\n        dst := add(memPtr, 0x20)\n        let srcEnd := add(add(offset, _1), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 0x20)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100d55760003560e01c80638e7ea5b2116100875780638e7ea5b21461014d5780639329066c1461015e578063a94bd91914610166578063a9a86f4d14610179578063b2ab4ab71461018c578063d9f483f81461019f578063e8a8ee28146101b2578063f2fde38b146101db57600080fd5b806306e8337f146100da57806331e54a2e146100f15780634639545f146101065780634705ab241461010e578063715018a61461012357806381fe4c611461012b5780638da5cb5b14610133575b600080fd5b6008545b6040519081526020015b60405180910390f35b6101046100ff366004610b41565b6101ee565b005b6003546100de565b610116610432565b6040516100e89190610bc7565b61010461048a565b61010461049e565b6000546001600160a01b03165b6040516100e89190610c0a565b6007546001600160a01b0316610140565b6006546100de565b600554610140906001600160a01b031681565b610104610187366004610c1e565b6105b3565b600454610140906001600160a01b031681565b6100de6101ad366004610c37565b610828565b6100de6101c0366004610c37565b6001600160a01b03166000908152600a602052604090205490565b6101046101e9366004610c37565b610971565b6101f66109af565b600054600160a01b900460ff1615610221576040516301bf978f60e31b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b1790556001858155610244904390610c76565b60025560038490556006839055815167ffffffffffffffff81111561026b5761026b610a8c565b604051908082528060200260200182016040528015610294578160200160208202803683370190505b5080516102a991600b91602090910190610a2c565b5060005b8251811015610341578181815181106102c8576102c8610c8f565b6020026020010151600c60008584815181106102e6576102e6610c8f565b602002602001015181526020019081526020016000208190555082818151811061031257610312610c8f565b6020026020010151600b828154811061032d5761032d610c8f565b6000918252602090912001556001016102ad565b50600480546006546040516323b872dd60e01b8152339381019390935230602484015260448301526000916001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c49190610ca5565b9050806103e4576040516312171d8360e31b815260040160405180910390fd5b7f3b81d2f4abc4b25cdb3a280f602aba499a20e5e7f079340839d5e4481c2fff17600154600654604051610422929190918252602082015260400190565b60405180910390a1505050505050565b6060600b80548060200260200160405190810160405280929190818152602001828054801561048057602002820191906000526020600020905b81548152602001906001019080831161046c575b5050505050905090565b6104926109af565b61049c60006109dc565b565b6007546001600160a01b03161515806104c15750600054600160a01b900460ff16155b156104df576040516375d47e7f60e01b815260040160405180910390fd5b60006104ea33610828565b90508060000361050d576040516316d1382760e11b815260040160405180910390fd5b6008545b8160085461051f9190610c76565b81101561054c57600081815260096020526040902080546001600160a01b03191633179055600101610511565b50336000908152600a6020526040812082905560088054839290610571908490610c76565b90915550506040517f3492e8dc9c9e6d0557ae45dfe2d8cd4fd614084227839a8a969f39b114895425906105a89033908490610cc7565b60405180910390a150565b6105bb6109af565b6007546001600160a01b03161515806105de5750600054600160a01b900460ff16155b156105fc576040516375d47e7f60e01b815260040160405180910390fd5b43600254111561062e5760025460405163a3665c4960e01b815260040161062591815260200190565b60405180910390fd5b42600354111561065757600354604051633a4c7fb360e11b815260040161062591815260200190565b6001546040516bffffffffffffffffffffffff193360601b1660208201526034810183905260540160405160208183030381529060405280519060200120146106b35760405163431d3a4360e11b815260040160405180910390fd5b600254604080516020808201859052924081830152815180820383018152606090910190915280519101206008546009906000906106f19084610ce0565b8152602081019190915260400160002054600780546001600160a01b0319166001600160a01b03909216918217905561073d576040516301e4d0c360e21b815260040160405180910390fd5b6004805460075460065460405163a9059cbb60e01b81526000946001600160a01b039485169463a9059cbb9461077894911692909101610cc7565b6020604051808303816000875af1158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190610ca5565b9050806107db576040516312171d8360e31b815260040160405180910390fd5b6007546006546040517f7e2ca3905e2a3f4806a624223ea6cdcd30dad54d82e68b44481a5e00f322efc79261081b926001600160a01b0390911691610cc7565b60405180910390a1505050565b600080805b600b5481101561094657600554600b80546000926001600160a01b03169162fdd58e918891908690811061086357610863610c8f565b90600052602060002001546040518363ffffffff1660e01b815260040161088b929190610cc7565b602060405180830381865afa1580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190610d02565b111561093e5781600c6000600b84815481106108ea576108ea610c8f565b9060005260206000200154815260200190815260200160002054111561093e57600c6000600b838154811061092157610921610c8f565b906000526020600020015481526020019081526020016000205491505b60010161082d565b506001600160a01b0383166000908152600a602052604090205461096a9082610d1b565b9392505050565b6109796109af565b6001600160a01b0381166109a3576000604051631e4fbdf760e01b81526004016106259190610c0a565b6109ac816109dc565b50565b6000546001600160a01b0316331461049c573360405163118cdaa760e01b81526004016106259190610c0a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610a67579160200282015b82811115610a67578251825591602001919060010190610a4c565b50610a73929150610a77565b5090565b5b80821115610a735760008155600101610a78565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ab357600080fd5b813567ffffffffffffffff811115610acd57610acd610a8c565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715610afa57610afa610a8c565b604052918252602081850181019290810186841115610b1857600080fd5b6020860192505b83831015610b37578235815260209283019201610b1f565b5095945050505050565b600080600080600060a08688031215610b5957600080fd5b853594506020860135935060408601359250606086013567ffffffffffffffff811115610b8557600080fd5b610b9188828901610aa2565b925050608086013567ffffffffffffffff811115610bae57600080fd5b610bba88828901610aa2565b9150509295509295909350565b602080825282518282018190526000918401906040840190835b81811015610bff578351835260209384019390920191600101610be1565b509095945050505050565b6001600160a01b0391909116815260200190565b600060208284031215610c3057600080fd5b5035919050565b600060208284031215610c4957600080fd5b81356001600160a01b038116811461096a57600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610c8957610c89610c60565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610cb757600080fd5b8151801515811461096a57600080fd5b6001600160a01b03929092168252602082015260400190565b600082610cfd57634e487b7160e01b600052601260045260246000fd5b500690565b600060208284031215610d1457600080fd5b5051919050565b81810381811115610c8957610c89610c6056fea2646970667358221220c830426b5f022a2e5f2e2fcaa5787cbcf2d86a5a4f0bac593351c521b58f24c964736f6c634300081d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E7EA5B2 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x9329066C EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xE8A8EE28 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x31E54A2E EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4639545F EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xDE JUMP JUMPDEST PUSH2 0x116 PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x104 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x140 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x140 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP6 DUP2 SSTORE PUSH2 0x244 SWAP1 NUMBER SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26B PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x294 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2A9 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA2C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x341 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2C8 JUMPI PUSH2 0x2C8 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2E6 JUMPI PUSH2 0x2E6 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x312 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x32D JUMPI PUSH2 0x32D PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x2AD JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x422 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x46C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x49C PUSH1 0x0 PUSH2 0x9DC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0x4C1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x4DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EA CALLER PUSH2 0x828 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST DUP2 PUSH1 0x8 SLOAD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x511 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x571 SWAP1 DUP5 SWAP1 PUSH2 0xC76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x5A8 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x5BB PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0x5DE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x62E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x657 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3A4C7FB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x6F1 SWAP1 DUP5 PUSH2 0xCE0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xA9059CBB SWAP5 PUSH2 0x778 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 ADD PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x81B SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x946 JUMPI PUSH1 0x5 SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x863 JUMPI PUSH2 0x863 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88B SWAP3 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST GT ISZERO PUSH2 0x93E JUMPI DUP2 PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8EA JUMPI PUSH2 0x8EA PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x93E JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x921 JUMPI PUSH2 0x921 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x82D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x96A SWAP1 DUP3 PUSH2 0xD1B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x9AC DUP2 PUSH2 0x9DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x49C JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xA67 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA67 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xA73 SWAP3 SWAP2 POP PUSH2 0xA77 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACD JUMPI PUSH2 0xACD PUSH2 0xA8C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xAFA JUMPI PUSH2 0xAFA PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xB37 JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB1F JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB91 DUP9 DUP3 DUP10 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBBA DUP9 DUP3 DUP10 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBFF JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xBE1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC89 PUSH2 0xC60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC89 PUSH2 0xC60 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 ADDRESS TIMESTAMP PUSH12 0x5F022A2E5F2E2FCAA5787CBC CALLCODE 0xD8 PUSH11 0x5A4F0BAC593351C521B58F 0x24 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
              "sourceMap": "506:5778:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5612:92;5686:11;;5612:92;;;160:25:11;;;148:2;133:18;5612:92:7;;;;;;;;1636:1138;;;;;;:::i;:::-;;:::i;:::-;;6178:104;6255:20;;6178:104;;5887:108;;;:::i;:::-;;;;;;;:::i;2293:101:0:-;;;:::i;4075:760:7:-;;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;;;;;:::i;6045:83:7:-;6115:6;;-1:-1:-1;;;;;6115:6:7;6045:83;;5754;5823:7;;5754:83;;773:32;;;;;-1:-1:-1;;;;;773:32:7;;;2824:1201;;;;;;:::i;:::-;;:::i;737:30::-;;;;;-1:-1:-1;;;;;737:30:7;;;4885:512;;;;;;:::i;:::-;;:::i;5447:115::-;;;;;;:::i;:::-;-1:-1:-1;;;;;5535:20:7;5509:7;5535:20;;;:14;:20;;;;;;;5447:115;2543:215:0;;;;;;:::i;:::-;;:::i;1636:1138:7:-;1531:13:0;:11;:13::i;:::-;1864:11:7::1;::::0;-1:-1:-1;;;1864:11:7;::::1;;;1860:71;;;1898:22;;-1:-1:-1::0;;;1898:22:7::1;;;;;;;;;;;1860:71;1979:11;:18:::0;;-1:-1:-1;;;;1979:18:7::1;-1:-1:-1::0;;;1979:18:7::1;::::0;;1993:4:::1;2030:24:::0;;;2084:16:::1;::::0;:12:::1;::::0;:16:::1;:::i;:::-;2064:17;:36:::0;2110:20:::1;:44:::0;;;2197:7:::1;:18:::0;;;2288:14;;2274:29:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2274:29:7::1;-1:-1:-1::0;2257:46:7;;::::1;::::0;:14:::1;::::0;:46:::1;::::0;;::::1;::::0;::::1;:::i;:::-;;2318:9;2313:164;2337:7;:14;2333:1;:18;2313:164;;;2403:16;2420:1;2403:19;;;;;;;;:::i;:::-;;;;;;;2372:16;:28;2389:7;2397:1;2389:10;;;;;;;;:::i;:::-;;;;;;;2372:28;;;;;;;;;;;:50;;;;2456:7;2464:1;2456:10;;;;;;;;:::i;:::-;;;;;;;2436:14;2451:1;2436:17;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;:30:::0;2353:3:::1;;2313:164;;;-1:-1:-1::0;2535:16:7::1;::::0;;2629:7:::1;::::0;2535:111:::1;::::0;-1:-1:-1;;;2535:111:7;;2578:10:::1;2535:111:::0;;::::1;4626:51:11::0;;;;2610:4:7::1;4693:18:11::0;;;4686:60;4762:18;;;4755:34;2520:12:7::1;::::0;-1:-1:-1;;;;;2535:16:7;;::::1;::::0;:29:::1;::::0;4599:18:11;;2535:111:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2520:126;;2661:7;2656:62;;2691:16;;-1:-1:-1::0;;;2691:16:7::1;;;;;;;;;;;2656:62;2733:34;2747:10;;2759:7;;2733:34;;;;;;5256:25:11::0;;;5312:2;5297:18;;5290:34;5244:2;5229:18;;5082:248;2733:34:7::1;;;;;;;;1850:924;1636:1138:::0;;;;;:::o;5887:108::-;5939:16;5974:14;5967:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5887:108;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4075:760:7:-;4156:6;;-1:-1:-1;;;;;4156:6:7;:20;;;:36;;-1:-1:-1;4181:11:7;;-1:-1:-1;;;4181:11:7;;;;4180:12;4156:36;4152:91;;;4215:17;;-1:-1:-1;;;4215:17:7;;;;;;;;;;;4152:91;4311:25;4339:31;4359:10;4339:19;:31::i;:::-;4311:59;;4384:17;4405:1;4384:22;4380:78;;4429:18;;-1:-1:-1;;;4429:18:7;;;;;;;;;;;4380:78;4534:11;;4504:166;4577:17;4563:11;;:31;;;;:::i;:::-;4559:1;:35;4504:166;;;4636:10;;;;:7;:10;;;;;:23;;-1:-1:-1;;;;;;4636:23:7;4649:10;4636:23;;;;4608:3;4504:166;;;-1:-1:-1;4694:10:7;4679:26;;;;:14;:26;;;;;:46;;;4735:11;:32;;4708:17;;4679:26;4735:32;;4708:17;;4735:32;:::i;:::-;;;;-1:-1:-1;;4783:45:7;;;;;;4798:10;;4810:17;;4783:45;:::i;:::-;;;;;;;;4106:729;4075:760::o;2824:1201::-;1531:13:0;:11;:13::i;:::-;2928:6:7::1;::::0;-1:-1:-1;;;;;2928:6:7::1;:20:::0;::::1;::::0;:36:::1;;-1:-1:-1::0;2953:11:7::1;::::0;-1:-1:-1;;;2953:11:7;::::1;;;2952:12;2928:36;2924:91;;;2987:17;;-1:-1:-1::0;;;2987:17:7::1;;;;;;;;;;;2924:91;3110:12;3090:17;;:32;3086:243;;;3169:17;;3145:42;;-1:-1:-1::0;;;3145:42:7::1;;;;;;160:25:11::0;;148:2;133:18;;14:177;3145:42:7::1;;;;;;;;3086:243;3231:15;3208:20;;:38;3204:125;;;3297:20;;3269:49;;-1:-1:-1::0;;;3269:49:7::1;;;;;;160:25:11::0;;148:2;133:18;;14:177;3204:125:7::1;3437:10;::::0;3397:35:::1;::::0;-1:-1:-1;;3414:10:7::1;5791:2:11::0;5787:15;5783:53;3397:35:7::1;::::0;::::1;5771:66:11::0;5853:12;;;5846:28;;;5890:12;;3397:35:7::1;;;;;;;;;;;;3387:46;;;;;;:60;3383:111;;3470:13;;-1:-1:-1::0;;;3470:13:7::1;;;;;;;;;;;3383:111;3628:17;::::0;3594:53:::1;::::0;;::::1;::::0;;::::1;6070:19:11::0;;;3618:28:7;::::1;6105:12:11::0;;;6098:28;3594:53:7;;;;;;;;;6142:12:11;;;;3594:53:7;;;3584:64;;;::::1;::::0;3694:11:::1;::::0;3677:7:::1;::::0;-1:-1:-1;;3685:20:7::1;::::0;3584:64;3685:20:::1;:::i;:::-;3677:29:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3677:29:7;;3668:6:::1;:38:::0;;-1:-1:-1;;;;;;3668:38:7::1;-1:-1:-1::0;;;;;3677:29:7;;::::1;3668:38:::0;;::::1;::::0;;3716:74:::1;;3763:16;;-1:-1:-1::0;;;3763:16:7::1;;;;;;;;;;;3716:74;3859:16;::::0;;3886:6:::1;::::0;3894:7:::1;::::0;3852:50:::1;::::0;-1:-1:-1;;;3852:50:7;;3837:12:::1;::::0;-1:-1:-1;;;;;3859:16:7;;::::1;::::0;3852:33:::1;::::0;:50:::1;::::0;3886:6;::::1;::::0;3894:7;;3852:50:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3837:65;;3917:7;3912:62;;3947:16;;-1:-1:-1::0;;;3947:16:7::1;;;;;;;;;;;3912:62;4002:6;::::0;4010:7:::1;::::0;3989:29:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4002:6:7;;::::1;::::0;3989:29:::1;:::i;:::-;;;;;;;;2878:1147;;2824:1201:::0;:::o;4885:512::-;4949:7;;;5007:326;5031:14;:21;5027:25;;5007:326;;;5077:16;;5110:14;:17;;5131:1;;-1:-1:-1;;;;;5077:16:7;;:26;;5104:4;;5110:14;5125:1;;5110:17;;;;;;:::i;:::-;;;;;;;;;5077:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;5073:250;;;5194:17;5156:16;:35;5173:14;5188:1;5173:17;;;;;;;;:::i;:::-;;;;;;;;;5156:35;;;;;;;;;;;;:55;5152:157;;;5255:16;:35;5272:14;5287:1;5272:17;;;;;;;;:::i;:::-;;;;;;;;;5255:35;;;;;;;;;;;;5235:55;;5152:157;5054:3;;5007:326;;;-1:-1:-1;;;;;;5370:20:7;;;;;;:14;:20;;;;;;5350:40;;:17;:40;:::i;:::-;5343:47;4885:512;-1:-1:-1;;;4885:512:7:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;735:10:5;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2912:187::-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:127:11;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:954;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;493:6;480:20;523:18;515:6;512:30;509:56;;;545:18;;:::i;:::-;591:6;588:1;584:14;627:2;621:9;690:2;686:7;681:2;677;673:11;669:25;661:6;657:38;761:6;749:10;746:22;725:18;713:10;710:34;707:62;704:88;;;772:18;;:::i;:::-;808:2;801:22;858;;;908:4;940:15;;;936:26;;;858:22;896:17;;974:15;;;971:35;;;1002:1;999;992:12;971:35;1038:4;1030:6;1026:17;1015:28;;1052:200;1068:6;1063:3;1060:15;1052:200;;;1160:17;;1190:18;;1237:4;1085:14;;;;1228;1052:200;;;-1:-1:-1;1270:6:11;328:954;-1:-1:-1;;;;;328:954:11:o;1287:946::-;1432:6;1440;1448;1456;1464;1517:3;1505:9;1496:7;1492:23;1488:33;1485:53;;;1534:1;1531;1524:12;1485:53;1579:23;;;-1:-1:-1;1699:2:11;1684:18;;1671:32;;-1:-1:-1;1802:2:11;1787:18;;1774:32;;-1:-1:-1;1883:2:11;1868:18;;1855:32;1910:18;1899:30;;1896:50;;;1942:1;1939;1932:12;1896:50;1965:61;2018:7;2009:6;1998:9;1994:22;1965:61;:::i;:::-;1955:71;;;2079:3;2068:9;2064:19;2051:33;2109:18;2099:8;2096:32;2093:52;;;2141:1;2138;2131:12;2093:52;2164:63;2219:7;2208:8;2197:9;2193:24;2164:63;:::i;:::-;2154:73;;;1287:946;;;;;;;;:::o;2238:611::-;2428:2;2440:21;;;2510:13;;2413:18;;;2532:22;;;2380:4;;2611:15;;;2585:2;2570:18;;;2380:4;2654:169;2668:6;2665:1;2662:13;2654:169;;;2729:13;;2717:26;;2772:2;2798:15;;;;2763:12;;;;2690:1;2683:9;2654:169;;;-1:-1:-1;2840:3:11;;2238:611;-1:-1:-1;;;;;2238:611:11:o;2854:203::-;-1:-1:-1;;;;;3018:32:11;;;;3000:51;;2988:2;2973:18;;2854:203::o;3286:226::-;3345:6;3398:2;3386:9;3377:7;3373:23;3369:32;3366:52;;;3414:1;3411;3404:12;3366:52;-1:-1:-1;3459:23:11;;3286:226;-1:-1:-1;3286:226:11:o;3739:286::-;3798:6;3851:2;3839:9;3830:7;3826:23;3822:32;3819:52;;;3867:1;3864;3857:12;3819:52;3893:23;;-1:-1:-1;;;;;3945:31:11;;3935:42;;3925:70;;3991:1;3988;3981:12;4030:127;4091:10;4086:3;4082:20;4079:1;4072:31;4122:4;4119:1;4112:15;4146:4;4143:1;4136:15;4162:125;4227:9;;;4248:10;;;4245:36;;;4261:18;;:::i;:::-;4162:125;;;;:::o;4292:127::-;4353:10;4348:3;4344:20;4341:1;4334:31;4384:4;4381:1;4374:15;4408:4;4405:1;4398:15;4800:277;4867:6;4920:2;4908:9;4899:7;4895:23;4891:32;4888:52;;;4936:1;4933;4926:12;4888:52;4968:9;4962:16;5021:5;5014:13;5007:21;5000:5;4997:32;4987:60;;5043:1;5040;5033:12;5335:274;-1:-1:-1;;;;;5527:32:11;;;;5509:51;;5591:2;5576:18;;5569:34;5497:2;5482:18;;5335:274::o;6165:209::-;6197:1;6223;6213:132;;6267:10;6262:3;6258:20;6255:1;6248:31;6302:4;6299:1;6292:15;6330:4;6327:1;6320:15;6213:132;-1:-1:-1;6359:9:11;;6165:209::o;6379:184::-;6449:6;6502:2;6490:9;6481:7;6477:23;6473:32;6470:52;;;6518:1;6515;6508:12;6470:52;-1:-1:-1;6541:16:11;;6379:184;-1:-1:-1;6379:184:11:o;6568:128::-;6635:9;;;6656:11;;;6653:37;;;6670:18;;:::i"
            },
            "methodIdentifiers": {
              "claimTickets()": "81fe4c61",
              "getClaimableTickets(address)": "d9f483f8",
              "getClaimedTickets(address)": "e8a8ee28",
              "getEligibleBadges()": "4705ab24",
              "getJackpot()": "9329066c",
              "getRevealedAfter()": "4639545f",
              "getTotalTickets()": "06e8337f",
              "getWinner()": "8e7ea5b2",
              "initialize(bytes32,uint256,uint256,uint256[],uint256[])": "31e54a2e",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "revealWinner(bytes32)": "a9a86f4d",
              "superchainBadges()": "a94bd919",
              "superchainPoints()": "b2ab4ab7",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_superchainPoints\",\"type\":\"address\"},{\"internalType\":\"contract IERC1155\",\"name\":\"_superchainBadges\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeBlock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTicketsToClaim\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RaffleAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeedAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sealedSeed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketsClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimableTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimedTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEligibleBadges\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getJackpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevealedAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_sealedSeed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_revealAfterTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_jackpot\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_badges\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_badgeAllocation\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_seed\",\"type\":\"bytes32\"}],\"name\":\"revealWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainBadges\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainPoints\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of points to be distributed to the raffle winner\",\"sealedSeed\":\"The seed used to generate the raffle\"}},\"RaffleWinner(address,uint256)\":{\"params\":{\"amount\":\"The amount of points distributed to the raffle winner\",\"winner\":\"The address of the raffle winner\"}},\"TicketsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The amount of points claimed\",\"claimer\":\"The address of the claimer\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_initialOwner\":\"The initial owner of the contract\",\"_superchainBadges\":\"The address of the SuperchainBadges contract\",\"_superchainPoints\":\"The address of the SuperchainPoints contract\"}},\"getClaimableTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"getClaimedTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"initialize(bytes32,uint256,uint256,uint256[],uint256[])\":{\"params\":{\"_amount\":\"The amount of points to be distributed to the raffle winner\",\"_badgeAllocation\":\"The number of tickets allocated to each badge\",\"_badges\":\"The badges that are eligible to participate in the raffle\",\"_sealedSeed\":\"The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revealWinner(bytes32)\":{\"params\":{\"_seed\":\"The seed used to generate the raffle\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SuperchainPointsRaffle\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotRevealBeforeBlock(uint256)\":[{\"notice\":\"Random pattern requires seed to be revealed in a future block\"}],\"CannotRevealBeforeTimestamp(uint256)\":[{\"notice\":\"UX requires reveal after timestamp\"}],\"InvalidSeed()\":[{\"notice\":\"Error thrown when the seed doesn't match the sealed seed\"}],\"NoOngoingRaffle()\":[{\"notice\":\"Error thrown when the raffle is not started\"}],\"NoTicketsToClaim()\":[{\"notice\":\"Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\"}],\"RaffleAlreadyStarted()\":[{\"notice\":\"Error thrown when the raffle is already started\"}],\"SeedAlreadyUsed()\":[{\"notice\":\"Error thrown when the seed has already been used\"}],\"TicketNotFound()\":[{\"notice\":\"Error thrown when the ticket is not found\"}],\"TransferFailed()\":[{\"notice\":\"Error thrown when points transfer fails\"}]},\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"notice\":\"Event emitted when a raffle is started\"},\"RaffleWinner(address,uint256)\":{\"notice\":\"Event emitted when a raffle is finished\"},\"TicketsClaimed(address,uint256)\":{\"notice\":\"Event emitted when tickets are claimed\"}},\"kind\":\"user\",\"methods\":{\"claimTickets()\":{\"notice\":\"Claim tickets to participate in raffle\"},\"getClaimableTickets(address)\":{\"notice\":\"Returns the number of tickets that can be claimed\"},\"getClaimedTickets(address)\":{\"notice\":\"Returns the number of tickets already claimed\"},\"getEligibleBadges()\":{\"notice\":\"Returns the badges that are eligible to participate in the raffle\"},\"getJackpot()\":{\"notice\":\"Returns the amount of points that are distributed to the raffle winner\"},\"getRevealedAfter()\":{\"notice\":\"Returns the timestamp at which the seed will be revealed\"},\"getTotalTickets()\":{\"notice\":\"Returns the total number of tickets that can be claimed\"},\"getWinner()\":{\"notice\":\"Returns the address of the raffle winner\"},\"initialize(bytes32,uint256,uint256,uint256[],uint256[])\":{\"notice\":\"Starts the raffle\"},\"revealWinner(bytes32)\":{\"notice\":\"Reveals the raffle winner and transfers the points\"}},\"notice\":\"A raffle contract using https://fravoll.github.io/solidity-patterns/randomness.html pattern for randomness\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperchainPointsRaffle.sol\":\"SuperchainPointsRaffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x1528f3ef49ef2750b428564df007feb2d5c7a792bf79c6d125409c96322a4c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://663f59a9b1e3b1d831edeeb83590e8d9582d560c603e91327372502c64534bd6\",\"dweb:/ipfs/QmeGBrXcnomfBriPJEWXwSs1t2j9C4H7AhjuZVWHknSd6A\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/SuperchainPointsRaffle.sol\":{\"keccak256\":\"0xfcd34d06c7e562642b1ff146aebe64369b4b16fc4c6797aa1153d7e72daa39ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e767fba52ca3b1da232570577d71e0f85a4d75ff903ab41aff5cf36a5ddee7e\",\"dweb:/ipfs/QmV1K6SJZo1kZYHYWYMhH9nKAT93v1cWKCDF2uhmt5e8X6\"]},\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x4b4d2b1db4dd40faa591539a8c2885a82f262cd39e98a92204b180c5bed79119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c4999aa3e1ef19a2aba063d4d78b309425b4352371833da467384c21c3cc36\",\"dweb:/ipfs/QmWMrSXY8Q5NtSsHtd11dmXogrgGeTFpoH4SrsyAckbMXR\"]}},\"version\":1}"
        }
      },
      "contracts/SuperchainPointsRaffleFactory.sol": {
        "SuperchainPointsRaffleFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_initialOwner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_superchainPoints",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC1155",
                  "name": "_superchainBadges",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "OngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "raffle",
                  "type": "address"
                }
              ],
              "name": "RaffleCreated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "createRaffle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "currentRaffle",
              "outputs": [
                {
                  "internalType": "contract ISuperchainPointsRaffle",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainBadges",
              "outputs": [
                {
                  "internalType": "contract IERC1155",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainPoints",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_948": {
                  "entryPoint": null,
                  "id": 948,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 154,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory": {
                  "entryPoint": 258,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 234,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:909:11",
                    "nodeType": "YulBlock",
                    "src": "0:909:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "59:86:11",
                          "nodeType": "YulBlock",
                          "src": "59:86:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "123:16:11",
                                "nodeType": "YulBlock",
                                "src": "123:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "132:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "132:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "135:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "135:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "125:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:6:11"
                                      },
                                      "nativeSrc": "125:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "125:12:11"
                                    },
                                    "nativeSrc": "125:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "125:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "82:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "93:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "108:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "108:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "113:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "113:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "104:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "104:3:11"
                                                },
                                                "nativeSrc": "104:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "104:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "117:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "117:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "100:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "100:3:11"
                                            },
                                            "nativeSrc": "100:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "100:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "89:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:11"
                                        },
                                        "nativeSrc": "89:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "79:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:11"
                                    },
                                    "nativeSrc": "79:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "72:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:11"
                                },
                                "nativeSrc": "72:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "72:50:11"
                              },
                              "nativeSrc": "69:70:11",
                              "nodeType": "YulIf",
                              "src": "69:70:11"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nativeSrc": "14:131:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "48:5:11",
                            "nodeType": "YulTypedName",
                            "src": "48:5:11",
                            "type": ""
                          }
                        ],
                        "src": "14:131:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "295:404:11",
                          "nodeType": "YulBlock",
                          "src": "295:404:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "341:16:11",
                                "nodeType": "YulBlock",
                                "src": "341:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "350:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "350:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "353:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "353:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "343:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "343:6:11"
                                      },
                                      "nativeSrc": "343:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "343:12:11"
                                    },
                                    "nativeSrc": "343:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "343:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "316:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "316:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "325:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "325:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "312:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "312:3:11"
                                    },
                                    "nativeSrc": "312:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "312:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "337:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "337:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "308:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:3:11"
                                },
                                "nativeSrc": "308:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "308:32:11"
                              },
                              "nativeSrc": "305:52:11",
                              "nodeType": "YulIf",
                              "src": "305:52:11"
                            },
                            {
                              "nativeSrc": "366:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "366:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "385:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "385:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "379:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:5:11"
                                },
                                "nativeSrc": "379:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "379:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "370:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "370:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "429:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "429:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "404:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:24:11"
                                },
                                "nativeSrc": "404:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "404:31:11"
                              },
                              "nativeSrc": "404:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "404:31:11"
                            },
                            {
                              "nativeSrc": "444:15:11",
                              "nodeType": "YulAssignment",
                              "src": "444:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "454:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "454:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "444:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "468:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "468:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "493:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "493:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "504:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "504:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "489:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:3:11"
                                    },
                                    "nativeSrc": "489:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "483:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "483:5:11"
                                },
                                "nativeSrc": "483:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "483:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "472:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "472:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "542:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "542:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "517:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "517:24:11"
                                },
                                "nativeSrc": "517:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "517:33:11"
                              },
                              "nativeSrc": "517:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "517:33:11"
                            },
                            {
                              "nativeSrc": "559:17:11",
                              "nodeType": "YulAssignment",
                              "src": "559:17:11",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "569:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "569:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "559:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "559:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "585:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "585:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "610:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "610:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "621:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "621:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "606:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "606:3:11"
                                    },
                                    "nativeSrc": "606:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "606:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "600:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "600:5:11"
                                },
                                "nativeSrc": "600:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "600:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "589:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "589:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nativeSrc": "659:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "659:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "634:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "634:24:11"
                                },
                                "nativeSrc": "634:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "634:33:11"
                              },
                              "nativeSrc": "634:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "634:33:11"
                            },
                            {
                              "nativeSrc": "676:17:11",
                              "nodeType": "YulAssignment",
                              "src": "676:17:11",
                              "value": {
                                "name": "value_2",
                                "nativeSrc": "686:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "686:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "676:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory",
                        "nativeSrc": "150:549:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "245:9:11",
                            "nodeType": "YulTypedName",
                            "src": "245:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "256:7:11",
                            "nodeType": "YulTypedName",
                            "src": "256:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "268:6:11",
                            "nodeType": "YulTypedName",
                            "src": "268:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "276:6:11",
                            "nodeType": "YulTypedName",
                            "src": "276:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "284:6:11",
                            "nodeType": "YulTypedName",
                            "src": "284:6:11",
                            "type": ""
                          }
                        ],
                        "src": "150:549:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "805:102:11",
                          "nodeType": "YulBlock",
                          "src": "805:102:11",
                          "statements": [
                            {
                              "nativeSrc": "815:26:11",
                              "nodeType": "YulAssignment",
                              "src": "815:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "827:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "838:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "838:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "823:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "823:3:11"
                                },
                                "nativeSrc": "823:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "823:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "815:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "857:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "872:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "872:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "888:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "888:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "893:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "893:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "884:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "884:3:11"
                                            },
                                            "nativeSrc": "884:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "884:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "897:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "897:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "880:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "880:3:11"
                                        },
                                        "nativeSrc": "880:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "880:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "868:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "868:3:11"
                                    },
                                    "nativeSrc": "868:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "868:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "850:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "850:6:11"
                                },
                                "nativeSrc": "850:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "850:51:11"
                              },
                              "nativeSrc": "850:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "850:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "704:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "774:9:11",
                            "nodeType": "YulTypedName",
                            "src": "774:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "785:6:11",
                            "nodeType": "YulTypedName",
                            "src": "785:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "796:4:11",
                            "nodeType": "YulTypedName",
                            "src": "796:4:11",
                            "type": ""
                          }
                        ],
                        "src": "704:203:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x142B CODESIZE SUB DUP1 PUSH2 0x142B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x102 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x9A JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x14F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x122 DUP2 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x133 DUP2 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x144 DUP2 PUSH2 0xEA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x12CD DUP1 PUSH2 0x15E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x485AC2A7 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA8527CBE EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xFB PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x189 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x473F52D9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8E7EA5B2 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC7AAE87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x1D5 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x54AD4CC1960F9B16B4A7FD9F5EE7C05B4DE5672CB94BC1DBAD3DE1ED291C248B SWAP2 PUSH2 0x25F SWAP2 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x27B PUSH1 0x0 PUSH2 0x2F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x285 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x2F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27B JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEDF DUP1 PUSH2 0x3B9 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x394 DUP2 PUSH2 0x362 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x394 DUP2 PUSH2 0x362 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEDF CODESIZE SUB DUP1 PUSH2 0xEDF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x4C SWAP2 PUSH2 0x11F JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84 DUP2 PUSH2 0xB7 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x16C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x13F DUP2 PUSH2 0x107 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x150 DUP2 PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x161 DUP2 PUSH2 0x107 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xD64 DUP1 PUSH2 0x17B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E7EA5B2 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x9329066C EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xE8A8EE28 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x31E54A2E EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4639545F EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xDE JUMP JUMPDEST PUSH2 0x116 PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x104 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x140 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x140 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP6 DUP2 SSTORE PUSH2 0x244 SWAP1 NUMBER SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26B PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x294 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2A9 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA2C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x341 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2C8 JUMPI PUSH2 0x2C8 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2E6 JUMPI PUSH2 0x2E6 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x312 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x32D JUMPI PUSH2 0x32D PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x2AD JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x422 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x46C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x49C PUSH1 0x0 PUSH2 0x9DC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0x4C1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x4DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EA CALLER PUSH2 0x828 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST DUP2 PUSH1 0x8 SLOAD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x511 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x571 SWAP1 DUP5 SWAP1 PUSH2 0xC76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x5A8 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x5BB PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0x5DE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x62E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x657 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3A4C7FB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x6F1 SWAP1 DUP5 PUSH2 0xCE0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xA9059CBB SWAP5 PUSH2 0x778 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 ADD PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x81B SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x946 JUMPI PUSH1 0x5 SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x863 JUMPI PUSH2 0x863 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88B SWAP3 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST GT ISZERO PUSH2 0x93E JUMPI DUP2 PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8EA JUMPI PUSH2 0x8EA PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x93E JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x921 JUMPI PUSH2 0x921 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x82D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x96A SWAP1 DUP3 PUSH2 0xD1B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x9AC DUP2 PUSH2 0x9DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x49C JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xA67 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA67 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xA73 SWAP3 SWAP2 POP PUSH2 0xA77 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACD JUMPI PUSH2 0xACD PUSH2 0xA8C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xAFA JUMPI PUSH2 0xAFA PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xB37 JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB1F JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB91 DUP9 DUP3 DUP10 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBBA DUP9 DUP3 DUP10 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBFF JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xBE1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC89 PUSH2 0xC60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC89 PUSH2 0xC60 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 ADDRESS TIMESTAMP PUSH12 0x5F022A2E5F2E2FCAA5787CBC CALLCODE 0xD8 PUSH11 0x5A4F0BAC593351C521B58F 0x24 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNCONTRACT 0x16 EXTDELEGATECALL 0x27 DUP13 STOP DUP4 0xCA 0xC8 0xAF 0xE2 CALLDATACOPY NOT 0xD5 CALLDATASIZE GASLIMIT PUSH22 0xC135BF4E44A9AAC8336993520C84DC64736F6C634300 ADDMOD SAR STOP CALLER ",
              "sourceMap": "665:1069:8:-:0;;;1098:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1225:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;850:51:11;823:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1250:16:8::1;:36:::0;;-1:-1:-1;;;;;1250:36:8;;::::1;-1:-1:-1::0;;;;;;1250:36:8;;::::1;;::::0;;;1296:16:::1;:36:::0;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;665:1069:8;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:131:11:-;-1:-1:-1;;;;;89:31:11;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:549::-;268:6;276;284;337:2;325:9;316:7;312:23;308:32;305:52;;;353:1;350;343:12;305:52;385:9;379:16;404:31;429:5;404:31;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:33:11;483:25;517:33;:::i;:::-;621:2;606:18;;600:25;569:7;;-1:-1:-1;634:33:11;600:25;634:33;:::i;:::-;686:7;676:17;;;150:549;;;;;:::o;704:203::-;665:1069:8;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_84": {
                  "entryPoint": 708,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_368": {
                  "entryPoint": null,
                  "id": 368,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 753,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@createRaffle_995": {
                  "entryPoint": 243,
                  "id": 995,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@currentRaffle_924": {
                  "entryPoint": null,
                  "id": 924,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@renounceOwnership_98": {
                  "entryPoint": 617,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainBadges_921": {
                  "entryPoint": null,
                  "id": 921,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainPoints_918": {
                  "entryPoint": null,
                  "id": 918,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_126": {
                  "entryPoint": 637,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 887,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 923,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 846,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_contract$_IERC20_$356_t_contract$_IERC1155_$278__to_t_address_t_address_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_ISuperchainPointsRaffle_$1130__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 866,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:1981:11",
                    "nodeType": "YulBlock",
                    "src": "0:1981:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "115:102:11",
                          "nodeType": "YulBlock",
                          "src": "115:102:11",
                          "statements": [
                            {
                              "nativeSrc": "125:26:11",
                              "nodeType": "YulAssignment",
                              "src": "125:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "137:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "148:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "133:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:11"
                                },
                                "nativeSrc": "133:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "125:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "167:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "182:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "182:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "198:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "198:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "203:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "203:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "194:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "194:3:11"
                                            },
                                            "nativeSrc": "194:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "194:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "207:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "207:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "190:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "190:3:11"
                                        },
                                        "nativeSrc": "190:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "190:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "178:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "178:3:11"
                                    },
                                    "nativeSrc": "178:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "178:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "160:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:11"
                                },
                                "nativeSrc": "160:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "160:51:11"
                              },
                              "nativeSrc": "160:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "160:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "14:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "84:9:11",
                            "nodeType": "YulTypedName",
                            "src": "84:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "95:6:11",
                            "nodeType": "YulTypedName",
                            "src": "95:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "106:4:11",
                            "nodeType": "YulTypedName",
                            "src": "106:4:11",
                            "type": ""
                          }
                        ],
                        "src": "14:203:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "355:102:11",
                          "nodeType": "YulBlock",
                          "src": "355:102:11",
                          "statements": [
                            {
                              "nativeSrc": "365:26:11",
                              "nodeType": "YulAssignment",
                              "src": "365:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "377:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "377:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "388:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "388:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "373:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "373:3:11"
                                },
                                "nativeSrc": "373:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "373:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "365:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "365:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "407:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "407:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "422:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "422:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "438:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "438:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "443:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "443:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "434:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "434:3:11"
                                            },
                                            "nativeSrc": "434:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "434:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "447:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "447:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "430:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "430:3:11"
                                        },
                                        "nativeSrc": "430:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "430:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "418:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "418:3:11"
                                    },
                                    "nativeSrc": "418:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "418:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "400:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:6:11"
                                },
                                "nativeSrc": "400:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "400:51:11"
                              },
                              "nativeSrc": "400:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "400:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperchainPointsRaffle_$1130__to_t_address__fromStack_reversed",
                        "nativeSrc": "222:235:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "324:9:11",
                            "nodeType": "YulTypedName",
                            "src": "324:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "335:6:11",
                            "nodeType": "YulTypedName",
                            "src": "335:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "346:4:11",
                            "nodeType": "YulTypedName",
                            "src": "346:4:11",
                            "type": ""
                          }
                        ],
                        "src": "222:235:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "579:102:11",
                          "nodeType": "YulBlock",
                          "src": "579:102:11",
                          "statements": [
                            {
                              "nativeSrc": "589:26:11",
                              "nodeType": "YulAssignment",
                              "src": "589:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "601:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "601:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "612:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "612:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "597:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "597:3:11"
                                },
                                "nativeSrc": "597:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "597:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "589:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "589:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "631:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "631:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "646:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "646:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "662:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "662:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "667:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "667:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "658:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "658:3:11"
                                            },
                                            "nativeSrc": "658:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "658:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "671:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "671:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "654:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "654:3:11"
                                        },
                                        "nativeSrc": "654:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "654:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "642:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "642:3:11"
                                    },
                                    "nativeSrc": "642:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "642:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "624:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:6:11"
                                },
                                "nativeSrc": "624:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "624:51:11"
                              },
                              "nativeSrc": "624:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "624:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed",
                        "nativeSrc": "462:219:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "548:9:11",
                            "nodeType": "YulTypedName",
                            "src": "548:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "559:6:11",
                            "nodeType": "YulTypedName",
                            "src": "559:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "570:4:11",
                            "nodeType": "YulTypedName",
                            "src": "570:4:11",
                            "type": ""
                          }
                        ],
                        "src": "462:219:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "801:102:11",
                          "nodeType": "YulBlock",
                          "src": "801:102:11",
                          "statements": [
                            {
                              "nativeSrc": "811:26:11",
                              "nodeType": "YulAssignment",
                              "src": "811:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "823:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "823:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "834:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "834:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "819:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "819:3:11"
                                },
                                "nativeSrc": "819:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "819:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "811:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "811:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "853:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "853:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "868:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "868:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "884:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "884:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "889:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "889:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "880:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "880:3:11"
                                            },
                                            "nativeSrc": "880:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "880:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "893:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "893:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "876:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "876:3:11"
                                        },
                                        "nativeSrc": "876:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "876:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "864:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "864:3:11"
                                    },
                                    "nativeSrc": "864:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "864:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "846:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "846:6:11"
                                },
                                "nativeSrc": "846:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "846:51:11"
                              },
                              "nativeSrc": "846:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "846:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed",
                        "nativeSrc": "686:217:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "770:9:11",
                            "nodeType": "YulTypedName",
                            "src": "770:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "781:6:11",
                            "nodeType": "YulTypedName",
                            "src": "781:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "792:4:11",
                            "nodeType": "YulTypedName",
                            "src": "792:4:11",
                            "type": ""
                          }
                        ],
                        "src": "686:217:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "953:86:11",
                          "nodeType": "YulBlock",
                          "src": "953:86:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1017:16:11",
                                "nodeType": "YulBlock",
                                "src": "1017:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1026:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1026:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1029:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1029:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1019:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1019:6:11"
                                      },
                                      "nativeSrc": "1019:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1019:12:11"
                                    },
                                    "nativeSrc": "1019:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1019:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "976:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "976:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "987:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "987:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1002:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1002:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1007:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1007:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "998:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "998:3:11"
                                                },
                                                "nativeSrc": "998:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "998:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1011:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1011:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "994:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "994:3:11"
                                            },
                                            "nativeSrc": "994:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "994:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "983:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "983:3:11"
                                        },
                                        "nativeSrc": "983:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "983:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "973:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "973:2:11"
                                    },
                                    "nativeSrc": "973:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "973:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "966:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "966:6:11"
                                },
                                "nativeSrc": "966:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "966:50:11"
                              },
                              "nativeSrc": "963:70:11",
                              "nodeType": "YulIf",
                              "src": "963:70:11"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nativeSrc": "908:131:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "942:5:11",
                            "nodeType": "YulTypedName",
                            "src": "942:5:11",
                            "type": ""
                          }
                        ],
                        "src": "908:131:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1114:177:11",
                          "nodeType": "YulBlock",
                          "src": "1114:177:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1160:16:11",
                                "nodeType": "YulBlock",
                                "src": "1160:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1169:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1169:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1172:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1172:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1162:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1162:6:11"
                                      },
                                      "nativeSrc": "1162:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1162:12:11"
                                    },
                                    "nativeSrc": "1162:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1162:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1135:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1135:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1144:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1144:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1131:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1131:3:11"
                                    },
                                    "nativeSrc": "1131:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1131:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1156:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1156:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1127:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1127:3:11"
                                },
                                "nativeSrc": "1127:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1127:32:11"
                              },
                              "nativeSrc": "1124:52:11",
                              "nodeType": "YulIf",
                              "src": "1124:52:11"
                            },
                            {
                              "nativeSrc": "1185:36:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1185:36:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1211:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1211:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1198:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1198:12:11"
                                },
                                "nativeSrc": "1198:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1198:23:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1189:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1189:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "1255:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1255:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "1230:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1230:24:11"
                                },
                                "nativeSrc": "1230:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1230:31:11"
                              },
                              "nativeSrc": "1230:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1230:31:11"
                            },
                            {
                              "nativeSrc": "1270:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1270:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1280:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "1280:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1270:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1270:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "1044:247:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1080:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1080:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1091:7:11",
                            "nodeType": "YulTypedName",
                            "src": "1091:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1103:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1103:6:11",
                            "type": ""
                          }
                        ],
                        "src": "1044:247:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1377:170:11",
                          "nodeType": "YulBlock",
                          "src": "1377:170:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1423:16:11",
                                "nodeType": "YulBlock",
                                "src": "1423:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1432:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1432:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1435:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1435:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1425:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1425:6:11"
                                      },
                                      "nativeSrc": "1425:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1425:12:11"
                                    },
                                    "nativeSrc": "1425:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1425:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1398:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1398:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1407:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1407:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1394:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1394:3:11"
                                    },
                                    "nativeSrc": "1394:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1394:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1419:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1419:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1390:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1390:3:11"
                                },
                                "nativeSrc": "1390:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1390:32:11"
                              },
                              "nativeSrc": "1387:52:11",
                              "nodeType": "YulIf",
                              "src": "1387:52:11"
                            },
                            {
                              "nativeSrc": "1448:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1448:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1467:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1467:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1461:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1461:5:11"
                                },
                                "nativeSrc": "1461:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1461:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1452:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1452:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "1511:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1511:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "1486:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1486:24:11"
                                },
                                "nativeSrc": "1486:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1486:31:11"
                              },
                              "nativeSrc": "1486:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1486:31:11"
                            },
                            {
                              "nativeSrc": "1526:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1526:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1536:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "1536:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1526:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1526:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nativeSrc": "1296:251:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1343:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1343:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1354:7:11",
                            "nodeType": "YulTypedName",
                            "src": "1354:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1366:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1366:6:11",
                            "type": ""
                          }
                        ],
                        "src": "1296:251:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1739:240:11",
                          "nodeType": "YulBlock",
                          "src": "1739:240:11",
                          "statements": [
                            {
                              "nativeSrc": "1749:26:11",
                              "nodeType": "YulAssignment",
                              "src": "1749:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1761:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1761:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1772:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1772:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1757:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1757:3:11"
                                },
                                "nativeSrc": "1757:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1757:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1749:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1749:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1791:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1791:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1806:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1806:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1822:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1822:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1827:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1827:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1818:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1818:3:11"
                                            },
                                            "nativeSrc": "1818:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1818:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1831:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1831:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1814:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1814:3:11"
                                        },
                                        "nativeSrc": "1814:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1814:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1802:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1802:3:11"
                                    },
                                    "nativeSrc": "1802:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1802:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1784:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1784:6:11"
                                },
                                "nativeSrc": "1784:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1784:51:11"
                              },
                              "nativeSrc": "1784:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1784:51:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1855:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1855:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1866:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1866:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1851:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1851:3:11"
                                    },
                                    "nativeSrc": "1851:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1851:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "1875:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1875:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1891:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1891:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1896:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1896:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1887:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1887:3:11"
                                            },
                                            "nativeSrc": "1887:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1887:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1900:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1900:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1883:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1883:3:11"
                                        },
                                        "nativeSrc": "1883:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1883:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1871:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1871:3:11"
                                    },
                                    "nativeSrc": "1871:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1871:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1844:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1844:6:11"
                                },
                                "nativeSrc": "1844:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1844:60:11"
                              },
                              "nativeSrc": "1844:60:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1844:60:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1924:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1924:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1935:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1935:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1920:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1920:3:11"
                                    },
                                    "nativeSrc": "1920:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1920:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nativeSrc": "1944:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1944:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1960:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1960:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1965:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1965:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1956:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1956:3:11"
                                            },
                                            "nativeSrc": "1956:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1956:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1969:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1969:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1952:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1952:3:11"
                                        },
                                        "nativeSrc": "1952:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1952:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1940:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1940:3:11"
                                    },
                                    "nativeSrc": "1940:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1940:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1913:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1913:6:11"
                                },
                                "nativeSrc": "1913:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1913:60:11"
                              },
                              "nativeSrc": "1913:60:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1913:60:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_contract$_IERC20_$356_t_contract$_IERC1155_$278__to_t_address_t_address_t_address__fromStack_reversed",
                        "nativeSrc": "1552:427:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1692:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1692:9:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1703:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1703:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1711:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1711:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1719:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1719:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1730:4:11",
                            "nodeType": "YulTypedName",
                            "src": "1730:4:11",
                            "type": ""
                          }
                        ],
                        "src": "1552:427:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ISuperchainPointsRaffle_$1130__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_contract$_IERC20_$356_t_contract$_IERC1155_$278__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x485AC2A7 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA8527CBE EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xFB PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x189 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x473F52D9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8E7EA5B2 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x39B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC7AAE87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x1D5 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x54AD4CC1960F9B16B4A7FD9F5EE7C05B4DE5672CB94BC1DBAD3DE1ED291C248B SWAP2 PUSH2 0x25F SWAP2 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x27B PUSH1 0x0 PUSH2 0x2F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x285 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x2F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27B JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEDF DUP1 PUSH2 0x3B9 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x394 DUP2 PUSH2 0x362 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x394 DUP2 PUSH2 0x362 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEDF CODESIZE SUB DUP1 PUSH2 0xEDF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x4C SWAP2 PUSH2 0x11F JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84 DUP2 PUSH2 0xB7 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x16C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x13F DUP2 PUSH2 0x107 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x150 DUP2 PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x161 DUP2 PUSH2 0x107 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xD64 DUP1 PUSH2 0x17B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E7EA5B2 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x9329066C EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xE8A8EE28 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x31E54A2E EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x4639545F EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xDE JUMP JUMPDEST PUSH2 0x116 PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x104 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x140 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x140 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x140 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH2 0xDE PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC37 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST PUSH2 0x1F6 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x221 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP6 DUP2 SSTORE PUSH2 0x244 SWAP1 NUMBER SWAP1 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x3 DUP5 SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26B PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x294 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x2A9 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA2C JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x341 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2C8 JUMPI PUSH2 0x2C8 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2E6 JUMPI PUSH2 0x2E6 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x312 JUMPI PUSH2 0x312 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x32D JUMPI PUSH2 0x32D PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x2AD JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x422 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x46C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x492 PUSH2 0x9AF JUMP JUMPDEST PUSH2 0x49C PUSH1 0x0 PUSH2 0x9DC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0x4C1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x4DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EA CALLER PUSH2 0x828 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD JUMPDEST DUP2 PUSH1 0x8 SLOAD PUSH2 0x51F SWAP2 SWAP1 PUSH2 0xC76 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x511 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x571 SWAP1 DUP5 SWAP1 PUSH2 0xC76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x5A8 SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x5BB PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0x5DE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x62E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x657 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3A4C7FB3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x6B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x6F1 SWAP1 DUP5 PUSH2 0xCE0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 PUSH4 0xA9059CBB SWAP5 PUSH2 0x778 SWAP5 SWAP2 AND SWAP3 SWAP1 SWAP2 ADD PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0xCA5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x81B SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x946 JUMPI PUSH1 0x5 SLOAD PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x863 JUMPI PUSH2 0x863 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88B SWAP3 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0xD02 JUMP JUMPDEST GT ISZERO PUSH2 0x93E JUMPI DUP2 PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8EA JUMPI PUSH2 0x8EA PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x93E JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0xB DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x921 JUMPI PUSH2 0x921 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x82D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x96A SWAP1 DUP3 PUSH2 0xD1B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9A3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x9AC DUP2 PUSH2 0x9DC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x49C JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xA67 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA67 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA4C JUMP JUMPDEST POP PUSH2 0xA73 SWAP3 SWAP2 POP PUSH2 0xA77 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA78 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACD JUMPI PUSH2 0xACD PUSH2 0xA8C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xAFA JUMPI PUSH2 0xAFA PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xB37 JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xB1F JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB91 DUP9 DUP3 DUP10 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBBA DUP9 DUP3 DUP10 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBFF JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xBE1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC89 PUSH2 0xC60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC89 PUSH2 0xC60 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 ADDRESS TIMESTAMP PUSH12 0x5F022A2E5F2E2FCAA5787CBC CALLCODE 0xD8 PUSH11 0x5A4F0BAC593351C521B58F 0x24 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNCONTRACT 0x16 EXTDELEGATECALL 0x27 DUP13 STOP DUP4 0xCA 0xC8 0xAF 0xE2 CALLDATACOPY NOT 0xD5 CALLDATASIZE GASLIMIT PUSH22 0xC135BF4E44A9AAC8336993520C84DC64736F6C634300 ADDMOD SAR STOP CALLER ",
              "sourceMap": "665:1069:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:386;;;:::i;:::-;;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;;;;;:::i;:::-;;;;;;;;828:44:8;;;;;-1:-1:-1;;;;;828:44:8;;;789:32;;;;;-1:-1:-1;;;;;789:32:8;;;753:30;;;;;-1:-1:-1;;;;;753:30:8;;;2543:215:0;;;;;;:::i;:::-;;:::i;1345:386:8:-;1531:13:0;:11;:13::i;:::-;1408::8::1;::::0;-1:-1:-1;;;;;1408:13:8::1;1400:36:::0;;::::1;::::0;:79:::1;;-1:-1:-1::0;1440:13:8::1;::::0;:25:::1;::::0;;-1:-1:-1;;;1440:25:8;;;;1477:1:::1;::::0;-1:-1:-1;;;;;1440:13:8::1;::::0;:23:::1;::::0;:25:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:13;:25:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1440:39:8::1;;1400:79;1396:132;;;1502:15;;-1:-1:-1::0;;;1502:15:8::1;;;;;;;;;;;1396:132;1684:7:0::0;1710:6;-1:-1:-1;;;;;1710:6:0;1615:16:8::1;::::0;1645::::1;::::0;1554:117:::1;::::0;-1:-1:-1;;;;;1615:16:8;;::::1;::::0;1645;;::::1;::::0;1554:117:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;1802:32:11;;;1784:51;;1871:32;;;1866:2;1851:18;;1844:60;1940:32;;;1935:2;1920:18;;1913:60;1772:2;1757:18;1554:117:8::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1538:13:8::1;:133:::0;;-1:-1:-1;;;;;;1538:133:8::1;-1:-1:-1::0;;;;;1538:133:8;;;::::1;::::0;;::::1;::::0;;1687:37:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;1345:386::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;735:10:5;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2912:187::-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;:::o;14:203:11:-;-1:-1:-1;;;;;178:32:11;;;;160:51;;148:2;133:18;;14:203::o;908:131::-;-1:-1:-1;;;;;983:31:11;;973:42;;963:70;;1029:1;1026;1019:12;1044:247;1103:6;1156:2;1144:9;1135:7;1131:23;1127:32;1124:52;;;1172:1;1169;1162:12;1124:52;1211:9;1198:23;1230:31;1255:5;1230:31;:::i;:::-;1280:5;1044:247;-1:-1:-1;;;1044:247:11:o;1296:251::-;1366:6;1419:2;1407:9;1398:7;1394:23;1390:32;1387:52;;;1435:1;1432;1425:12;1387:52;1467:9;1461:16;1486:31;1511:5;1486:31;:::i"
            },
            "methodIdentifiers": {
              "createRaffle()": "485ac2a7",
              "currentRaffle()": "a8527cbe",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "superchainBadges()": "a94bd919",
              "superchainPoints()": "b2ab4ab7",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_superchainPoints\",\"type\":\"address\"},{\"internalType\":\"contract IERC1155\",\"name\":\"_superchainBadges\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OngoingRaffle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"raffle\",\"type\":\"address\"}],\"name\":\"RaffleCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRaffle\",\"outputs\":[{\"internalType\":\"contract ISuperchainPointsRaffle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainBadges\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainPoints\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_initialOwner\":\"The initial owner of the contract\",\"_superchainBadges\":\"The address of the SuperchainBadges contract\",\"_superchainPoints\":\"The address of the SuperchainPoints contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SuperchainPointsRaffleFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"OngoingRaffle()\":[{\"notice\":\"Cannot create a raffle if one is already started\"}]},\"events\":{\"RaffleCreated(address)\":{\"notice\":\"Emitted when a raffle is created\"}},\"kind\":\"user\",\"methods\":{\"createRaffle()\":{\"notice\":\"Checks previous raffle state and creates a new raffle\"}},\"notice\":\"Factory for SuperchainPointsRaffle contracts that also acts as a proxy for the current raffle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperchainPointsRaffleFactory.sol\":\"SuperchainPointsRaffleFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x1528f3ef49ef2750b428564df007feb2d5c7a792bf79c6d125409c96322a4c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://663f59a9b1e3b1d831edeeb83590e8d9582d560c603e91327372502c64534bd6\",\"dweb:/ipfs/QmeGBrXcnomfBriPJEWXwSs1t2j9C4H7AhjuZVWHknSd6A\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/SuperchainPointsRaffle.sol\":{\"keccak256\":\"0xfcd34d06c7e562642b1ff146aebe64369b4b16fc4c6797aa1153d7e72daa39ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e767fba52ca3b1da232570577d71e0f85a4d75ff903ab41aff5cf36a5ddee7e\",\"dweb:/ipfs/QmV1K6SJZo1kZYHYWYMhH9nKAT93v1cWKCDF2uhmt5e8X6\"]},\"contracts/SuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0xce675d2e90a5edd25ae5a7b1b3e4b3b3004daba5b69c556e9bd389861522e328\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35fda524a30ca2fe07afe39534f61ab8540a4ac0d7c09f7cd841c60e39423b19\",\"dweb:/ipfs/QmfQexJrKnCugdASsPtRivgX5nqXibVNgePbgMNuXKkUts\"]},\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x4b4d2b1db4dd40faa591539a8c2885a82f262cd39e98a92204b180c5bed79119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c4999aa3e1ef19a2aba063d4d78b309425b4352371833da467384c21c3cc36\",\"dweb:/ipfs/QmWMrSXY8Q5NtSsHtd11dmXogrgGeTFpoH4SrsyAckbMXR\"]},\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ISuperchainPointsRaffle.sol": {
        "ISuperchainPointsRaffle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeBlock",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeTimestamp",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSeed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoOngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoTicketsToClaim",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RaffleAlreadyStarted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SeedAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TicketNotFound",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "sealedSeed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleWinner",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TicketsClaimed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "claimTickets",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimableTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimedTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEligibleBadges",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getJackpot",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRevealedAfter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getWinner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_sealedSeed",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_revealAfterTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badges",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badgeAllocation",
                  "type": "uint256[]"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_seed",
                  "type": "bytes32"
                }
              ],
              "name": "revealWinner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "claimTickets()": "81fe4c61",
              "getClaimableTickets(address)": "d9f483f8",
              "getClaimedTickets(address)": "e8a8ee28",
              "getEligibleBadges()": "4705ab24",
              "getJackpot()": "9329066c",
              "getRevealedAfter()": "4639545f",
              "getTotalTickets()": "06e8337f",
              "getWinner()": "8e7ea5b2",
              "initialize(bytes32,uint256,uint256,uint256[],uint256[])": "31e54a2e",
              "revealWinner(bytes32)": "a9a86f4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeBlock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTicketsToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RaffleAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeedAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sealedSeed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketsClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimableTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimedTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEligibleBadges\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getJackpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRevealedAfter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_sealedSeed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_revealAfterTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_badges\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_badgeAllocation\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_seed\",\"type\":\"bytes32\"}],\"name\":\"revealWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of points to be distributed to the raffle winner\",\"sealedSeed\":\"The seed used to generate the raffle\"}},\"RaffleWinner(address,uint256)\":{\"params\":{\"amount\":\"The amount of points distributed to the raffle winner\",\"winner\":\"The address of the raffle winner\"}},\"TicketsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The amount of points claimed\",\"claimer\":\"The address of the claimer\"}}},\"kind\":\"dev\",\"methods\":{\"getClaimableTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"getClaimedTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"initialize(bytes32,uint256,uint256,uint256[],uint256[])\":{\"params\":{\"_amount\":\"The amount of points to be distributed to the raffle winner\",\"_badgeAllocation\":\"The number of tickets allocated to each badge\",\"_badges\":\"The badges that are eligible to participate in the raffle\",\"_sealedSeed\":\"The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\"}},\"revealWinner(bytes32)\":{\"params\":{\"_seed\":\"The seed used to generate the raffle\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CannotRevealBeforeBlock(uint256)\":[{\"notice\":\"Random pattern requires seed to be revealed in a future block\"}],\"CannotRevealBeforeTimestamp(uint256)\":[{\"notice\":\"UX requires reveal after timestamp\"}],\"InvalidSeed()\":[{\"notice\":\"Error thrown when the seed doesn't match the sealed seed\"}],\"NoOngoingRaffle()\":[{\"notice\":\"Error thrown when the raffle is not started\"}],\"NoTicketsToClaim()\":[{\"notice\":\"Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\"}],\"RaffleAlreadyStarted()\":[{\"notice\":\"Error thrown when the raffle is already started\"}],\"SeedAlreadyUsed()\":[{\"notice\":\"Error thrown when the seed has already been used\"}],\"TicketNotFound()\":[{\"notice\":\"Error thrown when the ticket is not found\"}],\"TransferFailed()\":[{\"notice\":\"Error thrown when points transfer fails\"}]},\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"notice\":\"Event emitted when a raffle is started\"},\"RaffleWinner(address,uint256)\":{\"notice\":\"Event emitted when a raffle is finished\"},\"TicketsClaimed(address,uint256)\":{\"notice\":\"Event emitted when tickets are claimed\"}},\"kind\":\"user\",\"methods\":{\"claimTickets()\":{\"notice\":\"Claim tickets to participate in raffle\"},\"getClaimableTickets(address)\":{\"notice\":\"Returns the number of tickets that can be claimed\"},\"getClaimedTickets(address)\":{\"notice\":\"Returns the number of tickets already claimed\"},\"getEligibleBadges()\":{\"notice\":\"Returns the badges that are eligible to participate in the raffle\"},\"getJackpot()\":{\"notice\":\"Returns the amount of points that are distributed to the raffle winner\"},\"getRevealedAfter()\":{\"notice\":\"Returns the timestamp at which the seed will be revealed\"},\"getTotalTickets()\":{\"notice\":\"Returns the total number of tickets that can be claimed\"},\"getWinner()\":{\"notice\":\"Returns the address of the raffle winner\"},\"initialize(bytes32,uint256,uint256,uint256[],uint256[])\":{\"notice\":\"Starts the raffle\"},\"revealWinner(bytes32)\":{\"notice\":\"Reveals the raffle winner and transfers the points\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":\"ISuperchainPointsRaffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x4b4d2b1db4dd40faa591539a8c2885a82f262cd39e98a92204b180c5bed79119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c4999aa3e1ef19a2aba063d4d78b309425b4352371833da467384c21c3cc36\",\"dweb:/ipfs/QmWMrSXY8Q5NtSsHtd11dmXogrgGeTFpoH4SrsyAckbMXR\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleErrors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeBlock",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeTimestamp",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSeed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoOngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoTicketsToClaim",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RaffleAlreadyStarted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SeedAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TicketNotFound",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeBlock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTicketsToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RaffleAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeedAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"CannotRevealBeforeBlock(uint256)\":[{\"notice\":\"Random pattern requires seed to be revealed in a future block\"}],\"CannotRevealBeforeTimestamp(uint256)\":[{\"notice\":\"UX requires reveal after timestamp\"}],\"InvalidSeed()\":[{\"notice\":\"Error thrown when the seed doesn't match the sealed seed\"}],\"NoOngoingRaffle()\":[{\"notice\":\"Error thrown when the raffle is not started\"}],\"NoTicketsToClaim()\":[{\"notice\":\"Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\"}],\"RaffleAlreadyStarted()\":[{\"notice\":\"Error thrown when the raffle is already started\"}],\"SeedAlreadyUsed()\":[{\"notice\":\"Error thrown when the seed has already been used\"}],\"TicketNotFound()\":[{\"notice\":\"Error thrown when the ticket is not found\"}],\"TransferFailed()\":[{\"notice\":\"Error thrown when points transfer fails\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":\"ISuperchainPointsRaffleErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x4b4d2b1db4dd40faa591539a8c2885a82f262cd39e98a92204b180c5bed79119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c4999aa3e1ef19a2aba063d4d78b309425b4352371833da467384c21c3cc36\",\"dweb:/ipfs/QmWMrSXY8Q5NtSsHtd11dmXogrgGeTFpoH4SrsyAckbMXR\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "sealedSeed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleWinner",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TicketsClaimed",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sealedSeed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketsClaimed\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of points to be distributed to the raffle winner\",\"sealedSeed\":\"The seed used to generate the raffle\"}},\"RaffleWinner(address,uint256)\":{\"params\":{\"amount\":\"The amount of points distributed to the raffle winner\",\"winner\":\"The address of the raffle winner\"}},\"TicketsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The amount of points claimed\",\"claimer\":\"The address of the claimer\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"notice\":\"Event emitted when a raffle is started\"},\"RaffleWinner(address,uint256)\":{\"notice\":\"Event emitted when a raffle is finished\"},\"TicketsClaimed(address,uint256)\":{\"notice\":\"Event emitted when tickets are claimed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":\"ISuperchainPointsRaffleEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x4b4d2b1db4dd40faa591539a8c2885a82f262cd39e98a92204b180c5bed79119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02c4999aa3e1ef19a2aba063d4d78b309425b4352371833da467384c21c3cc36\",\"dweb:/ipfs/QmWMrSXY8Q5NtSsHtd11dmXogrgGeTFpoH4SrsyAckbMXR\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ISuperchainPointsRaffleFactory.sol": {
        "ISuperchainPointsRaffleFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "OngoingRaffle",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "raffle",
                  "type": "address"
                }
              ],
              "name": "RaffleCreated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "createRaffle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createRaffle()": "485ac2a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OngoingRaffle\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"raffle\",\"type\":\"address\"}],\"name\":\"RaffleCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"OngoingRaffle()\":[{\"notice\":\"Cannot create a raffle if one is already started\"}]},\"events\":{\"RaffleCreated(address)\":{\"notice\":\"Emitted when a raffle is created\"}},\"kind\":\"user\",\"methods\":{\"createRaffle()\":{\"notice\":\"Checks previous raffle state and creates a new raffle\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":\"ISuperchainPointsRaffleFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleFactoryErrors": {
          "abi": [
            {
              "inputs": [],
              "name": "OngoingRaffle",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OngoingRaffle\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"OngoingRaffle()\":[{\"notice\":\"Cannot create a raffle if one is already started\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":\"ISuperchainPointsRaffleFactoryErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleFactoryEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "raffle",
                  "type": "address"
                }
              ],
              "name": "RaffleCreated",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"raffle\",\"type\":\"address\"}],\"name\":\"RaffleCreated\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"RaffleCreated(address)\":{\"notice\":\"Emitted when a raffle is created\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":\"ISuperchainPointsRaffleFactoryEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        }
      }
    }
  }
}