{
  "id": "9da82fc66dcc71806c3475d48df7db65",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.29",
  "solcLongVersion": "0.8.29+commit.ab55807c",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1155.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../token/ERC1155/IERC1155.sol\";\n"
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "contracts/interfaces/ISuperchainPointsRaffle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\ninterface ISuperchainPointsRaffleErrors {\n    /// @notice Error thrown when the raffle is already started\n    error RaffleAlreadyStarted();\n\n    /// @notice Error thrown when the raffle is not started\n    error NoOngoingRaffle();\n\n    /// @notice Error thrown when points transfer fails\n    error TransferFailed();\n\n    /// @notice Random pattern requires seed to be revealed in a future block\n    error CannotRevealBeforeBlock(uint256);\n\n    /// @notice Error thrown when the seed doesn't match the sealed seed\n    error InvalidSeed();\n\n    /// @notice Error thrown when the ticket is not found\n    error TicketNotFound();\n\n    /// @notice Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\n    error NoTicketsToClaim();\n\n    /// @notice Error thrown when the seed has already been used\n    error SeedAlreadyUsed();\n}\n\ninterface ISuperchainPointsRaffleEvents {\n    /// @notice Event emitted when a raffle is started\n    /// @param sealedSeed The seed used to generate the raffle\n    /// @param amount The amount of points to be distributed to the raffle winner\n    event RaffleStarted(bytes32 sealedSeed, uint256 amount);\n\n    /// @notice Event emitted when a raffle is finished\n    /// @param winner The address of the raffle winner\n    /// @param amount The amount of points distributed to the raffle winner\n    event RaffleWinner(address winner, uint256 amount);\n\n    /// @notice Event emitted when tickets are claimed\n    /// @param claimer The address of the claimer\n    /// @param amount The amount of points claimed\n    event TicketsClaimed(address claimer, uint256 amount);\n}\n\ninterface ISuperchainPointsRaffle is\n    ISuperchainPointsRaffleErrors,\n    ISuperchainPointsRaffleEvents\n{\n    /// @notice Starts the raffle\n    /// @param _sealedSeed The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\n    /// @param _amount The amount of points to be distributed to the raffle winner\n    /// @param _badges The badges that are eligible to participate in the raffle\n    /// @param _badgeAllocation The number of tickets allocated to each badge\n    function initialize(\n        bytes32 _sealedSeed,\n        uint256 _amount,\n        uint256[] memory _badges,\n        uint256[] memory _badgeAllocation\n    ) external;\n\n    /// @notice Reveals the raffle winner and transfers the points\n    /// @param _seed The seed used to generate the raffle\n    function revealWinner(bytes32 _seed) external;\n\n    /// @notice Returns the amount of points that are distributed to the raffle winner\n    function getPrizeAmount() external view returns (uint256);\n\n    /// @notice Returns the total number of tickets that can be claimed\n    function getTotalTickets() external view returns (uint256);\n\n    /// @notice Returns the number of tickets that can be claimed\n    /// @param user The address of the user\n    function getClaimableTickets(address user) external view returns (uint256);\n\n    /// @notice Claim tickets to participate in raffle\n    function claimTickets() external;\n\n    /// @notice Returns the badges that are eligible to participate in the raffle\n    function getEligibleBadges() external view returns (uint256[] memory);\n\n    /// @notice Returns true if the raffle is finished\n    function isFinished() external view returns (bool);\n}\n"
      },
      "contracts/interfaces/ISuperchainPointsRaffleFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\ninterface ISuperchainPointsRaffleFactoryErrors {\n    /// @notice Cannot create a raffle if one is already started\n    error OngoingRaffle();\n}\n\ninterface ISuperchainPointsRaffleFactoryEvents {\n    /// @notice Emitted when a raffle is created\n    event RaffleCreated(address raffle);\n}\n\ninterface ISuperchainPointsRaffleFactory is\n    ISuperchainPointsRaffleFactoryErrors,\n    ISuperchainPointsRaffleFactoryEvents\n{\n    /// @notice Checks previous raffle state and creates a new raffle\n    function createRaffle() external;\n}\n"
      },
      "contracts/SuperchainPointsRaffle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport {IERC1155} from \"@openzeppelin/contracts/interfaces/IERC1155.sol\";\nimport {ISuperchainPointsRaffle} from \"./interfaces/ISuperchainPointsRaffle.sol\";\n\n/// @title SuperchainPointsRaffle\n/// @notice A raffle contract using https://fravoll.github.io/solidity-patterns/randomness.html pattern for randomness\ncontract SuperchainPointsRaffle is ISuperchainPointsRaffle, Ownable {\n    bool public finished = false;\n    bool internal initialized = false;\n\n    bytes32 public sealedSeed;\n    uint256 public storedBlockNumber;\n\n    IERC20 public superchainPoints;\n    IERC1155 public superchainBadges;\n\n    uint256 public prize;\n    address public winner;\n\n    uint256 public ticketCount;\n    mapping(uint256 => address) public tickets;\n    mapping(address => bool) public ticketsClaimed;\n\n    uint256[] public eligibleBadges;\n    mapping(uint256 => uint256) public badgeAllocations;\n\n    /// @param _initialOwner The initial owner of the contract\n    /// @param _superchainPoints The address of the SuperchainPoints contract\n    /// @param _superchainBadges The address of the SuperchainBadges contract\n    constructor(\n        address _initialOwner,\n        IERC20 _superchainPoints,\n        IERC1155 _superchainBadges\n    ) Ownable(_initialOwner) {\n        superchainPoints = _superchainPoints;\n        superchainBadges = _superchainBadges;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function initialize(\n        bytes32 _sealedSeed,\n        uint256 _amount,\n        uint256[] memory _badges,\n        uint256[] memory _badgeAllocation\n    ) public onlyOwner {\n        if (initialized) {\n            revert RaffleAlreadyStarted();\n        }\n\n        // Mark raffle as initialized\n        initialized = true;\n        finished = false;\n\n        // Store seed\n        sealedSeed = _sealedSeed;\n        storedBlockNumber = block.number + 1;\n\n        // Store raffle details\n        prize = _amount;\n\n        // Store badge details\n        eligibleBadges = new uint256[](_badges.length);\n        for (uint256 i = 0; i < _badges.length; i++) {\n            badgeAllocations[_badges[i]] = _badgeAllocation[i];\n            eligibleBadges[i] = _badges[i];\n        }\n\n        // Pull points for prize\n        bool success = superchainPoints.transferFrom(\n            msg.sender,\n            address(this),\n            prize\n        );\n        if (!success) {\n            revert TransferFailed();\n        }\n\n        emit RaffleStarted(sealedSeed, prize);\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function revealWinner(bytes32 _seed) public onlyOwner {\n        // Verify raffle is ongoing\n        if (finished || !initialized) {\n            revert NoOngoingRaffle();\n        }\n\n        // Mark raffle as finished right away to prevent reentrancy\n        finished = true;\n\n        // If we reveal in same block we can know block hash\n        if (storedBlockNumber > block.number) {\n            revert CannotRevealBeforeBlock(storedBlockNumber);\n        }\n\n        // Prevent owner from changing seed\n        if (keccak256(abi.encodePacked(msg.sender, _seed)) != sealedSeed) {\n            revert InvalidSeed();\n        }\n\n        // Select winner from ticket pool\n        uint256 random = uint256(\n            keccak256(abi.encodePacked(_seed, blockhash(storedBlockNumber)))\n        );\n        winner = tickets[random % ticketCount];\n        if (winner == address(0)) {\n            revert TicketNotFound();\n        }\n\n        // Transfer points to winner\n        bool success = IERC20(superchainPoints).transfer(winner, prize);\n        if (!success) {\n            revert TransferFailed();\n        }\n\n        emit RaffleWinner(winner, prize);\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function claimTickets() public {\n        // Verify raffle is ongoing\n        if (finished || !initialized) {\n            revert NoOngoingRaffle();\n        }\n\n        // Calculate tickets allocation. Maximum possible\n        uint256 ticketsAllocation = getClaimableTickets(msg.sender);\n        if (ticketsAllocation == 0) {\n            revert NoTicketsToClaim();\n        }\n\n        // Allocate tickets to user\n        for (\n            uint256 i = ticketCount;\n            i < ticketCount + ticketsAllocation;\n            i++\n        ) {\n            tickets[i] = msg.sender;\n        }\n        ticketsClaimed[msg.sender] = true;\n        ticketCount += ticketsAllocation;\n\n        emit TicketsClaimed(msg.sender, ticketsAllocation);\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getClaimableTickets(address user) public view returns (uint256) {\n        if (ticketsClaimed[user]) {\n            return 0;\n        }\n\n        uint256 ticketsAllocation = 0;\n        for (uint256 i = 0; i < eligibleBadges.length; i++) {\n            if (superchainBadges.balanceOf(user, eligibleBadges[i]) > 0) {\n                if (badgeAllocations[eligibleBadges[i]] > ticketsAllocation) {\n                    ticketsAllocation = badgeAllocations[eligibleBadges[i]];\n                }\n            }\n        }\n\n        return ticketsAllocation;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getTotalTickets() public view returns (uint256) {\n        return ticketCount;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getPrizeAmount() public view returns (uint256) {\n        return prize;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function getEligibleBadges() external view returns (uint256[] memory) {\n        return eligibleBadges;\n    }\n\n    /// @inheritdoc ISuperchainPointsRaffle\n    function isFinished() external view returns (bool) {\n        return finished;\n    }\n}\n"
      },
      "contracts/SuperchainPointsRaffleFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.29;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport {IERC1155} from \"@openzeppelin/contracts/interfaces/IERC1155.sol\";\nimport {ISuperchainPointsRaffle} from \"./interfaces/ISuperchainPointsRaffle.sol\";\nimport {SuperchainPointsRaffle} from \"./SuperchainPointsRaffle.sol\";\nimport {ISuperchainPointsRaffleFactory} from \"./interfaces/ISuperchainPointsRaffleFactory.sol\";\n\n/// @title SuperchainPointsRaffleFactory\n/// @notice Factory for SuperchainPointsRaffle contracts that also acts as a proxy for the current raffle\ncontract SuperchainPointsRaffleFactory is ISuperchainPointsRaffleFactory, Ownable {\n    IERC20 public superchainPoints;\n    IERC1155 public superchainBadges;\n\n    ISuperchainPointsRaffle public currentRaffle;\n\n    /// @param _initialOwner The initial owner of the contract\n    /// @param _superchainPoints The address of the SuperchainPoints contract\n    /// @param _superchainBadges The address of the SuperchainBadges contract\n    constructor(\n        address _initialOwner,\n        IERC20 _superchainPoints,\n        IERC1155 _superchainBadges\n    ) Ownable(_initialOwner) {\n        superchainPoints = _superchainPoints;\n        superchainBadges = _superchainBadges;\n    }\n\n    function createRaffle() public onlyOwner {\n        if (address(currentRaffle) != address(0) && currentRaffle.isFinished() == false) {\n            revert OngoingRaffle();\n        }\n\n        currentRaffle = new SuperchainPointsRaffle(\n            owner(),\n            superchainPoints,\n            superchainBadges\n        );\n\n        emit RaffleCreated(address(currentRaffle));\n    }\n\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 100
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              386
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 387,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 386,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 386,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                386
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 368,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/IERC1155.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1155.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ]
          },
          "id": 152,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
              "file": "../token/ERC1155/IERC1155.sol",
              "id": 151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 152,
              "sourceUnit": 279,
              "src": "133:55:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 150,
                    "name": "IERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 278,
                    "src": "141:8:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "107:82:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              356
            ]
          },
          "id": 156,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 153,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../token/ERC20/IERC20.sol",
              "id": 155,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 156,
              "sourceUnit": 357,
              "src": "131:49:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 154,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            }
          ],
          "src": "105:76:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ],
            "IERC165": [
              398
            ]
          },
          "id": 279,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 157,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "110:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 159,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 279,
              "sourceUnit": 399,
              "src": "136:62:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 158,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 398,
                    "src": "144:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 161,
                    "name": "IERC165",
                    "nameLocations": [
                      "358:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 398,
                    "src": "358:7:3"
                  },
                  "id": 162,
                  "nodeType": "InheritanceSpecifier",
                  "src": "358:7:3"
                }
              ],
              "canonicalName": "IERC1155",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 160,
                "nodeType": "StructuredDocumentation",
                "src": "200:135:3",
                "text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
              },
              "fullyImplemented": false,
              "id": 278,
              "linearizedBaseContracts": [
                278,
                398
              ],
              "name": "IERC1155",
              "nameLocation": "346:8:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 163,
                    "nodeType": "StructuredDocumentation",
                    "src": "372:125:3",
                    "text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
                  },
                  "eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
                  "id": 175,
                  "name": "TransferSingle",
                  "nameLocation": "508:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "539:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "523:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "523:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "565:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "549:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "549:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 169,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "587:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "571:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "571:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "599:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "591:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "591:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "611:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "603:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "603:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "522:95:3"
                  },
                  "src": "502:116:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 176,
                    "nodeType": "StructuredDocumentation",
                    "src": "624:144:3",
                    "text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
                  },
                  "eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
                  "id": 190,
                  "name": "TransferBatch",
                  "nameLocation": "779:13:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "818:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "802:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "802:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "852:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "836:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "836:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 182,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "882:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "866:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "866:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "904:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "894:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 183,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "894:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 184,
                          "nodeType": "ArrayTypeName",
                          "src": "894:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 188,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "927:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "917:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 186,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "917:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 187,
                          "nodeType": "ArrayTypeName",
                          "src": "917:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:147:3"
                  },
                  "src": "773:167:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "946:147:3",
                    "text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
                  },
                  "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                  "id": 199,
                  "name": "ApprovalForAll",
                  "nameLocation": "1104:14:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1135:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "1119:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1119:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "1160:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "1144:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1144:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "1175:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "1170:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1170:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1118:66:3"
                  },
                  "src": "1098:87:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 200,
                    "nodeType": "StructuredDocumentation",
                    "src": "1191:343:3",
                    "text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
                  },
                  "eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
                  "id": 206,
                  "name": "URI",
                  "nameLocation": "1545:3:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 202,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1556:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "1549:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1549:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 204,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1579:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "1563:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1548:34:3"
                  },
                  "src": "1539:44:3"
                },
                {
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "1589:172:3",
                    "text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
                  },
                  "functionSelector": "00fdd58e",
                  "id": 216,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "1775:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1793:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1785:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1785:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1810:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1802:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1802:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1784:29:3"
                  },
                  "returnParameters": {
                    "id": 215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "1837:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1837:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1836:9:3"
                  },
                  "scope": 278,
                  "src": "1766:80:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 217,
                    "nodeType": "StructuredDocumentation",
                    "src": "1852:188:3",
                    "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
                  },
                  "functionSelector": "4e1273f4",
                  "id": 229,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOfBatch",
                  "nameLocation": "2054:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "accounts",
                        "nameLocation": "2097:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2078:27:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2078:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 219,
                          "nodeType": "ArrayTypeName",
                          "src": "2078:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "2134:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2115:22:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 221,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2115:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 222,
                          "nodeType": "ArrayTypeName",
                          "src": "2115:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2068:75:3"
                  },
                  "returnParameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2167:16:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 225,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2167:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 226,
                          "nodeType": "ArrayTypeName",
                          "src": "2167:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2166:18:3"
                  },
                  "scope": 278,
                  "src": "2045:140:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 230,
                    "nodeType": "StructuredDocumentation",
                    "src": "2191:248:3",
                    "text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
                  },
                  "functionSelector": "a22cb465",
                  "id": 237,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "2453:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2479:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "2471:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "2494:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "2489:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2489:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2470:33:3"
                  },
                  "returnParameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2512:0:3"
                  },
                  "scope": 278,
                  "src": "2444:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 238,
                    "nodeType": "StructuredDocumentation",
                    "src": "2519:135:3",
                    "text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
                  },
                  "functionSelector": "e985e9c5",
                  "id": 247,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "2668:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2693:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2685:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2685:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "2710:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2702:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2702:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2684:35:3"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 247,
                        "src": "2743:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2743:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2742:6:3"
                  },
                  "scope": 278,
                  "src": "2659:90:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 248,
                    "nodeType": "StructuredDocumentation",
                    "src": "2755:910:3",
                    "text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
                  },
                  "functionSelector": "f242432a",
                  "id": 261,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "3679:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3704:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3696:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3696:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3718:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3710:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3710:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3730:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3722:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3722:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3742:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3734:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3734:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3764:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3749:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3749:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3695:74:3"
                  },
                  "returnParameters": {
                    "id": 260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3778:0:3"
                  },
                  "scope": 278,
                  "src": "3670:109:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "3785:814:3",
                    "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
                  },
                  "functionSelector": "2eb2c2d6",
                  "id": 277,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeBatchTransferFrom",
                  "nameLocation": "4613:21:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4652:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4644:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4644:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4674:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4666:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4666:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "ids",
                        "nameLocation": "4705:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4686:22:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 267,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4686:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 268,
                          "nodeType": "ArrayTypeName",
                          "src": "4686:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "values",
                        "nameLocation": "4737:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4718:25:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 270,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4718:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 271,
                          "nodeType": "ArrayTypeName",
                          "src": "4718:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4768:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 277,
                        "src": "4753:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4753:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4634:144:3"
                  },
                  "returnParameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4787:0:3"
                  },
                  "scope": 278,
                  "src": "4604:184:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 279,
              "src": "336:4454:3",
              "usedErrors": [],
              "usedEvents": [
                175,
                190,
                199,
                206
              ]
            }
          ],
          "src": "110:4681:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              356
            ]
          },
          "id": 357,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 280,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 281,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:4",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 356,
              "linearizedBaseContracts": [
                356
              ],
              "name": "IERC20",
              "nameLocation": "213:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 282,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 290,
                  "name": "Transfer",
                  "nameLocation": "395:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 284,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "404:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 286,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "426:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 288,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 290,
                        "src": "446:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:4"
                  },
                  "src": "389:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 291,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 299,
                  "name": "Approval",
                  "nameLocation": "626:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 293,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "635:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 295,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "658:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 297,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 299,
                        "src": "683:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:4"
                  },
                  "src": "620:78:4"
                },
                {
                  "documentation": {
                    "id": 300,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 305,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 301,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:4"
                  },
                  "returnParameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "820:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:4"
                  },
                  "scope": 356,
                  "src": "774:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 313,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 309,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "930:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:4"
                  },
                  "returnParameters": {
                    "id": 312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "970:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:4"
                  },
                  "scope": 356,
                  "src": "911:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 314,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 323,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 319,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "1221:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "1233:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:4"
                  },
                  "returnParameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 321,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "1266:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 320,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:4"
                  },
                  "scope": 356,
                  "src": "1203:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 324,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 333,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 326,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1566:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1581:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:4"
                  },
                  "returnParameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1621:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:4"
                  },
                  "scope": 356,
                  "src": "1547:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 334,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 343,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2325:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2342:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:4"
                  },
                  "returnParameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "2375:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:4"
                  },
                  "scope": 356,
                  "src": "2308:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 344,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 355,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2711:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2725:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 350,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2737:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:4"
                  },
                  "returnParameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "2770:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:4"
                  },
                  "scope": 356,
                  "src": "2689:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 357,
              "src": "203:2575:4",
              "usedErrors": [],
              "usedEvents": [
                290,
                299
              ]
            }
          ],
          "src": "106:2673:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              386
            ]
          },
          "id": 387,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 358,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 359,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 386,
              "linearizedBaseContracts": [
                386
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 364,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 363,
                        "id": 366,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 362,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 361,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 386,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 376,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 373,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 372,
                        "id": 375,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 377,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 369,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 386,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 381,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 378,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 380,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 386,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 387,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              398
            ]
          },
          "id": 399,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 388,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 389,
                "nodeType": "StructuredDocumentation",
                "src": "141:279:6",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 398,
              "linearizedBaseContracts": [
                398
              ],
              "name": "IERC165",
              "nameLocation": "431:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 390,
                    "nodeType": "StructuredDocumentation",
                    "src": "445:340:6",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 397,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "799:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 392,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "824:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "817:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "817:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "816:20:6"
                  },
                  "returnParameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "860:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "860:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "859:6:6"
                  },
                  "scope": 398,
                  "src": "790:76:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 399,
              "src": "421:447:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:754:6"
        },
        "id": 6
      },
      "contracts/SuperchainPointsRaffle.sol": {
        "ast": {
          "absolutePath": "contracts/SuperchainPointsRaffle.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ],
            "IERC20": [
              356
            ],
            "ISuperchainPointsRaffle": [
              1066
            ],
            "Ownable": [
              147
            ],
            "SuperchainPointsRaffle": [
              856
            ]
          },
          "id": 857,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 400,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 402,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 857,
              "sourceUnit": 148,
              "src": "58:67:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 401,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "66:7:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "id": 404,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 857,
              "sourceUnit": 156,
              "src": "126:69:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 403,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "134:6:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "id": 406,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 857,
              "sourceUnit": 152,
              "src": "196:73:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 405,
                    "name": "IERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 278,
                    "src": "204:8:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPointsRaffle.sol",
              "file": "./interfaces/ISuperchainPointsRaffle.sol",
              "id": 408,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 857,
              "sourceUnit": 1067,
              "src": "270:81:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 407,
                    "name": "ISuperchainPointsRaffle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1066,
                    "src": "278:23:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 410,
                    "name": "ISuperchainPointsRaffle",
                    "nameLocations": [
                      "541:23:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1066,
                    "src": "541:23:7"
                  },
                  "id": 411,
                  "nodeType": "InheritanceSpecifier",
                  "src": "541:23:7"
                },
                {
                  "baseName": {
                    "id": 412,
                    "name": "Ownable",
                    "nameLocations": [
                      "566:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "566:7:7"
                  },
                  "id": 413,
                  "nodeType": "InheritanceSpecifier",
                  "src": "566:7:7"
                }
              ],
              "canonicalName": "SuperchainPointsRaffle",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 409,
                "nodeType": "StructuredDocumentation",
                "src": "353:153:7",
                "text": "@title SuperchainPointsRaffle\n @notice A raffle contract using https://fravoll.github.io/solidity-patterns/randomness.html pattern for randomness"
              },
              "fullyImplemented": true,
              "id": 856,
              "linearizedBaseContracts": [
                856,
                147,
                386,
                1066,
                1004,
                982
              ],
              "name": "SuperchainPointsRaffle",
              "nameLocation": "515:22:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "bef4876b",
                  "id": 416,
                  "mutability": "mutable",
                  "name": "finished",
                  "nameLocation": "592:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "580:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "580:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "603:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "initialized",
                  "nameLocation": "628:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "614:33:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "66616c7365",
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "642:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "d8c4a454",
                  "id": 421,
                  "mutability": "mutable",
                  "name": "sealedSeed",
                  "nameLocation": "669:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "654:25:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d2a8c791",
                  "id": 423,
                  "mutability": "mutable",
                  "name": "storedBlockNumber",
                  "nameLocation": "700:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "685:32:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b2ab4ab7",
                  "id": 426,
                  "mutability": "mutable",
                  "name": "superchainPoints",
                  "nameLocation": "738:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "724:30:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$356",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 425,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 424,
                      "name": "IERC20",
                      "nameLocations": [
                        "724:6:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 356,
                      "src": "724:6:7"
                    },
                    "referencedDeclaration": 356,
                    "src": "724:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$356",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a94bd919",
                  "id": 429,
                  "mutability": "mutable",
                  "name": "superchainBadges",
                  "nameLocation": "776:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "760:32:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$278",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 428,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 427,
                      "name": "IERC1155",
                      "nameLocations": [
                        "760:8:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 278,
                      "src": "760:8:7"
                    },
                    "referencedDeclaration": 278,
                    "src": "760:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$278",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e3ac5d26",
                  "id": 431,
                  "mutability": "mutable",
                  "name": "prize",
                  "nameLocation": "814:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "799:20:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "dfbf53ae",
                  "id": 433,
                  "mutability": "mutable",
                  "name": "winner",
                  "nameLocation": "840:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "825:21:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cfbd900f",
                  "id": 435,
                  "mutability": "mutable",
                  "name": "ticketCount",
                  "nameLocation": "868:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "853:26:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "50b44712",
                  "id": 439,
                  "mutability": "mutable",
                  "name": "tickets",
                  "nameLocation": "920:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "885:42:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                    "typeString": "mapping(uint256 => address)"
                  },
                  "typeName": {
                    "id": 438,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 436,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "893:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "885:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                      "typeString": "mapping(uint256 => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 437,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "904:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0fe85616",
                  "id": 443,
                  "mutability": "mutable",
                  "name": "ticketsClaimed",
                  "nameLocation": "965:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "933:46:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 442,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 440,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "941:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "933:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 441,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "952:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "56c77ebe",
                  "id": 446,
                  "mutability": "mutable",
                  "name": "eligibleBadges",
                  "nameLocation": "1003:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "986:31:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 444,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "986:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 445,
                    "nodeType": "ArrayTypeName",
                    "src": "986:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6dc3ae8f",
                  "id": 450,
                  "mutability": "mutable",
                  "name": "badgeAllocations",
                  "nameLocation": "1058:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1023:51:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "typeName": {
                    "id": 449,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 447,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1031:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1023:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                      "typeString": "mapping(uint256 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 448,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1042:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 473,
                    "nodeType": "Block",
                    "src": "1442:99:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 465,
                            "name": "superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "1452:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 466,
                            "name": "_superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "1471:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1452:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 468,
                        "nodeType": "ExpressionStatement",
                        "src": "1452:36:7"
                      },
                      {
                        "expression": {
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 469,
                            "name": "superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "1498:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 470,
                            "name": "_superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "1517:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "src": "1498:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "1498:36:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "1081:214:7",
                    "text": "@param _initialOwner The initial owner of the contract\n @param _superchainPoints The address of the SuperchainPoints contract\n @param _superchainBadges The address of the SuperchainBadges contract"
                  },
                  "id": 474,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 462,
                          "name": "_initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 453,
                          "src": "1427:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 463,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 461,
                        "name": "Ownable",
                        "nameLocations": [
                          "1419:7:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1419:7:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1419:22:7"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "_initialOwner",
                        "nameLocation": "1329:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 474,
                        "src": "1321:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1321:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 456,
                        "mutability": "mutable",
                        "name": "_superchainPoints",
                        "nameLocation": "1359:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 474,
                        "src": "1352:24:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$356",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 455,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 454,
                            "name": "IERC20",
                            "nameLocations": [
                              "1352:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 356,
                            "src": "1352:6:7"
                          },
                          "referencedDeclaration": 356,
                          "src": "1352:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "mutability": "mutable",
                        "name": "_superchainBadges",
                        "nameLocation": "1395:17:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 474,
                        "src": "1386:26:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$278",
                          "typeString": "contract IERC1155"
                        },
                        "typeName": {
                          "id": 458,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 457,
                            "name": "IERC1155",
                            "nameLocations": [
                              "1386:8:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 278,
                            "src": "1386:8:7"
                          },
                          "referencedDeclaration": 278,
                          "src": "1386:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1311:107:7"
                  },
                  "returnParameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1442:0:7"
                  },
                  "scope": 856,
                  "src": "1300:241:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1022
                  ],
                  "body": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "1765:889:7",
                    "statements": [
                      {
                        "condition": {
                          "id": 490,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 419,
                          "src": "1779:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 495,
                        "nodeType": "IfStatement",
                        "src": "1775:71:7",
                        "trueBody": {
                          "id": 494,
                          "nodeType": "Block",
                          "src": "1792:54:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 491,
                                  "name": "RaffleAlreadyStarted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 958,
                                  "src": "1813:20:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1813:22:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 493,
                              "nodeType": "RevertStatement",
                              "src": "1806:29:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 496,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "1894:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1908:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1894:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 499,
                        "nodeType": "ExpressionStatement",
                        "src": "1894:18:7"
                      },
                      {
                        "expression": {
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 500,
                            "name": "finished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "1922:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1933:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1922:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "1922:16:7"
                      },
                      {
                        "expression": {
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 504,
                            "name": "sealedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "1971:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 505,
                            "name": "_sealedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 477,
                            "src": "1984:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1971:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 507,
                        "nodeType": "ExpressionStatement",
                        "src": "1971:24:7"
                      },
                      {
                        "expression": {
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 508,
                            "name": "storedBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "2005:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 509,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2025:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2031:6:7",
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "2025:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2040:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2025:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2005:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 514,
                        "nodeType": "ExpressionStatement",
                        "src": "2005:36:7"
                      },
                      {
                        "expression": {
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 515,
                            "name": "prize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "2084:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 516,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "2092:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2084:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "2084:15:7"
                      },
                      {
                        "expression": {
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 519,
                            "name": "eligibleBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "2141:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 523,
                                  "name": "_badges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 482,
                                  "src": "2172:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2180:6:7",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2172:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "2158:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 520,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2162:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 521,
                                "nodeType": "ArrayTypeName",
                                "src": "2162:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2158:29:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "2141:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "2141:46:7"
                      },
                      {
                        "body": {
                          "id": 557,
                          "nodeType": "Block",
                          "src": "2242:119:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 539,
                                    "name": "badgeAllocations",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "2256:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 543,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 540,
                                      "name": "_badges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 482,
                                      "src": "2273:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 542,
                                    "indexExpression": {
                                      "id": 541,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 529,
                                      "src": "2281:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2273:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2256:28:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 544,
                                    "name": "_badgeAllocation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 485,
                                    "src": "2287:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 546,
                                  "indexExpression": {
                                    "id": 545,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 529,
                                    "src": "2304:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2287:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2256:50:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 548,
                              "nodeType": "ExpressionStatement",
                              "src": "2256:50:7"
                            },
                            {
                              "expression": {
                                "id": 555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 549,
                                    "name": "eligibleBadges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 446,
                                    "src": "2320:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 551,
                                  "indexExpression": {
                                    "id": 550,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 529,
                                    "src": "2335:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2320:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 552,
                                    "name": "_badges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 482,
                                    "src": "2340:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 554,
                                  "indexExpression": {
                                    "id": 553,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 529,
                                    "src": "2348:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2340:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2320:30:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 556,
                              "nodeType": "ExpressionStatement",
                              "src": "2320:30:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 532,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "2217:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 533,
                              "name": "_badges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 482,
                              "src": "2221:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2229:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2221:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2217:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 558,
                        "initializationExpression": {
                          "assignments": [
                            529
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 529,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2210:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 558,
                              "src": "2202:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 528,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2202:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 531,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2214:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2202:13:7"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2237:3:7",
                            "subExpression": {
                              "id": 536,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "2237:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 538,
                          "nodeType": "ExpressionStatement",
                          "src": "2237:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "2197:164:7"
                      },
                      {
                        "assignments": [
                          560
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 560,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2409:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 584,
                            "src": "2404:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 559,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2404:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 571,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 563,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2462:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2466:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2462:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 567,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2494:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$856",
                                    "typeString": "contract SuperchainPointsRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$856",
                                    "typeString": "contract SuperchainPointsRaffle"
                                  }
                                ],
                                "id": 566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2486:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 565,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2486:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2486:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 569,
                              "name": "prize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "2513:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 561,
                              "name": "superchainPoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 426,
                              "src": "2419:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$356",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2436:12:7",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 355,
                            "src": "2419:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2419:109:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2404:124:7"
                      },
                      {
                        "condition": {
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2542:8:7",
                          "subExpression": {
                            "id": 572,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "2543:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 578,
                        "nodeType": "IfStatement",
                        "src": "2538:62:7",
                        "trueBody": {
                          "id": 577,
                          "nodeType": "Block",
                          "src": "2552:48:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 574,
                                  "name": "TransferFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 964,
                                  "src": "2573:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 575,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2573:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 576,
                              "nodeType": "RevertStatement",
                              "src": "2566:23:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 580,
                              "name": "sealedSeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "2629:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 581,
                              "name": "prize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "2641:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 579,
                            "name": "RaffleStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "2615:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2615:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 583,
                        "nodeType": "EmitStatement",
                        "src": "2610:37:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 475,
                    "nodeType": "StructuredDocumentation",
                    "src": "1547:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "58eda682",
                  "id": 585,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 488,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 487,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1755:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1755:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1755:9:7"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "1600:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "_sealedSeed",
                        "nameLocation": "1628:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "1620:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 476,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1620:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 479,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1657:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "1649:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1649:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 482,
                        "mutability": "mutable",
                        "name": "_badges",
                        "nameLocation": "1691:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "1674:24:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 480,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1674:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 481,
                          "nodeType": "ArrayTypeName",
                          "src": "1674:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "_badgeAllocation",
                        "nameLocation": "1725:16:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "1708:33:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 483,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1708:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 484,
                          "nodeType": "ArrayTypeName",
                          "src": "1708:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1610:137:7"
                  },
                  "returnParameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1765:0:7"
                  },
                  "scope": 856,
                  "src": "1591:1063:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1028
                  ],
                  "body": {
                    "id": 687,
                    "nodeType": "Block",
                    "src": "2758:1094:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 593,
                            "name": "finished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "2808:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2820:12:7",
                            "subExpression": {
                              "id": 594,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "2821:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2808:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 601,
                        "nodeType": "IfStatement",
                        "src": "2804:79:7",
                        "trueBody": {
                          "id": 600,
                          "nodeType": "Block",
                          "src": "2834:49:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 597,
                                  "name": "NoOngoingRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 961,
                                  "src": "2855:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2855:17:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 599,
                              "nodeType": "RevertStatement",
                              "src": "2848:24:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 602,
                            "name": "finished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "2961:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2972:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2961:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 605,
                        "nodeType": "ExpressionStatement",
                        "src": "2961:15:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 606,
                            "name": "storedBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "3052:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "id": 607,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3072:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3078:6:7",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "3072:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3052:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 615,
                        "nodeType": "IfStatement",
                        "src": "3048:112:7",
                        "trueBody": {
                          "id": 614,
                          "nodeType": "Block",
                          "src": "3086:74:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 611,
                                    "name": "storedBlockNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 423,
                                    "src": "3131:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 610,
                                  "name": "CannotRevealBeforeBlock",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 969,
                                  "src": "3107:23:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256) pure returns (error)"
                                  }
                                },
                                "id": 612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3107:42:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 613,
                              "nodeType": "RevertStatement",
                              "src": "3100:49:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 619,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3245:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 620,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3249:6:7",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3245:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 621,
                                    "name": "_seed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 588,
                                    "src": "3257:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 617,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3228:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3232:12:7",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "3228:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3228:35:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 616,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3218:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3218:46:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 624,
                            "name": "sealedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "3268:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3218:60:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 630,
                        "nodeType": "IfStatement",
                        "src": "3214:111:7",
                        "trueBody": {
                          "id": 629,
                          "nodeType": "Block",
                          "src": "3280:45:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 626,
                                  "name": "InvalidSeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "3301:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3301:13:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 628,
                              "nodeType": "RevertStatement",
                              "src": "3294:20:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          632
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 632,
                            "mutability": "mutable",
                            "name": "random",
                            "nameLocation": "3385:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 687,
                            "src": "3377:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 631,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3377:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 645,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 638,
                                      "name": "_seed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 588,
                                      "src": "3442:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 640,
                                          "name": "storedBlockNumber",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 423,
                                          "src": "3459:17:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 639,
                                        "name": "blockhash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -5,
                                        "src": "3449:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 641,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3449:28:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 636,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "3425:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "3429:12:7",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "3425:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3425:53:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 635,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "3415:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3415:64:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3394:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 633,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3394:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3394:95:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3377:112:7"
                      },
                      {
                        "expression": {
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 646,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "3499:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 647,
                              "name": "tickets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 439,
                              "src": "3508:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 651,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 648,
                                "name": "random",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "3516:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "id": 649,
                                "name": "ticketCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "3525:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3516:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3508:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3499:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 653,
                        "nodeType": "ExpressionStatement",
                        "src": "3499:38:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 654,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "3551:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3569:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3561:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 655,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3561:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3561:10:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3551:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 664,
                        "nodeType": "IfStatement",
                        "src": "3547:74:7",
                        "trueBody": {
                          "id": 663,
                          "nodeType": "Block",
                          "src": "3573:48:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 660,
                                  "name": "TicketNotFound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 975,
                                  "src": "3594:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3594:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 662,
                              "nodeType": "RevertStatement",
                              "src": "3587:23:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          666
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 666,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3673:7:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 687,
                            "src": "3668:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 665,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3668:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 674,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 671,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "3717:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 672,
                              "name": "prize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "3725:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 668,
                                  "name": "superchainPoints",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "3690:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$356",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$356",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 667,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 356,
                                "src": "3683:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$356_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3683:24:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$356",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3708:8:7",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 323,
                            "src": "3683:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3683:48:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3668:63:7"
                      },
                      {
                        "condition": {
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3745:8:7",
                          "subExpression": {
                            "id": 675,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 666,
                            "src": "3746:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 681,
                        "nodeType": "IfStatement",
                        "src": "3741:62:7",
                        "trueBody": {
                          "id": 680,
                          "nodeType": "Block",
                          "src": "3755:48:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 677,
                                  "name": "TransferFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 964,
                                  "src": "3776:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3776:16:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 679,
                              "nodeType": "RevertStatement",
                              "src": "3769:23:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 683,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 433,
                              "src": "3831:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 684,
                              "name": "prize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "3839:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 682,
                            "name": "RaffleWinner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 996,
                            "src": "3818:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3818:27:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 686,
                        "nodeType": "EmitStatement",
                        "src": "3813:32:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "2660:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "a9a86f4d",
                  "id": 688,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 591,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 590,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2748:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2748:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2748:9:7"
                    }
                  ],
                  "name": "revealWinner",
                  "nameLocation": "2713:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "_seed",
                        "nameLocation": "2734:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 688,
                        "src": "2726:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2725:15:7"
                  },
                  "returnParameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2758:0:7"
                  },
                  "scope": 856,
                  "src": "2704:1148:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1052
                  ],
                  "body": {
                    "id": 754,
                    "nodeType": "Block",
                    "src": "3933:704:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 692,
                            "name": "finished",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "3983:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "3995:12:7",
                            "subExpression": {
                              "id": 693,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 419,
                              "src": "3996:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3983:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 700,
                        "nodeType": "IfStatement",
                        "src": "3979:79:7",
                        "trueBody": {
                          "id": 699,
                          "nodeType": "Block",
                          "src": "4009:49:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 696,
                                  "name": "NoOngoingRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 961,
                                  "src": "4030:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4030:17:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 698,
                              "nodeType": "RevertStatement",
                              "src": "4023:24:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          702
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 702,
                            "mutability": "mutable",
                            "name": "ticketsAllocation",
                            "nameLocation": "4134:17:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 754,
                            "src": "4126:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 701,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4126:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 707,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 704,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4174:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4178:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4174:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 703,
                            "name": "getClaimableTickets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 818,
                            "src": "4154:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4154:31:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4126:59:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 708,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "4199:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4220:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4199:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 715,
                        "nodeType": "IfStatement",
                        "src": "4195:78:7",
                        "trueBody": {
                          "id": 714,
                          "nodeType": "Block",
                          "src": "4223:50:7",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 711,
                                  "name": "NoTicketsToClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 978,
                                  "src": "4244:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4244:18:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 713,
                              "nodeType": "RevertStatement",
                              "src": "4237:25:7"
                            }
                          ]
                        }
                      },
                      {
                        "body": {
                          "id": 735,
                          "nodeType": "Block",
                          "src": "4437:48:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 728,
                                    "name": "tickets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 439,
                                    "src": "4451:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 730,
                                  "indexExpression": {
                                    "id": 729,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 717,
                                    "src": "4459:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4451:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 731,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4464:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4468:6:7",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4464:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4451:23:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 734,
                              "nodeType": "ExpressionStatement",
                              "src": "4451:23:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 720,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 717,
                            "src": "4374:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 721,
                              "name": "ticketCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "4378:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 722,
                              "name": "ticketsAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 702,
                              "src": "4392:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4378:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4374:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 736,
                        "initializationExpression": {
                          "assignments": [
                            717
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 717,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4345:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 736,
                              "src": "4337:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 716,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4337:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 719,
                          "initialValue": {
                            "id": 718,
                            "name": "ticketCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "4349:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4337:23:7"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4423:3:7",
                            "subExpression": {
                              "id": 725,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "4423:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 727,
                          "nodeType": "ExpressionStatement",
                          "src": "4423:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "4319:166:7"
                      },
                      {
                        "expression": {
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 737,
                              "name": "ticketsClaimed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "4494:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 740,
                            "indexExpression": {
                              "expression": {
                                "id": 738,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4509:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4513:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4509:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4494:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4523:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4494:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 743,
                        "nodeType": "ExpressionStatement",
                        "src": "4494:33:7"
                      },
                      {
                        "expression": {
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 744,
                            "name": "ticketCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "4537:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 745,
                            "name": "ticketsAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "4552:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4537:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 747,
                        "nodeType": "ExpressionStatement",
                        "src": "4537:32:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 749,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4600:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4604:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4600:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 751,
                              "name": "ticketsAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 702,
                              "src": "4612:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 748,
                            "name": "TicketsClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "4585:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4585:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 753,
                        "nodeType": "EmitStatement",
                        "src": "4580:50:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 689,
                    "nodeType": "StructuredDocumentation",
                    "src": "3858:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "81fe4c61",
                  "id": 755,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimTickets",
                  "nameLocation": "3911:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 690,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3923:2:7"
                  },
                  "returnParameters": {
                    "id": 691,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3933:0:7"
                  },
                  "scope": 856,
                  "src": "3902:735:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1048
                  ],
                  "body": {
                    "id": 817,
                    "nodeType": "Block",
                    "src": "4760:485:7",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 763,
                            "name": "ticketsClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "4774:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 765,
                          "indexExpression": {
                            "id": 764,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "4789:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4774:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 769,
                        "nodeType": "IfStatement",
                        "src": "4770:59:7",
                        "trueBody": {
                          "id": 768,
                          "nodeType": "Block",
                          "src": "4796:33:7",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4817:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 762,
                              "id": 767,
                              "nodeType": "Return",
                              "src": "4810:8:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          771
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 771,
                            "mutability": "mutable",
                            "name": "ticketsAllocation",
                            "nameLocation": "4847:17:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 817,
                            "src": "4839:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 770,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4839:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 773,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4867:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4839:29:7"
                      },
                      {
                        "body": {
                          "id": 813,
                          "nodeType": "Block",
                          "src": "4930:274:7",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 787,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 758,
                                      "src": "4975:4:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 788,
                                        "name": "eligibleBadges",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 446,
                                        "src": "4981:14:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 790,
                                      "indexExpression": {
                                        "id": 789,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 775,
                                        "src": "4996:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4981:17:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 785,
                                      "name": "superchainBadges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 429,
                                      "src": "4948:16:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC1155_$278",
                                        "typeString": "contract IERC1155"
                                      }
                                    },
                                    "id": 786,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4965:9:7",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 216,
                                    "src": "4948:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view external returns (uint256)"
                                    }
                                  },
                                  "id": 791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4948:51:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5002:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4948:55:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 812,
                              "nodeType": "IfStatement",
                              "src": "4944:250:7",
                              "trueBody": {
                                "id": 811,
                                "nodeType": "Block",
                                "src": "5005:189:7",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 794,
                                          "name": "badgeAllocations",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 450,
                                          "src": "5027:16:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 798,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "id": 795,
                                            "name": "eligibleBadges",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 446,
                                            "src": "5044:14:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                              "typeString": "uint256[] storage ref"
                                            }
                                          },
                                          "id": 797,
                                          "indexExpression": {
                                            "id": 796,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 775,
                                            "src": "5059:1:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5044:17:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5027:35:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 799,
                                        "name": "ticketsAllocation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 771,
                                        "src": "5065:17:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5027:55:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 810,
                                    "nodeType": "IfStatement",
                                    "src": "5023:157:7",
                                    "trueBody": {
                                      "id": 809,
                                      "nodeType": "Block",
                                      "src": "5084:96:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 807,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 801,
                                              "name": "ticketsAllocation",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 771,
                                              "src": "5106:17:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "baseExpression": {
                                                "id": 802,
                                                "name": "badgeAllocations",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 450,
                                                "src": "5126:16:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                                  "typeString": "mapping(uint256 => uint256)"
                                                }
                                              },
                                              "id": 806,
                                              "indexExpression": {
                                                "baseExpression": {
                                                  "id": 803,
                                                  "name": "eligibleBadges",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 446,
                                                  "src": "5143:14:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                                    "typeString": "uint256[] storage ref"
                                                  }
                                                },
                                                "id": 805,
                                                "indexExpression": {
                                                  "id": 804,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 775,
                                                  "src": "5158:1:7",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "5143:17:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "5126:35:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5106:55:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 808,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5106:55:7"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 778,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "4898:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 779,
                              "name": "eligibleBadges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "4902:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4917:6:7",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4902:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4898:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 814,
                        "initializationExpression": {
                          "assignments": [
                            775
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 775,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4891:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 814,
                              "src": "4883:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 774,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4883:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 777,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4895:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4883:13:7"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4925:3:7",
                            "subExpression": {
                              "id": 782,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "4925:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 784,
                          "nodeType": "ExpressionStatement",
                          "src": "4925:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "4878:326:7"
                      },
                      {
                        "expression": {
                          "id": 815,
                          "name": "ticketsAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 771,
                          "src": "5221:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 762,
                        "id": 816,
                        "nodeType": "Return",
                        "src": "5214:24:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 756,
                    "nodeType": "StructuredDocumentation",
                    "src": "4643:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "d9f483f8",
                  "id": 818,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimableTickets",
                  "nameLocation": "4696:19:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 758,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "4724:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "4716:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4715:14:7"
                  },
                  "returnParameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 761,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 818,
                        "src": "4751:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 760,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4751:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4750:9:7"
                  },
                  "scope": 856,
                  "src": "4687:558:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1040
                  ],
                  "body": {
                    "id": 826,
                    "nodeType": "Block",
                    "src": "5352:35:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 824,
                          "name": "ticketCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "5369:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 823,
                        "id": 825,
                        "nodeType": "Return",
                        "src": "5362:18:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 819,
                    "nodeType": "StructuredDocumentation",
                    "src": "5251:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "06e8337f",
                  "id": 827,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalTickets",
                  "nameLocation": "5304:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 820,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5319:2:7"
                  },
                  "returnParameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 822,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "5343:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5343:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5342:9:7"
                  },
                  "scope": 856,
                  "src": "5295:92:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1034
                  ],
                  "body": {
                    "id": 835,
                    "nodeType": "Block",
                    "src": "5493:29:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 833,
                          "name": "prize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "5510:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 832,
                        "id": 834,
                        "nodeType": "Return",
                        "src": "5503:12:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 828,
                    "nodeType": "StructuredDocumentation",
                    "src": "5393:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "ecca9c2e",
                  "id": 836,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPrizeAmount",
                  "nameLocation": "5446:14:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 829,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5460:2:7"
                  },
                  "returnParameters": {
                    "id": 832,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 831,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "5484:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 830,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5484:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5483:9:7"
                  },
                  "scope": 856,
                  "src": "5437:85:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1059
                  ],
                  "body": {
                    "id": 845,
                    "nodeType": "Block",
                    "src": "5642:38:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 843,
                          "name": "eligibleBadges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 446,
                          "src": "5659:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 842,
                        "id": 844,
                        "nodeType": "Return",
                        "src": "5652:21:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 837,
                    "nodeType": "StructuredDocumentation",
                    "src": "5528:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "4705ab24",
                  "id": 846,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEligibleBadges",
                  "nameLocation": "5581:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 838,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5598:2:7"
                  },
                  "returnParameters": {
                    "id": 842,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 841,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "5624:16:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 839,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5624:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 840,
                          "nodeType": "ArrayTypeName",
                          "src": "5624:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5623:18:7"
                  },
                  "scope": 856,
                  "src": "5572:108:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1065
                  ],
                  "body": {
                    "id": 854,
                    "nodeType": "Block",
                    "src": "5781:32:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 852,
                          "name": "finished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "5798:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 851,
                        "id": 853,
                        "nodeType": "Return",
                        "src": "5791:15:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 847,
                    "nodeType": "StructuredDocumentation",
                    "src": "5686:39:7",
                    "text": "@inheritdoc ISuperchainPointsRaffle"
                  },
                  "functionSelector": "7b352962",
                  "id": 855,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isFinished",
                  "nameLocation": "5739:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5749:2:7"
                  },
                  "returnParameters": {
                    "id": 851,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 855,
                        "src": "5775:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5775:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5774:6:7"
                  },
                  "scope": 856,
                  "src": "5730:83:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 857,
              "src": "506:5309:7",
              "usedErrors": [
                13,
                18,
                958,
                961,
                964,
                969,
                972,
                975,
                978,
                981
              ],
              "usedEvents": [
                24,
                989,
                996,
                1003
              ]
            }
          ],
          "src": "32:5784:7"
        },
        "id": 7
      },
      "contracts/SuperchainPointsRaffleFactory.sol": {
        "ast": {
          "absolutePath": "contracts/SuperchainPointsRaffleFactory.sol",
          "exportedSymbols": {
            "IERC1155": [
              278
            ],
            "IERC20": [
              356
            ],
            "ISuperchainPointsRaffle": [
              1066
            ],
            "ISuperchainPointsRaffleFactory": [
              1087
            ],
            "Ownable": [
              147
            ],
            "SuperchainPointsRaffle": [
              856
            ],
            "SuperchainPointsRaffleFactory": [
              953
            ]
          },
          "id": 954,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 858,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 860,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 954,
              "sourceUnit": 148,
              "src": "58:67:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 859,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "66:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
              "id": 862,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 954,
              "sourceUnit": 156,
              "src": "126:69:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 861,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "134:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "file": "@openzeppelin/contracts/interfaces/IERC1155.sol",
              "id": 864,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 954,
              "sourceUnit": 152,
              "src": "196:73:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 863,
                    "name": "IERC1155",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 278,
                    "src": "204:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPointsRaffle.sol",
              "file": "./interfaces/ISuperchainPointsRaffle.sol",
              "id": 866,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 954,
              "sourceUnit": 1067,
              "src": "270:81:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 865,
                    "name": "ISuperchainPointsRaffle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1066,
                    "src": "278:23:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/SuperchainPointsRaffle.sol",
              "file": "./SuperchainPointsRaffle.sol",
              "id": 868,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 954,
              "sourceUnit": 857,
              "src": "352:68:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 867,
                    "name": "SuperchainPointsRaffle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 856,
                    "src": "360:22:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ISuperchainPointsRaffleFactory.sol",
              "file": "./interfaces/ISuperchainPointsRaffleFactory.sol",
              "id": 870,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 954,
              "sourceUnit": 1088,
              "src": "421:95:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 869,
                    "name": "ISuperchainPointsRaffleFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1087,
                    "src": "429:30:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 872,
                    "name": "ISuperchainPointsRaffleFactory",
                    "nameLocations": [
                      "707:30:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1087,
                    "src": "707:30:8"
                  },
                  "id": 873,
                  "nodeType": "InheritanceSpecifier",
                  "src": "707:30:8"
                },
                {
                  "baseName": {
                    "id": 874,
                    "name": "Ownable",
                    "nameLocations": [
                      "739:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "739:7:8"
                  },
                  "id": 875,
                  "nodeType": "InheritanceSpecifier",
                  "src": "739:7:8"
                }
              ],
              "canonicalName": "SuperchainPointsRaffleFactory",
              "contractDependencies": [
                856
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 871,
                "nodeType": "StructuredDocumentation",
                "src": "518:147:8",
                "text": "@title SuperchainPointsRaffleFactory\n @notice Factory for SuperchainPointsRaffle contracts that also acts as a proxy for the current raffle"
              },
              "fullyImplemented": true,
              "id": 953,
              "linearizedBaseContracts": [
                953,
                147,
                386,
                1087,
                1078,
                1072
              ],
              "name": "SuperchainPointsRaffleFactory",
              "nameLocation": "674:29:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "b2ab4ab7",
                  "id": 878,
                  "mutability": "mutable",
                  "name": "superchainPoints",
                  "nameLocation": "767:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 953,
                  "src": "753:30:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$356",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 877,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 876,
                      "name": "IERC20",
                      "nameLocations": [
                        "753:6:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 356,
                      "src": "753:6:8"
                    },
                    "referencedDeclaration": 356,
                    "src": "753:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$356",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a94bd919",
                  "id": 881,
                  "mutability": "mutable",
                  "name": "superchainBadges",
                  "nameLocation": "805:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 953,
                  "src": "789:32:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$278",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 880,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 879,
                      "name": "IERC1155",
                      "nameLocations": [
                        "789:8:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 278,
                      "src": "789:8:8"
                    },
                    "referencedDeclaration": 278,
                    "src": "789:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$278",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a8527cbe",
                  "id": 884,
                  "mutability": "mutable",
                  "name": "currentRaffle",
                  "nameLocation": "859:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 953,
                  "src": "828:44:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1066",
                    "typeString": "contract ISuperchainPointsRaffle"
                  },
                  "typeName": {
                    "id": 883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 882,
                      "name": "ISuperchainPointsRaffle",
                      "nameLocations": [
                        "828:23:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1066,
                      "src": "828:23:8"
                    },
                    "referencedDeclaration": 1066,
                    "src": "828:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1066",
                      "typeString": "contract ISuperchainPointsRaffle"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 907,
                    "nodeType": "Block",
                    "src": "1240:99:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 899,
                            "name": "superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "1250:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 900,
                            "name": "_superchainPoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "1269:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$356",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1250:36:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 902,
                        "nodeType": "ExpressionStatement",
                        "src": "1250:36:8"
                      },
                      {
                        "expression": {
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 903,
                            "name": "superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 881,
                            "src": "1296:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 904,
                            "name": "_superchainBadges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 893,
                            "src": "1315:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$278",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "src": "1296:36:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 906,
                        "nodeType": "ExpressionStatement",
                        "src": "1296:36:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 885,
                    "nodeType": "StructuredDocumentation",
                    "src": "879:214:8",
                    "text": "@param _initialOwner The initial owner of the contract\n @param _superchainPoints The address of the SuperchainPoints contract\n @param _superchainBadges The address of the SuperchainBadges contract"
                  },
                  "id": 908,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 896,
                          "name": "_initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 887,
                          "src": "1225:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 897,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 895,
                        "name": "Ownable",
                        "nameLocations": [
                          "1217:7:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1217:7:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1217:22:8"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 894,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 887,
                        "mutability": "mutable",
                        "name": "_initialOwner",
                        "nameLocation": "1127:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "1119:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 886,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1119:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 890,
                        "mutability": "mutable",
                        "name": "_superchainPoints",
                        "nameLocation": "1157:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "1150:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$356",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 889,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 888,
                            "name": "IERC20",
                            "nameLocations": [
                              "1150:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 356,
                            "src": "1150:6:8"
                          },
                          "referencedDeclaration": 356,
                          "src": "1150:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$356",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "_superchainBadges",
                        "nameLocation": "1193:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "1184:26:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$278",
                          "typeString": "contract IERC1155"
                        },
                        "typeName": {
                          "id": 892,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 891,
                            "name": "IERC1155",
                            "nameLocations": [
                              "1184:8:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 278,
                            "src": "1184:8:8"
                          },
                          "referencedDeclaration": 278,
                          "src": "1184:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$278",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1109:107:8"
                  },
                  "returnParameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1240:0:8"
                  },
                  "scope": 953,
                  "src": "1098:241:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1086
                  ],
                  "body": {
                    "id": 951,
                    "nodeType": "Block",
                    "src": "1386:341:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 915,
                                  "name": "currentRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 884,
                                  "src": "1408:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1066",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1066",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                ],
                                "id": 914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1400:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 913,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1400:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1400:22:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 919,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1434:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1426:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 917,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1426:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1426:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1400:36:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 922,
                                  "name": "currentRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 884,
                                  "src": "1440:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1066",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                },
                                "id": 923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1454:10:8",
                                "memberName": "isFinished",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1065,
                                "src": "1440:24:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                                  "typeString": "function () view external returns (bool)"
                                }
                              },
                              "id": 924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1440:26:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "66616c7365",
                              "id": 925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1470:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "1440:35:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1400:75:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 932,
                        "nodeType": "IfStatement",
                        "src": "1396:128:8",
                        "trueBody": {
                          "id": 931,
                          "nodeType": "Block",
                          "src": "1477:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 928,
                                  "name": "OngoingRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1071,
                                  "src": "1498:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1498:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 930,
                              "nodeType": "RevertStatement",
                              "src": "1491:22:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 933,
                            "name": "currentRaffle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 884,
                            "src": "1534:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1066",
                              "typeString": "contract ISuperchainPointsRaffle"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 937,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 67,
                                  "src": "1590:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1590:7:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 939,
                                "name": "superchainPoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 878,
                                "src": "1611:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$356",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 940,
                                "name": "superchainBadges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 881,
                                "src": "1641:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC1155_$278",
                                  "typeString": "contract IERC1155"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$356",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC1155_$278",
                                  "typeString": "contract IERC1155"
                                }
                              ],
                              "id": 936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1550:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_IERC20_$356_$_t_contract$_IERC1155_$278_$returns$_t_contract$_SuperchainPointsRaffle_$856_$",
                                "typeString": "function (address,contract IERC20,contract IERC1155) returns (contract SuperchainPointsRaffle)"
                              },
                              "typeName": {
                                "id": 935,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 934,
                                  "name": "SuperchainPointsRaffle",
                                  "nameLocations": [
                                    "1554:22:8"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 856,
                                  "src": "1554:22:8"
                                },
                                "referencedDeclaration": 856,
                                "src": "1554:22:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$856",
                                  "typeString": "contract SuperchainPointsRaffle"
                                }
                              }
                            },
                            "id": 941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1550:117:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperchainPointsRaffle_$856",
                              "typeString": "contract SuperchainPointsRaffle"
                            }
                          },
                          "src": "1534:133:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1066",
                            "typeString": "contract ISuperchainPointsRaffle"
                          }
                        },
                        "id": 943,
                        "nodeType": "ExpressionStatement",
                        "src": "1534:133:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 947,
                                  "name": "currentRaffle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 884,
                                  "src": "1705:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1066",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISuperchainPointsRaffle_$1066",
                                    "typeString": "contract ISuperchainPointsRaffle"
                                  }
                                ],
                                "id": 946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1697:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 945,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1697:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1697:22:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 944,
                            "name": "RaffleCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "1683:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1683:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 950,
                        "nodeType": "EmitStatement",
                        "src": "1678:42:8"
                      }
                    ]
                  },
                  "functionSelector": "485ac2a7",
                  "id": 952,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 911,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 910,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1376:9:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1376:9:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1376:9:8"
                    }
                  ],
                  "name": "createRaffle",
                  "nameLocation": "1354:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 909,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1366:2:8"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1386:0:8"
                  },
                  "scope": 953,
                  "src": "1345:382:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 954,
              "src": "665:1065:8",
              "usedErrors": [
                13,
                18,
                1071
              ],
              "usedEvents": [
                24,
                1077
              ]
            }
          ],
          "src": "32:1699:8"
        },
        "id": 8
      },
      "contracts/interfaces/ISuperchainPointsRaffle.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ISuperchainPointsRaffle.sol",
          "exportedSymbols": {
            "ISuperchainPointsRaffle": [
              1066
            ],
            "ISuperchainPointsRaffleErrors": [
              982
            ],
            "ISuperchainPointsRaffleEvents": [
              1004
            ]
          },
          "id": 1067,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 955,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 982,
              "linearizedBaseContracts": [
                982
              ],
              "name": "ISuperchainPointsRaffleErrors",
              "nameLocation": "68:29:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 956,
                    "nodeType": "StructuredDocumentation",
                    "src": "104:59:9",
                    "text": "@notice Error thrown when the raffle is already started"
                  },
                  "errorSelector": "0dfcbc78",
                  "id": 958,
                  "name": "RaffleAlreadyStarted",
                  "nameLocation": "174:20:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "194:2:9"
                  },
                  "src": "168:29:9"
                },
                {
                  "documentation": {
                    "id": 959,
                    "nodeType": "StructuredDocumentation",
                    "src": "203:55:9",
                    "text": "@notice Error thrown when the raffle is not started"
                  },
                  "errorSelector": "75d47e7f",
                  "id": 961,
                  "name": "NoOngoingRaffle",
                  "nameLocation": "269:15:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 960,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "284:2:9"
                  },
                  "src": "263:24:9"
                },
                {
                  "documentation": {
                    "id": 962,
                    "nodeType": "StructuredDocumentation",
                    "src": "293:51:9",
                    "text": "@notice Error thrown when points transfer fails"
                  },
                  "errorSelector": "90b8ec18",
                  "id": 964,
                  "name": "TransferFailed",
                  "nameLocation": "355:14:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 963,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "369:2:9"
                  },
                  "src": "349:23:9"
                },
                {
                  "documentation": {
                    "id": 965,
                    "nodeType": "StructuredDocumentation",
                    "src": "378:73:9",
                    "text": "@notice Random pattern requires seed to be revealed in a future block"
                  },
                  "errorSelector": "a3665c49",
                  "id": 969,
                  "name": "CannotRevealBeforeBlock",
                  "nameLocation": "462:23:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 968,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 967,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 969,
                        "src": "486:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 966,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "486:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "485:9:9"
                  },
                  "src": "456:39:9"
                },
                {
                  "documentation": {
                    "id": 970,
                    "nodeType": "StructuredDocumentation",
                    "src": "501:68:9",
                    "text": "@notice Error thrown when the seed doesn't match the sealed seed"
                  },
                  "errorSelector": "863a7486",
                  "id": 972,
                  "name": "InvalidSeed",
                  "nameLocation": "580:11:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 971,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "591:2:9"
                  },
                  "src": "574:20:9"
                },
                {
                  "documentation": {
                    "id": 973,
                    "nodeType": "StructuredDocumentation",
                    "src": "600:53:9",
                    "text": "@notice Error thrown when the ticket is not found"
                  },
                  "errorSelector": "0793430c",
                  "id": 975,
                  "name": "TicketNotFound",
                  "nameLocation": "664:14:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 974,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "678:2:9"
                  },
                  "src": "658:23:9"
                },
                {
                  "documentation": {
                    "id": 976,
                    "nodeType": "StructuredDocumentation",
                    "src": "687:125:9",
                    "text": "@notice Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed"
                  },
                  "errorSelector": "2da2704e",
                  "id": 978,
                  "name": "NoTicketsToClaim",
                  "nameLocation": "823:16:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 977,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "839:2:9"
                  },
                  "src": "817:25:9"
                },
                {
                  "documentation": {
                    "id": 979,
                    "nodeType": "StructuredDocumentation",
                    "src": "848:60:9",
                    "text": "@notice Error thrown when the seed has already been used"
                  },
                  "errorSelector": "c1609d28",
                  "id": 981,
                  "name": "SeedAlreadyUsed",
                  "nameLocation": "919:15:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 980,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "934:2:9"
                  },
                  "src": "913:24:9"
                }
              ],
              "scope": 1067,
              "src": "58:881:9",
              "usedErrors": [
                958,
                961,
                964,
                969,
                972,
                975,
                978,
                981
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleEvents",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1004,
              "linearizedBaseContracts": [
                1004
              ],
              "name": "ISuperchainPointsRaffleEvents",
              "nameLocation": "951:29:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 983,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:195:9",
                    "text": "@notice Event emitted when a raffle is started\n @param sealedSeed The seed used to generate the raffle\n @param amount The amount of points to be distributed to the raffle winner"
                  },
                  "eventSelector": "3b81d2f4abc4b25cdb3a280f602aba499a20e5e7f079340839d5e4481c2fff17",
                  "id": 989,
                  "name": "RaffleStarted",
                  "nameLocation": "1193:13:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 988,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 985,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sealedSeed",
                        "nameLocation": "1215:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 989,
                        "src": "1207:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 984,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1207:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 987,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1235:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 989,
                        "src": "1227:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1227:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1206:36:9"
                  },
                  "src": "1187:56:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 990,
                    "nodeType": "StructuredDocumentation",
                    "src": "1249:182:9",
                    "text": "@notice Event emitted when a raffle is finished\n @param winner The address of the raffle winner\n @param amount The amount of points distributed to the raffle winner"
                  },
                  "eventSelector": "7e2ca3905e2a3f4806a624223ea6cdcd30dad54d82e68b44481a5e00f322efc7",
                  "id": 996,
                  "name": "RaffleWinner",
                  "nameLocation": "1442:12:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 995,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 992,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "1463:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "1455:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1455:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 994,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1479:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "1471:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 993,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1471:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1454:32:9"
                  },
                  "src": "1436:51:9"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 997,
                    "nodeType": "StructuredDocumentation",
                    "src": "1493:151:9",
                    "text": "@notice Event emitted when tickets are claimed\n @param claimer The address of the claimer\n @param amount The amount of points claimed"
                  },
                  "eventSelector": "3492e8dc9c9e6d0557ae45dfe2d8cd4fd614084227839a8a969f39b114895425",
                  "id": 1003,
                  "name": "TicketsClaimed",
                  "nameLocation": "1655:14:9",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1002,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 999,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "claimer",
                        "nameLocation": "1678:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "1670:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1670:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1001,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1695:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1003,
                        "src": "1687:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1000,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1687:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1669:33:9"
                  },
                  "src": "1649:54:9"
                }
              ],
              "scope": 1067,
              "src": "941:764:9",
              "usedErrors": [],
              "usedEvents": [
                989,
                996,
                1003
              ]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1005,
                    "name": "ISuperchainPointsRaffleErrors",
                    "nameLocations": [
                      "1748:29:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 982,
                    "src": "1748:29:9"
                  },
                  "id": 1006,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1748:29:9"
                },
                {
                  "baseName": {
                    "id": 1007,
                    "name": "ISuperchainPointsRaffleEvents",
                    "nameLocations": [
                      "1783:29:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1004,
                    "src": "1783:29:9"
                  },
                  "id": 1008,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1783:29:9"
                }
              ],
              "canonicalName": "ISuperchainPointsRaffle",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1066,
              "linearizedBaseContracts": [
                1066,
                1004,
                982
              ],
              "name": "ISuperchainPointsRaffle",
              "nameLocation": "1717:23:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1009,
                    "nodeType": "StructuredDocumentation",
                    "src": "1819:391:9",
                    "text": "@notice Starts the raffle\n @param _sealedSeed The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\n @param _amount The amount of points to be distributed to the raffle winner\n @param _badges The badges that are eligible to participate in the raffle\n @param _badgeAllocation The number of tickets allocated to each badge"
                  },
                  "functionSelector": "58eda682",
                  "id": 1022,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "2224:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1020,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1011,
                        "mutability": "mutable",
                        "name": "_sealedSeed",
                        "nameLocation": "2252:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1022,
                        "src": "2244:19:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1010,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2244:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1013,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2281:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1022,
                        "src": "2273:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1012,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2273:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1016,
                        "mutability": "mutable",
                        "name": "_badges",
                        "nameLocation": "2315:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1022,
                        "src": "2298:24:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1014,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2298:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1015,
                          "nodeType": "ArrayTypeName",
                          "src": "2298:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1019,
                        "mutability": "mutable",
                        "name": "_badgeAllocation",
                        "nameLocation": "2349:16:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1022,
                        "src": "2332:33:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1017,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2332:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1018,
                          "nodeType": "ArrayTypeName",
                          "src": "2332:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2234:137:9"
                  },
                  "returnParameters": {
                    "id": 1021,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2380:0:9"
                  },
                  "scope": 1066,
                  "src": "2215:166:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1023,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:120:9",
                    "text": "@notice Reveals the raffle winner and transfers the points\n @param _seed The seed used to generate the raffle"
                  },
                  "functionSelector": "a9a86f4d",
                  "id": 1028,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revealWinner",
                  "nameLocation": "2521:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1025,
                        "mutability": "mutable",
                        "name": "_seed",
                        "nameLocation": "2542:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "2534:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1024,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2534:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2533:15:9"
                  },
                  "returnParameters": {
                    "id": 1027,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2557:0:9"
                  },
                  "scope": 1066,
                  "src": "2512:46:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1029,
                    "nodeType": "StructuredDocumentation",
                    "src": "2564:82:9",
                    "text": "@notice Returns the amount of points that are distributed to the raffle winner"
                  },
                  "functionSelector": "ecca9c2e",
                  "id": 1034,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPrizeAmount",
                  "nameLocation": "2660:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1030,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2674:2:9"
                  },
                  "returnParameters": {
                    "id": 1033,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1032,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1034,
                        "src": "2700:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1031,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2700:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2699:9:9"
                  },
                  "scope": 1066,
                  "src": "2651:58:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1035,
                    "nodeType": "StructuredDocumentation",
                    "src": "2715:67:9",
                    "text": "@notice Returns the total number of tickets that can be claimed"
                  },
                  "functionSelector": "06e8337f",
                  "id": 1040,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalTickets",
                  "nameLocation": "2796:15:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1036,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2811:2:9"
                  },
                  "returnParameters": {
                    "id": 1039,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1038,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1040,
                        "src": "2837:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2837:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2836:9:9"
                  },
                  "scope": 1066,
                  "src": "2787:59:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1041,
                    "nodeType": "StructuredDocumentation",
                    "src": "2852:105:9",
                    "text": "@notice Returns the number of tickets that can be claimed\n @param user The address of the user"
                  },
                  "functionSelector": "d9f483f8",
                  "id": 1048,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimableTickets",
                  "nameLocation": "2971:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1043,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2999:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1048,
                        "src": "2991:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2991:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2990:14:9"
                  },
                  "returnParameters": {
                    "id": 1047,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1046,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1048,
                        "src": "3028:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1045,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3028:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3027:9:9"
                  },
                  "scope": 1066,
                  "src": "2962:75:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1049,
                    "nodeType": "StructuredDocumentation",
                    "src": "3043:50:9",
                    "text": "@notice Claim tickets to participate in raffle"
                  },
                  "functionSelector": "81fe4c61",
                  "id": 1052,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimTickets",
                  "nameLocation": "3107:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3119:2:9"
                  },
                  "returnParameters": {
                    "id": 1051,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3130:0:9"
                  },
                  "scope": 1066,
                  "src": "3098:33:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1053,
                    "nodeType": "StructuredDocumentation",
                    "src": "3137:77:9",
                    "text": "@notice Returns the badges that are eligible to participate in the raffle"
                  },
                  "functionSelector": "4705ab24",
                  "id": 1059,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEligibleBadges",
                  "nameLocation": "3228:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1054,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3245:2:9"
                  },
                  "returnParameters": {
                    "id": 1058,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1057,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1059,
                        "src": "3271:16:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1055,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3271:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1056,
                          "nodeType": "ArrayTypeName",
                          "src": "3271:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3270:18:9"
                  },
                  "scope": 1066,
                  "src": "3219:70:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1060,
                    "nodeType": "StructuredDocumentation",
                    "src": "3295:50:9",
                    "text": "@notice Returns true if the raffle is finished"
                  },
                  "functionSelector": "7b352962",
                  "id": 1065,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isFinished",
                  "nameLocation": "3359:10:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1061,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3369:2:9"
                  },
                  "returnParameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "3395:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3395:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3394:6:9"
                  },
                  "scope": 1066,
                  "src": "3350:51:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1067,
              "src": "1707:1696:9",
              "usedErrors": [
                958,
                961,
                964,
                969,
                972,
                975,
                978,
                981
              ],
              "usedEvents": [
                989,
                996,
                1003
              ]
            }
          ],
          "src": "32:3372:9"
        },
        "id": 9
      },
      "contracts/interfaces/ISuperchainPointsRaffleFactory.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ISuperchainPointsRaffleFactory.sol",
          "exportedSymbols": {
            "ISuperchainPointsRaffleFactory": [
              1087
            ],
            "ISuperchainPointsRaffleFactoryErrors": [
              1072
            ],
            "ISuperchainPointsRaffleFactoryEvents": [
              1078
            ]
          },
          "id": 1088,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1068,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".29"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleFactoryErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1072,
              "linearizedBaseContracts": [
                1072
              ],
              "name": "ISuperchainPointsRaffleFactoryErrors",
              "nameLocation": "68:36:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1069,
                    "nodeType": "StructuredDocumentation",
                    "src": "111:60:10",
                    "text": "@notice Cannot create a raffle if one is already started"
                  },
                  "errorSelector": "ac7aae87",
                  "id": 1071,
                  "name": "OngoingRaffle",
                  "nameLocation": "182:13:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1070,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "195:2:10"
                  },
                  "src": "176:22:10"
                }
              ],
              "scope": 1088,
              "src": "58:142:10",
              "usedErrors": [
                1071
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISuperchainPointsRaffleFactoryEvents",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 1078,
              "linearizedBaseContracts": [
                1078
              ],
              "name": "ISuperchainPointsRaffleFactoryEvents",
              "nameLocation": "212:36:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1073,
                    "nodeType": "StructuredDocumentation",
                    "src": "255:44:10",
                    "text": "@notice Emitted when a raffle is created"
                  },
                  "eventSelector": "54ad4cc1960f9b16b4a7fd9f5ee7c05b4de5672cb94bc1dbad3de1ed291c248b",
                  "id": 1077,
                  "name": "RaffleCreated",
                  "nameLocation": "310:13:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1075,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "raffle",
                        "nameLocation": "332:6:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1077,
                        "src": "324:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "324:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "323:16:10"
                  },
                  "src": "304:36:10"
                }
              ],
              "scope": 1088,
              "src": "202:140:10",
              "usedErrors": [],
              "usedEvents": [
                1077
              ]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1079,
                    "name": "ISuperchainPointsRaffleFactoryErrors",
                    "nameLocations": [
                      "392:36:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1072,
                    "src": "392:36:10"
                  },
                  "id": 1080,
                  "nodeType": "InheritanceSpecifier",
                  "src": "392:36:10"
                },
                {
                  "baseName": {
                    "id": 1081,
                    "name": "ISuperchainPointsRaffleFactoryEvents",
                    "nameLocations": [
                      "434:36:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1078,
                    "src": "434:36:10"
                  },
                  "id": 1082,
                  "nodeType": "InheritanceSpecifier",
                  "src": "434:36:10"
                }
              ],
              "canonicalName": "ISuperchainPointsRaffleFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1087,
              "linearizedBaseContracts": [
                1087,
                1078,
                1072
              ],
              "name": "ISuperchainPointsRaffleFactory",
              "nameLocation": "354:30:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1083,
                    "nodeType": "StructuredDocumentation",
                    "src": "477:65:10",
                    "text": "@notice Checks previous raffle state and creates a new raffle"
                  },
                  "functionSelector": "485ac2a7",
                  "id": 1086,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createRaffle",
                  "nameLocation": "556:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "568:2:10"
                  },
                  "returnParameters": {
                    "id": 1085,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "579:0:10"
                  },
                  "scope": 1087,
                  "src": "547:33:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1088,
              "src": "344:238:10",
              "usedErrors": [
                1071
              ],
              "usedEvents": [
                1077
              ]
            }
          ],
          "src": "32:551:10"
        },
        "id": 10
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
        "IERC1155": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "name": "TransferBatch",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "TransferSingle",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "URI",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "accounts",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                }
              ],
              "name": "balanceOfBatch",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ids",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeBatchTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "balanceOf(address,uint256)": "00fdd58e",
              "balanceOfBatch(address[],uint256[])": "4e1273f4",
              "isApprovedForAll(address,address)": "e985e9c5",
              "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
              "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "contracts/SuperchainPointsRaffle.sol": {
        "SuperchainPointsRaffle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_initialOwner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_superchainPoints",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC1155",
                  "name": "_superchainBadges",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeBlock",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSeed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoOngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoTicketsToClaim",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RaffleAlreadyStarted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SeedAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TicketNotFound",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "sealedSeed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleWinner",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TicketsClaimed",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "badgeAllocations",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimTickets",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "eligibleBadges",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "finished",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimableTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEligibleBadges",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPrizeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_sealedSeed",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badges",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badgeAllocation",
                  "type": "uint256[]"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isFinished",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "prize",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_seed",
                  "type": "bytes32"
                }
              ],
              "name": "revealWinner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sealedSeed",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "storedBlockNumber",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainBadges",
              "outputs": [
                {
                  "internalType": "contract IERC1155",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainPoints",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ticketCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "tickets",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "ticketsClaimed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "winner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_474": {
                  "entryPoint": null,
                  "id": 474,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 168,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory": {
                  "entryPoint": 272,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 248,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:909:11",
                    "nodeType": "YulBlock",
                    "src": "0:909:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "59:86:11",
                          "nodeType": "YulBlock",
                          "src": "59:86:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "123:16:11",
                                "nodeType": "YulBlock",
                                "src": "123:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "132:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "132:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "135:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "135:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "125:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:6:11"
                                      },
                                      "nativeSrc": "125:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "125:12:11"
                                    },
                                    "nativeSrc": "125:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "125:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "82:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "93:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "108:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "108:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "113:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "113:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "104:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "104:3:11"
                                                },
                                                "nativeSrc": "104:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "104:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "117:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "117:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "100:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "100:3:11"
                                            },
                                            "nativeSrc": "100:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "100:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "89:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:11"
                                        },
                                        "nativeSrc": "89:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "79:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:11"
                                    },
                                    "nativeSrc": "79:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "72:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:11"
                                },
                                "nativeSrc": "72:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "72:50:11"
                              },
                              "nativeSrc": "69:70:11",
                              "nodeType": "YulIf",
                              "src": "69:70:11"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nativeSrc": "14:131:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "48:5:11",
                            "nodeType": "YulTypedName",
                            "src": "48:5:11",
                            "type": ""
                          }
                        ],
                        "src": "14:131:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "295:404:11",
                          "nodeType": "YulBlock",
                          "src": "295:404:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "341:16:11",
                                "nodeType": "YulBlock",
                                "src": "341:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "350:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "350:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "353:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "353:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "343:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "343:6:11"
                                      },
                                      "nativeSrc": "343:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "343:12:11"
                                    },
                                    "nativeSrc": "343:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "343:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "316:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "316:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "325:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "325:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "312:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "312:3:11"
                                    },
                                    "nativeSrc": "312:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "312:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "337:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "337:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "308:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:3:11"
                                },
                                "nativeSrc": "308:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "308:32:11"
                              },
                              "nativeSrc": "305:52:11",
                              "nodeType": "YulIf",
                              "src": "305:52:11"
                            },
                            {
                              "nativeSrc": "366:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "366:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "385:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "385:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "379:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:5:11"
                                },
                                "nativeSrc": "379:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "379:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "370:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "370:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "429:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "429:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "404:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:24:11"
                                },
                                "nativeSrc": "404:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "404:31:11"
                              },
                              "nativeSrc": "404:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "404:31:11"
                            },
                            {
                              "nativeSrc": "444:15:11",
                              "nodeType": "YulAssignment",
                              "src": "444:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "454:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "454:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "444:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "468:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "468:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "493:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "493:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "504:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "504:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "489:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:3:11"
                                    },
                                    "nativeSrc": "489:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "483:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "483:5:11"
                                },
                                "nativeSrc": "483:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "483:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "472:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "472:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "542:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "542:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "517:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "517:24:11"
                                },
                                "nativeSrc": "517:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "517:33:11"
                              },
                              "nativeSrc": "517:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "517:33:11"
                            },
                            {
                              "nativeSrc": "559:17:11",
                              "nodeType": "YulAssignment",
                              "src": "559:17:11",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "569:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "569:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "559:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "559:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "585:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "585:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "610:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "610:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "621:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "621:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "606:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "606:3:11"
                                    },
                                    "nativeSrc": "606:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "606:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "600:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "600:5:11"
                                },
                                "nativeSrc": "600:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "600:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "589:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "589:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nativeSrc": "659:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "659:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "634:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "634:24:11"
                                },
                                "nativeSrc": "634:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "634:33:11"
                              },
                              "nativeSrc": "634:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "634:33:11"
                            },
                            {
                              "nativeSrc": "676:17:11",
                              "nodeType": "YulAssignment",
                              "src": "676:17:11",
                              "value": {
                                "name": "value_2",
                                "nativeSrc": "686:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "686:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "676:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory",
                        "nativeSrc": "150:549:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "245:9:11",
                            "nodeType": "YulTypedName",
                            "src": "245:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "256:7:11",
                            "nodeType": "YulTypedName",
                            "src": "256:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "268:6:11",
                            "nodeType": "YulTypedName",
                            "src": "268:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "276:6:11",
                            "nodeType": "YulTypedName",
                            "src": "276:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "284:6:11",
                            "nodeType": "YulTypedName",
                            "src": "284:6:11",
                            "type": ""
                          }
                        ],
                        "src": "150:549:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "805:102:11",
                          "nodeType": "YulBlock",
                          "src": "805:102:11",
                          "statements": [
                            {
                              "nativeSrc": "815:26:11",
                              "nodeType": "YulAssignment",
                              "src": "815:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "827:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "838:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "838:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "823:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "823:3:11"
                                },
                                "nativeSrc": "823:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "823:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "815:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "857:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "872:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "872:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "888:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "888:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "893:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "893:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "884:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "884:3:11"
                                            },
                                            "nativeSrc": "884:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "884:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "897:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "897:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "880:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "880:3:11"
                                        },
                                        "nativeSrc": "880:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "880:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "868:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "868:3:11"
                                    },
                                    "nativeSrc": "868:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "868:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "850:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "850:6:11"
                                },
                                "nativeSrc": "850:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "850:51:11"
                              },
                              "nativeSrc": "850:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "850:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "704:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "774:9:11",
                            "nodeType": "YulTypedName",
                            "src": "774:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "785:6:11",
                            "nodeType": "YulTypedName",
                            "src": "785:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "796:4:11",
                            "nodeType": "YulTypedName",
                            "src": "796:4:11",
                            "type": ""
                          }
                        ],
                        "src": "704:203:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFE7 CODESIZE SUB DUP1 PUSH2 0xFE7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3D SWAP2 PUSH2 0x110 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75 DUP2 PUSH2 0xA8 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x15D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x130 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x141 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x152 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xE7B DUP1 PUSH2 0x16C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA94BD919 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD8C4A454 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD8C4A454 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xECCA9C2E EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xCFBD900F EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xD2A8C791 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x58EDA682 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x58EDA682 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x6DC3AE8F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xFE85616 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x56C77EBE EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x156 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x18C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x34E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP5 DUP2 SSTORE PUSH2 0x3E4 SWAP1 NUMBER SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x5 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x406 JUMPI PUSH2 0x406 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x444 SWAP2 PUSH1 0xA SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB61 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4DC JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x463 JUMPI PUSH2 0x463 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x481 JUMPI PUSH2 0x481 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4AD JUMPI PUSH2 0x4AD PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x539 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5BB SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x5DC PUSH1 0x0 PUSH2 0xB11 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x600 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x629 CALLER PUSH2 0x959 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST DUP2 PUSH1 0x7 SLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x650 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6B8 SWAP1 DUP5 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x6EF SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x702 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x724 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD NUMBER LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x7 SLOAD PUSH1 0x8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x821 SWAP1 DUP5 PUSH2 0xE0A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH2 0x8A9 SWAP4 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH1 0x4 ADD PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x94C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x982 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x4 SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x9BC JUMPI PUSH2 0x9BC PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP3 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST GT ISZERO PUSH2 0xA97 JUMPI DUP2 PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA43 JUMPI PUSH2 0xA43 PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA97 JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA7A JUMPI PUSH2 0xA7A PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x986 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAE PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xAE1 DUP2 PUSH2 0xB11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DC JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xB9C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB9C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB81 JUMP JUMPDEST POP PUSH2 0xBA8 SWAP3 SWAP2 POP PUSH2 0xBAC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC29 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC0B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA2 PUSH2 0xC61 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCCF JUMPI PUSH2 0xCCF PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xCED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xD0C JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCF4 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5D DUP8 DUP3 DUP9 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD86 DUP8 DUP3 DUP9 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDB3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xA6 EXP COINBASE MOD SWAP8 SWAP15 PUSH15 0xAD6C4AB72A4FE9D5C681C928B9968F 0x21 0x1F DUP5 0x26 PUSH14 0xE28939A664736F6C634300081D00 CALLER ",
              "sourceMap": "506:5309:7:-:0;;;603:5;580:28;;-1:-1:-1;;;;614:33:7;;;1300:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1427:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;850:51:11;823:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1452:16:7::1;:36:::0;;-1:-1:-1;;;;;1452:36:7;;::::1;-1:-1:-1::0;;;;;;1452:36:7;;::::1;;::::0;;;1498:16:::1;:36:::0;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;506:5309:7;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:131:11:-;-1:-1:-1;;;;;89:31:11;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:549::-;268:6;276;284;337:2;325:9;316:7;312:23;308:32;305:52;;;353:1;350;343:12;305:52;385:9;379:16;404:31;429:5;404:31;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:33:11;483:25;517:33;:::i;:::-;621:2;606:18;;600:25;569:7;;-1:-1:-1;634:33:11;600:25;634:33;:::i;:::-;686:7;676:17;;;150:549;;;;;:::o;704:203::-;506:5309:7;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_84": {
                  "entryPoint": 2788,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_368": {
                  "entryPoint": null,
                  "id": 368,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 2833,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@badgeAllocations_450": {
                  "entryPoint": null,
                  "id": 450,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@claimTickets_755": {
                  "entryPoint": 1502,
                  "id": 755,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@eligibleBadges_446": {
                  "entryPoint": 876,
                  "id": 446,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@finished_416": {
                  "entryPoint": null,
                  "id": 416,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getClaimableTickets_818": {
                  "entryPoint": 2393,
                  "id": 818,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getEligibleBadges_846": {
                  "entryPoint": 788,
                  "id": 846,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getPrizeAmount_836": {
                  "entryPoint": null,
                  "id": 836,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getTotalTickets_827": {
                  "entryPoint": null,
                  "id": 827,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@initialize_585": {
                  "entryPoint": 909,
                  "id": 585,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@isFinished_855": {
                  "entryPoint": null,
                  "id": 855,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@prize_431": {
                  "entryPoint": null,
                  "id": 431,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@renounceOwnership_98": {
                  "entryPoint": 1482,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@revealWinner_688": {
                  "entryPoint": 1786,
                  "id": 688,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@sealedSeed_421": {
                  "entryPoint": null,
                  "id": 421,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@storedBlockNumber_423": {
                  "entryPoint": null,
                  "id": 423,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainBadges_429": {
                  "entryPoint": null,
                  "id": 429,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainPoints_426": {
                  "entryPoint": null,
                  "id": 426,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@ticketCount_435": {
                  "entryPoint": null,
                  "id": 435,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@ticketsClaimed_443": {
                  "entryPoint": null,
                  "id": 443,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@tickets_439": {
                  "entryPoint": null,
                  "id": 439,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_126": {
                  "entryPoint": 2726,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@winner_433": {
                  "entryPoint": null,
                  "id": 433,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_array_uint256_dyn": {
                  "entryPoint": 3191,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 3009,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 3535,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32t_uint256t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 3350,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 3124,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 3628,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 3149,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": 3569,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 3057,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 3474,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mod_t_uint256": {
                  "entryPoint": 3594,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x32": {
                  "entryPoint": 3513,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 3169,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:7014:11",
                    "nodeType": "YulBlock",
                    "src": "0:7014:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "115:76:11",
                          "nodeType": "YulBlock",
                          "src": "115:76:11",
                          "statements": [
                            {
                              "nativeSrc": "125:26:11",
                              "nodeType": "YulAssignment",
                              "src": "125:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "137:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "148:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "133:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:11"
                                },
                                "nativeSrc": "133:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "125:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "167:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "178:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "160:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:11"
                                },
                                "nativeSrc": "160:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:11"
                              },
                              "nativeSrc": "160:25:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "14:177:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "84:9:11",
                            "nodeType": "YulTypedName",
                            "src": "84:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "95:6:11",
                            "nodeType": "YulTypedName",
                            "src": "95:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "106:4:11",
                            "nodeType": "YulTypedName",
                            "src": "106:4:11",
                            "type": ""
                          }
                        ],
                        "src": "14:177:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "266:216:11",
                          "nodeType": "YulBlock",
                          "src": "266:216:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "312:16:11",
                                "nodeType": "YulBlock",
                                "src": "312:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "321:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "321:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "324:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "324:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "314:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "314:6:11"
                                      },
                                      "nativeSrc": "314:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "314:12:11"
                                    },
                                    "nativeSrc": "314:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "314:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "287:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "287:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "296:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "296:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "283:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "283:3:11"
                                    },
                                    "nativeSrc": "283:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "283:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "308:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "308:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "279:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "279:3:11"
                                },
                                "nativeSrc": "279:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "279:32:11"
                              },
                              "nativeSrc": "276:52:11",
                              "nodeType": "YulIf",
                              "src": "276:52:11"
                            },
                            {
                              "nativeSrc": "337:36:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "337:36:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "363:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "363:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "350:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "350:12:11"
                                },
                                "nativeSrc": "350:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "350:23:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "341:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "341:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "436:16:11",
                                "nodeType": "YulBlock",
                                "src": "436:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "445:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "445:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "448:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "448:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "438:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "438:6:11"
                                      },
                                      "nativeSrc": "438:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "438:12:11"
                                    },
                                    "nativeSrc": "438:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "438:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "395:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "395:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "406:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "406:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "421:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "421:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "426:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "426:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "417:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "417:3:11"
                                                },
                                                "nativeSrc": "417:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "417:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "430:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "430:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "413:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "413:3:11"
                                            },
                                            "nativeSrc": "413:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "413:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "402:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "402:3:11"
                                        },
                                        "nativeSrc": "402:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "402:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "392:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "392:2:11"
                                    },
                                    "nativeSrc": "392:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "392:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "385:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "385:6:11"
                                },
                                "nativeSrc": "385:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "385:50:11"
                              },
                              "nativeSrc": "382:70:11",
                              "nodeType": "YulIf",
                              "src": "382:70:11"
                            },
                            {
                              "nativeSrc": "461:15:11",
                              "nodeType": "YulAssignment",
                              "src": "461:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "471:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "471:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "461:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "461:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "196:286:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "232:9:11",
                            "nodeType": "YulTypedName",
                            "src": "232:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "243:7:11",
                            "nodeType": "YulTypedName",
                            "src": "243:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "255:6:11",
                            "nodeType": "YulTypedName",
                            "src": "255:6:11",
                            "type": ""
                          }
                        ],
                        "src": "196:286:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "582:92:11",
                          "nodeType": "YulBlock",
                          "src": "582:92:11",
                          "statements": [
                            {
                              "nativeSrc": "592:26:11",
                              "nodeType": "YulAssignment",
                              "src": "592:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "604:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "604:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "615:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "615:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "600:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "600:3:11"
                                },
                                "nativeSrc": "600:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "600:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "592:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "592:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "634:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "634:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "659:6:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "659:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "652:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "652:6:11"
                                        },
                                        "nativeSrc": "652:14:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "652:14:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "645:6:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "645:6:11"
                                    },
                                    "nativeSrc": "645:22:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "645:22:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "627:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "627:6:11"
                                },
                                "nativeSrc": "627:41:11",
                                "nodeType": "YulFunctionCall",
                                "src": "627:41:11"
                              },
                              "nativeSrc": "627:41:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "627:41:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "487:187:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "551:9:11",
                            "nodeType": "YulTypedName",
                            "src": "551:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "562:6:11",
                            "nodeType": "YulTypedName",
                            "src": "562:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "573:4:11",
                            "nodeType": "YulTypedName",
                            "src": "573:4:11",
                            "type": ""
                          }
                        ],
                        "src": "487:187:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "830:460:11",
                          "nodeType": "YulBlock",
                          "src": "830:460:11",
                          "statements": [
                            {
                              "nativeSrc": "840:32:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "840:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "858:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "858:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "869:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "869:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "854:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "854:3:11"
                                },
                                "nativeSrc": "854:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "854:18:11"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nativeSrc": "844:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "844:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "888:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "888:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "899:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "899:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "881:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "881:6:11"
                                },
                                "nativeSrc": "881:21:11",
                                "nodeType": "YulFunctionCall",
                                "src": "881:21:11"
                              },
                              "nativeSrc": "881:21:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "881:21:11"
                            },
                            {
                              "nativeSrc": "911:17:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "911:17:11",
                              "value": {
                                "name": "tail_1",
                                "nativeSrc": "922:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "922:6:11"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "915:3:11",
                                  "nodeType": "YulTypedName",
                                  "src": "915:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "937:27:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "937:27:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "957:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "957:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "951:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "951:5:11"
                                },
                                "nativeSrc": "951:13:11",
                                "nodeType": "YulFunctionCall",
                                "src": "951:13:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "941:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "941:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nativeSrc": "980:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "980:6:11"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "988:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "988:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "973:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "973:6:11"
                                },
                                "nativeSrc": "973:22:11",
                                "nodeType": "YulFunctionCall",
                                "src": "973:22:11"
                              },
                              "nativeSrc": "973:22:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "973:22:11"
                            },
                            {
                              "nativeSrc": "1004:25:11",
                              "nodeType": "YulAssignment",
                              "src": "1004:25:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1015:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1015:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1026:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1026:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1011:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1011:3:11"
                                },
                                "nativeSrc": "1011:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1011:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "1004:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1004:3:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1038:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1038:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1056:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1056:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1064:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1064:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1052:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1052:3:11"
                                },
                                "nativeSrc": "1052:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1052:15:11"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nativeSrc": "1042:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1042:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1076:10:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1076:10:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1085:1:11",
                                "nodeType": "YulLiteral",
                                "src": "1085:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "1080:1:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1080:1:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1144:120:11",
                                "nodeType": "YulBlock",
                                "src": "1144:120:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "1165:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1165:3:11"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nativeSrc": "1176:6:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1176:6:11"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "1170:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "1170:5:11"
                                          },
                                          "nativeSrc": "1170:13:11",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1170:13:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "1158:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1158:6:11"
                                      },
                                      "nativeSrc": "1158:26:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1158:26:11"
                                    },
                                    "nativeSrc": "1158:26:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1158:26:11"
                                  },
                                  {
                                    "nativeSrc": "1197:19:11",
                                    "nodeType": "YulAssignment",
                                    "src": "1197:19:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "1208:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1208:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1213:2:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1213:2:11",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1204:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1204:3:11"
                                      },
                                      "nativeSrc": "1204:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1204:12:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "1197:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1197:3:11"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "1229:25:11",
                                    "nodeType": "YulAssignment",
                                    "src": "1229:25:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nativeSrc": "1243:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1243:6:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1251:2:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1251:2:11",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1239:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1239:3:11"
                                      },
                                      "nativeSrc": "1239:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1239:15:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nativeSrc": "1229:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1229:6:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "1106:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1106:1:11"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "1109:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1109:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "1103:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1103:2:11"
                                },
                                "nativeSrc": "1103:13:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1103:13:11"
                              },
                              "nativeSrc": "1095:169:11",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "1117:18:11",
                                "nodeType": "YulBlock",
                                "src": "1117:18:11",
                                "statements": [
                                  {
                                    "nativeSrc": "1119:14:11",
                                    "nodeType": "YulAssignment",
                                    "src": "1119:14:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "1128:1:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1128:1:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1131:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1131:1:11",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1124:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1124:3:11"
                                      },
                                      "nativeSrc": "1124:9:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1124:9:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "1119:1:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1119:1:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "1099:3:11",
                                "nodeType": "YulBlock",
                                "src": "1099:3:11",
                                "statements": []
                              },
                              "src": "1095:169:11"
                            },
                            {
                              "nativeSrc": "1273:11:11",
                              "nodeType": "YulAssignment",
                              "src": "1273:11:11",
                              "value": {
                                "name": "pos",
                                "nativeSrc": "1281:3:11",
                                "nodeType": "YulIdentifier",
                                "src": "1281:3:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1273:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1273:4:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                        "nativeSrc": "679:611:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "799:9:11",
                            "nodeType": "YulTypedName",
                            "src": "799:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "810:6:11",
                            "nodeType": "YulTypedName",
                            "src": "810:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "821:4:11",
                            "nodeType": "YulTypedName",
                            "src": "821:4:11",
                            "type": ""
                          }
                        ],
                        "src": "679:611:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1365:156:11",
                          "nodeType": "YulBlock",
                          "src": "1365:156:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1411:16:11",
                                "nodeType": "YulBlock",
                                "src": "1411:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1420:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1420:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1423:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1423:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1413:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1413:6:11"
                                      },
                                      "nativeSrc": "1413:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1413:12:11"
                                    },
                                    "nativeSrc": "1413:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1413:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1386:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1386:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1395:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1395:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1382:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1382:3:11"
                                    },
                                    "nativeSrc": "1382:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1382:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1407:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1407:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1378:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1378:3:11"
                                },
                                "nativeSrc": "1378:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1378:32:11"
                              },
                              "nativeSrc": "1375:52:11",
                              "nodeType": "YulIf",
                              "src": "1375:52:11"
                            },
                            {
                              "nativeSrc": "1436:14:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1436:14:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1449:1:11",
                                "nodeType": "YulLiteral",
                                "src": "1449:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1440:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1440:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1459:32:11",
                              "nodeType": "YulAssignment",
                              "src": "1459:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1481:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1481:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1468:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1468:12:11"
                                },
                                "nativeSrc": "1468:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1468:23:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1459:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1459:5:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1500:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1500:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1510:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "1510:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1500:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1500:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "1295:226:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1331:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1331:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1342:7:11",
                            "nodeType": "YulTypedName",
                            "src": "1342:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1354:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1354:6:11",
                            "type": ""
                          }
                        ],
                        "src": "1295:226:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1627:102:11",
                          "nodeType": "YulBlock",
                          "src": "1627:102:11",
                          "statements": [
                            {
                              "nativeSrc": "1637:26:11",
                              "nodeType": "YulAssignment",
                              "src": "1637:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1649:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1649:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1660:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1660:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1645:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1645:3:11"
                                },
                                "nativeSrc": "1645:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1645:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1637:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1637:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1679:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1679:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1694:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1694:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1710:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1710:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1715:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1715:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1706:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1706:3:11"
                                            },
                                            "nativeSrc": "1706:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1706:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1719:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1719:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1702:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1702:3:11"
                                        },
                                        "nativeSrc": "1702:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1702:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1690:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1690:3:11"
                                    },
                                    "nativeSrc": "1690:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1690:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1672:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1672:6:11"
                                },
                                "nativeSrc": "1672:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1672:51:11"
                              },
                              "nativeSrc": "1672:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1672:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "1526:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1596:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1596:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1607:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1607:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1618:4:11",
                            "nodeType": "YulTypedName",
                            "src": "1618:4:11",
                            "type": ""
                          }
                        ],
                        "src": "1526:203:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1766:95:11",
                          "nodeType": "YulBlock",
                          "src": "1766:95:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1783:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1783:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1790:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1790:3:11",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1795:10:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1795:10:11",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "1786:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1786:3:11"
                                    },
                                    "nativeSrc": "1786:20:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1786:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1776:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1776:6:11"
                                },
                                "nativeSrc": "1776:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1776:31:11"
                              },
                              "nativeSrc": "1776:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1776:31:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1823:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1823:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1826:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1826:4:11",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1816:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1816:6:11"
                                },
                                "nativeSrc": "1816:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1816:15:11"
                              },
                              "nativeSrc": "1816:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1816:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1847:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1847:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1850:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1850:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "1840:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1840:6:11"
                                },
                                "nativeSrc": "1840:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1840:15:11"
                              },
                              "nativeSrc": "1840:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1840:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "1734:127:11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1734:127:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1930:890:11",
                          "nodeType": "YulBlock",
                          "src": "1930:890:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1979:16:11",
                                "nodeType": "YulBlock",
                                "src": "1979:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1988:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1988:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1991:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1991:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1981:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1981:6:11"
                                      },
                                      "nativeSrc": "1981:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1981:12:11"
                                    },
                                    "nativeSrc": "1981:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1981:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "1958:6:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "1958:6:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1966:4:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1966:4:11",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1954:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1954:3:11"
                                        },
                                        "nativeSrc": "1954:17:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1954:17:11"
                                      },
                                      {
                                        "name": "end",
                                        "nativeSrc": "1973:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1973:3:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "1950:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1950:3:11"
                                    },
                                    "nativeSrc": "1950:27:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1950:27:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1943:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1943:6:11"
                                },
                                "nativeSrc": "1943:35:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1943:35:11"
                              },
                              "nativeSrc": "1940:55:11",
                              "nodeType": "YulIf",
                              "src": "1940:55:11"
                            },
                            {
                              "nativeSrc": "2004:34:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2004:34:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "2031:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2031:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2018:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2018:12:11"
                                },
                                "nativeSrc": "2018:20:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2018:20:11"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "2008:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2008:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2081:22:11",
                                "nodeType": "YulBlock",
                                "src": "2081:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "2083:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2083:16:11"
                                      },
                                      "nativeSrc": "2083:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2083:18:11"
                                    },
                                    "nativeSrc": "2083:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2083:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "2053:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2053:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2061:18:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2061:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2050:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2050:2:11"
                                },
                                "nativeSrc": "2050:30:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2050:30:11"
                              },
                              "nativeSrc": "2047:56:11",
                              "nodeType": "YulIf",
                              "src": "2047:56:11"
                            },
                            {
                              "nativeSrc": "2112:24:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2112:24:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2126:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2126:1:11",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "2129:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2129:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "2122:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2122:3:11"
                                },
                                "nativeSrc": "2122:14:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2122:14:11"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "2116:2:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2116:2:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2145:23:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2145:23:11",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2165:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2165:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2159:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2159:5:11"
                                },
                                "nativeSrc": "2159:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2159:9:11"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "2149:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2149:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2177:56:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2177:56:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "2199:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2199:6:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "2215:2:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "2215:2:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2219:2:11",
                                            "nodeType": "YulLiteral",
                                            "src": "2219:2:11",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "2211:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2211:3:11"
                                        },
                                        "nativeSrc": "2211:11:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2211:11:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "2228:2:11",
                                            "nodeType": "YulLiteral",
                                            "src": "2228:2:11",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "2224:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2224:3:11"
                                        },
                                        "nativeSrc": "2224:7:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2224:7:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "2207:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2207:3:11"
                                    },
                                    "nativeSrc": "2207:25:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2207:25:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2195:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2195:3:11"
                                },
                                "nativeSrc": "2195:38:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2195:38:11"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "2181:10:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2181:10:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2308:22:11",
                                "nodeType": "YulBlock",
                                "src": "2308:22:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "2310:16:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2310:16:11"
                                      },
                                      "nativeSrc": "2310:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2310:18:11"
                                    },
                                    "nativeSrc": "2310:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2310:18:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "2251:10:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2251:10:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2263:18:11",
                                        "nodeType": "YulLiteral",
                                        "src": "2263:18:11",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "2248:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2248:2:11"
                                    },
                                    "nativeSrc": "2248:34:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2248:34:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "2287:10:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2287:10:11"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "2299:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2299:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "2284:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2284:2:11"
                                    },
                                    "nativeSrc": "2284:22:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2284:22:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "2245:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2245:2:11"
                                },
                                "nativeSrc": "2245:62:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2245:62:11"
                              },
                              "nativeSrc": "2242:88:11",
                              "nodeType": "YulIf",
                              "src": "2242:88:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2346:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2346:2:11",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "2350:10:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2350:10:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2339:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2339:6:11"
                                },
                                "nativeSrc": "2339:22:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2339:22:11"
                              },
                              "nativeSrc": "2339:22:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "2339:22:11"
                            },
                            {
                              "nativeSrc": "2370:17:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2370:17:11",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "2381:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "2381:6:11"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nativeSrc": "2374:3:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2374:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "2403:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2403:6:11"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "2411:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2411:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2396:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2396:6:11"
                                },
                                "nativeSrc": "2396:22:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2396:22:11"
                              },
                              "nativeSrc": "2396:22:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "2396:22:11"
                            },
                            {
                              "nativeSrc": "2427:24:11",
                              "nodeType": "YulAssignment",
                              "src": "2427:24:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "2438:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2438:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2446:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2446:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2434:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2434:3:11"
                                },
                                "nativeSrc": "2434:17:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2434:17:11"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nativeSrc": "2427:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2427:3:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2460:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2460:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "2482:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2482:6:11"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "2490:2:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2490:2:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2478:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "2478:3:11"
                                    },
                                    "nativeSrc": "2478:15:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2478:15:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2495:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2495:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2474:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2474:3:11"
                                },
                                "nativeSrc": "2474:26:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2474:26:11"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nativeSrc": "2464:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2464:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2528:16:11",
                                "nodeType": "YulBlock",
                                "src": "2528:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2537:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2537:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2540:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2540:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2530:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2530:6:11"
                                      },
                                      "nativeSrc": "2530:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2530:12:11"
                                    },
                                    "nativeSrc": "2530:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2530:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nativeSrc": "2515:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2515:6:11"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "2523:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2523:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "2512:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2512:2:11"
                                },
                                "nativeSrc": "2512:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2512:15:11"
                              },
                              "nativeSrc": "2509:35:11",
                              "nodeType": "YulIf",
                              "src": "2509:35:11"
                            },
                            {
                              "nativeSrc": "2553:28:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2553:28:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "2568:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2568:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2576:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "2576:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2564:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2564:3:11"
                                },
                                "nativeSrc": "2564:17:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2564:17:11"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nativeSrc": "2557:3:11",
                                  "nodeType": "YulTypedName",
                                  "src": "2557:3:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2648:142:11",
                                "nodeType": "YulBlock",
                                "src": "2648:142:11",
                                "statements": [
                                  {
                                    "nativeSrc": "2662:14:11",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2662:14:11",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "2675:1:11",
                                      "nodeType": "YulLiteral",
                                      "src": "2675:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "2666:5:11",
                                        "nodeType": "YulTypedName",
                                        "src": "2666:5:11",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "2689:26:11",
                                    "nodeType": "YulAssignment",
                                    "src": "2689:26:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nativeSrc": "2711:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2711:3:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nativeSrc": "2698:12:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2698:12:11"
                                      },
                                      "nativeSrc": "2698:17:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2698:17:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "2689:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2689:5:11"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nativeSrc": "2735:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2735:3:11"
                                        },
                                        {
                                          "name": "value",
                                          "nativeSrc": "2740:5:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2740:5:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "2728:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2728:6:11"
                                      },
                                      "nativeSrc": "2728:18:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2728:18:11"
                                    },
                                    "nativeSrc": "2728:18:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2728:18:11"
                                  },
                                  {
                                    "nativeSrc": "2759:21:11",
                                    "nodeType": "YulAssignment",
                                    "src": "2759:21:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nativeSrc": "2770:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2770:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2775:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2775:4:11",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2766:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2766:3:11"
                                      },
                                      "nativeSrc": "2766:14:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2766:14:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nativeSrc": "2759:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2759:3:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "2601:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2601:3:11"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nativeSrc": "2606:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "2606:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "2598:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2598:2:11"
                                },
                                "nativeSrc": "2598:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "2598:15:11"
                              },
                              "nativeSrc": "2590:200:11",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "2614:25:11",
                                "nodeType": "YulBlock",
                                "src": "2614:25:11",
                                "statements": [
                                  {
                                    "nativeSrc": "2616:21:11",
                                    "nodeType": "YulAssignment",
                                    "src": "2616:21:11",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nativeSrc": "2627:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "2627:3:11"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2632:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "2632:4:11",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2623:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2623:3:11"
                                      },
                                      "nativeSrc": "2623:14:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2623:14:11"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nativeSrc": "2616:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "2616:3:11"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "2594:3:11",
                                "nodeType": "YulBlock",
                                "src": "2594:3:11",
                                "statements": []
                              },
                              "src": "2590:200:11"
                            },
                            {
                              "nativeSrc": "2799:15:11",
                              "nodeType": "YulAssignment",
                              "src": "2799:15:11",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "2808:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "2808:6:11"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nativeSrc": "2799:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "2799:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_uint256_dyn",
                        "nativeSrc": "1866:954:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "1904:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1904:6:11",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "1912:3:11",
                            "nodeType": "YulTypedName",
                            "src": "1912:3:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nativeSrc": "1920:5:11",
                            "nodeType": "YulTypedName",
                            "src": "1920:5:11",
                            "type": ""
                          }
                        ],
                        "src": "1866:954:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "2996:654:11",
                          "nodeType": "YulBlock",
                          "src": "2996:654:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3043:16:11",
                                "nodeType": "YulBlock",
                                "src": "3043:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3052:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3052:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3055:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3055:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3045:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3045:6:11"
                                      },
                                      "nativeSrc": "3045:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3045:12:11"
                                    },
                                    "nativeSrc": "3045:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3045:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3017:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3017:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3026:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3026:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3013:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3013:3:11"
                                    },
                                    "nativeSrc": "3013:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3013:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3038:3:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3038:3:11",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3009:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3009:3:11"
                                },
                                "nativeSrc": "3009:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3009:33:11"
                              },
                              "nativeSrc": "3006:53:11",
                              "nodeType": "YulIf",
                              "src": "3006:53:11"
                            },
                            {
                              "nativeSrc": "3068:14:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3068:14:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3081:1:11",
                                "nodeType": "YulLiteral",
                                "src": "3081:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3072:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "3072:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3091:32:11",
                              "nodeType": "YulAssignment",
                              "src": "3091:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3113:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3113:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3100:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3100:12:11"
                                },
                                "nativeSrc": "3100:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3100:23:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3091:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3091:5:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3132:15:11",
                              "nodeType": "YulAssignment",
                              "src": "3132:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "3142:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "3142:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3132:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3132:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3156:16:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3156:16:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3171:1:11",
                                "nodeType": "YulLiteral",
                                "src": "3171:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "3160:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "3160:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3181:43:11",
                              "nodeType": "YulAssignment",
                              "src": "3181:43:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3209:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3209:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3220:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "3220:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3205:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3205:3:11"
                                    },
                                    "nativeSrc": "3205:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3205:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3192:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3192:12:11"
                                },
                                "nativeSrc": "3192:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3192:32:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "3181:7:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3181:7:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3233:17:11",
                              "nodeType": "YulAssignment",
                              "src": "3233:17:11",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "3243:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "3243:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "3233:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3233:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3259:46:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3259:46:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3290:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3290:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3301:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "3301:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3286:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3286:3:11"
                                    },
                                    "nativeSrc": "3286:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3286:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3273:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3273:12:11"
                                },
                                "nativeSrc": "3273:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3273:32:11"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "3263:6:11",
                                  "nodeType": "YulTypedName",
                                  "src": "3263:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3348:16:11",
                                "nodeType": "YulBlock",
                                "src": "3348:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3357:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3357:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3360:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3360:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3350:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3350:6:11"
                                      },
                                      "nativeSrc": "3350:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3350:12:11"
                                    },
                                    "nativeSrc": "3350:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3350:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "3320:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3320:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3328:18:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3328:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3317:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3317:2:11"
                                },
                                "nativeSrc": "3317:30:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3317:30:11"
                              },
                              "nativeSrc": "3314:50:11",
                              "nodeType": "YulIf",
                              "src": "3314:50:11"
                            },
                            {
                              "nativeSrc": "3373:71:11",
                              "nodeType": "YulAssignment",
                              "src": "3373:71:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3416:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3416:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "3427:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3427:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3412:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3412:3:11"
                                    },
                                    "nativeSrc": "3412:22:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3412:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "3436:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3436:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nativeSrc": "3383:28:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3383:28:11"
                                },
                                "nativeSrc": "3383:61:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3383:61:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "3373:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3373:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3453:48:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3453:48:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3486:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3486:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3497:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "3497:2:11",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3482:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3482:3:11"
                                    },
                                    "nativeSrc": "3482:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3482:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3469:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3469:12:11"
                                },
                                "nativeSrc": "3469:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3469:32:11"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nativeSrc": "3457:8:11",
                                  "nodeType": "YulTypedName",
                                  "src": "3457:8:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3546:16:11",
                                "nodeType": "YulBlock",
                                "src": "3546:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3555:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3555:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3558:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "3558:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3548:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3548:6:11"
                                      },
                                      "nativeSrc": "3548:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3548:12:11"
                                    },
                                    "nativeSrc": "3548:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3548:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nativeSrc": "3516:8:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3516:8:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3526:18:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3526:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3513:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3513:2:11"
                                },
                                "nativeSrc": "3513:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3513:32:11"
                              },
                              "nativeSrc": "3510:52:11",
                              "nodeType": "YulIf",
                              "src": "3510:52:11"
                            },
                            {
                              "nativeSrc": "3571:73:11",
                              "nodeType": "YulAssignment",
                              "src": "3571:73:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3614:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3614:9:11"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nativeSrc": "3625:8:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3625:8:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3610:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3610:3:11"
                                    },
                                    "nativeSrc": "3610:24:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3610:24:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "3636:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3636:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nativeSrc": "3581:28:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3581:28:11"
                                },
                                "nativeSrc": "3581:63:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3581:63:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nativeSrc": "3571:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3571:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
                        "nativeSrc": "2825:825:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2938:9:11",
                            "nodeType": "YulTypedName",
                            "src": "2938:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2949:7:11",
                            "nodeType": "YulTypedName",
                            "src": "2949:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2961:6:11",
                            "nodeType": "YulTypedName",
                            "src": "2961:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "2969:6:11",
                            "nodeType": "YulTypedName",
                            "src": "2969:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "2977:6:11",
                            "nodeType": "YulTypedName",
                            "src": "2977:6:11",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nativeSrc": "2985:6:11",
                            "nodeType": "YulTypedName",
                            "src": "2985:6:11",
                            "type": ""
                          }
                        ],
                        "src": "2825:825:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3772:102:11",
                          "nodeType": "YulBlock",
                          "src": "3772:102:11",
                          "statements": [
                            {
                              "nativeSrc": "3782:26:11",
                              "nodeType": "YulAssignment",
                              "src": "3782:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3794:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3794:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3805:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3805:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3790:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3790:3:11"
                                },
                                "nativeSrc": "3790:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3790:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3782:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3782:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3824:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3824:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3839:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3839:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3855:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3855:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "3860:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "3860:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "3851:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "3851:3:11"
                                            },
                                            "nativeSrc": "3851:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3851:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3864:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "3864:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "3847:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "3847:3:11"
                                        },
                                        "nativeSrc": "3847:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3847:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3835:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3835:3:11"
                                    },
                                    "nativeSrc": "3835:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3835:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3817:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3817:6:11"
                                },
                                "nativeSrc": "3817:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3817:51:11"
                              },
                              "nativeSrc": "3817:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "3817:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed",
                        "nativeSrc": "3655:219:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3741:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3741:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3752:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3752:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3763:4:11",
                            "nodeType": "YulTypedName",
                            "src": "3763:4:11",
                            "type": ""
                          }
                        ],
                        "src": "3655:219:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "3949:156:11",
                          "nodeType": "YulBlock",
                          "src": "3949:156:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3995:16:11",
                                "nodeType": "YulBlock",
                                "src": "3995:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4004:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4004:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4007:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4007:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3997:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3997:6:11"
                                      },
                                      "nativeSrc": "3997:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3997:12:11"
                                    },
                                    "nativeSrc": "3997:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3997:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3970:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3970:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3979:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "3979:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3966:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "3966:3:11"
                                    },
                                    "nativeSrc": "3966:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3966:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3991:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "3991:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3962:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3962:3:11"
                                },
                                "nativeSrc": "3962:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3962:32:11"
                              },
                              "nativeSrc": "3959:52:11",
                              "nodeType": "YulIf",
                              "src": "3959:52:11"
                            },
                            {
                              "nativeSrc": "4020:14:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4020:14:11",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "4033:1:11",
                                "nodeType": "YulLiteral",
                                "src": "4033:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "4024:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "4024:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4043:32:11",
                              "nodeType": "YulAssignment",
                              "src": "4043:32:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4065:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4065:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "4052:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4052:12:11"
                                },
                                "nativeSrc": "4052:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4052:23:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "4043:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4043:5:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4084:15:11",
                              "nodeType": "YulAssignment",
                              "src": "4084:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "4094:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "4094:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "4084:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4084:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nativeSrc": "3879:226:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3915:9:11",
                            "nodeType": "YulTypedName",
                            "src": "3915:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3926:7:11",
                            "nodeType": "YulTypedName",
                            "src": "3926:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3938:6:11",
                            "nodeType": "YulTypedName",
                            "src": "3938:6:11",
                            "type": ""
                          }
                        ],
                        "src": "3879:226:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4225:102:11",
                          "nodeType": "YulBlock",
                          "src": "4225:102:11",
                          "statements": [
                            {
                              "nativeSrc": "4235:26:11",
                              "nodeType": "YulAssignment",
                              "src": "4235:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4247:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4247:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4258:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4258:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4243:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4243:3:11"
                                },
                                "nativeSrc": "4243:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4243:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4235:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4235:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4277:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4277:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4292:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4292:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4308:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "4308:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4313:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "4313:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "4304:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "4304:3:11"
                                            },
                                            "nativeSrc": "4304:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4304:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4317:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "4317:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4300:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "4300:3:11"
                                        },
                                        "nativeSrc": "4300:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4300:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4288:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4288:3:11"
                                    },
                                    "nativeSrc": "4288:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4288:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4270:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4270:6:11"
                                },
                                "nativeSrc": "4270:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4270:51:11"
                              },
                              "nativeSrc": "4270:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4270:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed",
                        "nativeSrc": "4110:217:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4194:9:11",
                            "nodeType": "YulTypedName",
                            "src": "4194:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4205:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4205:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4216:4:11",
                            "nodeType": "YulTypedName",
                            "src": "4216:4:11",
                            "type": ""
                          }
                        ],
                        "src": "4110:217:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4433:76:11",
                          "nodeType": "YulBlock",
                          "src": "4433:76:11",
                          "statements": [
                            {
                              "nativeSrc": "4443:26:11",
                              "nodeType": "YulAssignment",
                              "src": "4443:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4455:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4455:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4466:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4466:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4451:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4451:3:11"
                                },
                                "nativeSrc": "4451:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4451:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4443:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4443:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4485:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4485:9:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "4496:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4496:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4478:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4478:6:11"
                                },
                                "nativeSrc": "4478:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4478:25:11"
                              },
                              "nativeSrc": "4478:25:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4478:25:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nativeSrc": "4332:177:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4402:9:11",
                            "nodeType": "YulTypedName",
                            "src": "4402:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4413:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4413:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4424:4:11",
                            "nodeType": "YulTypedName",
                            "src": "4424:4:11",
                            "type": ""
                          }
                        ],
                        "src": "4332:177:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4562:174:11",
                          "nodeType": "YulBlock",
                          "src": "4562:174:11",
                          "statements": [
                            {
                              "nativeSrc": "4572:16:11",
                              "nodeType": "YulAssignment",
                              "src": "4572:16:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4583:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4583:1:11"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4586:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4586:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4579:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4579:3:11"
                                },
                                "nativeSrc": "4579:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4579:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "4572:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4572:3:11"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4619:111:11",
                                "nodeType": "YulBlock",
                                "src": "4619:111:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4640:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4640:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4647:3:11",
                                              "nodeType": "YulLiteral",
                                              "src": "4647:3:11",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "4652:10:11",
                                              "nodeType": "YulLiteral",
                                              "src": "4652:10:11",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "4643:3:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "4643:3:11"
                                          },
                                          "nativeSrc": "4643:20:11",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4643:20:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "4633:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4633:6:11"
                                      },
                                      "nativeSrc": "4633:31:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4633:31:11"
                                    },
                                    "nativeSrc": "4633:31:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4633:31:11"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4684:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4684:1:11",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4687:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4687:4:11",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "4677:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4677:6:11"
                                      },
                                      "nativeSrc": "4677:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4677:15:11"
                                    },
                                    "nativeSrc": "4677:15:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4677:15:11"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4712:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4712:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4715:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "4715:4:11",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4705:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4705:6:11"
                                      },
                                      "nativeSrc": "4705:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4705:15:11"
                                    },
                                    "nativeSrc": "4705:15:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4705:15:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4603:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4603:1:11"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "4606:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4606:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4600:2:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4600:2:11"
                                },
                                "nativeSrc": "4600:10:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4600:10:11"
                              },
                              "nativeSrc": "4597:133:11",
                              "nodeType": "YulIf",
                              "src": "4597:133:11"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "4514:222:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4545:1:11",
                            "nodeType": "YulTypedName",
                            "src": "4545:1:11",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4548:1:11",
                            "nodeType": "YulTypedName",
                            "src": "4548:1:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "4554:3:11",
                            "nodeType": "YulTypedName",
                            "src": "4554:3:11",
                            "type": ""
                          }
                        ],
                        "src": "4514:222:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "4773:95:11",
                          "nodeType": "YulBlock",
                          "src": "4773:95:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4790:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4790:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4797:3:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4797:3:11",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4802:10:11",
                                        "nodeType": "YulLiteral",
                                        "src": "4802:10:11",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "4793:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "4793:3:11"
                                    },
                                    "nativeSrc": "4793:20:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4793:20:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4783:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4783:6:11"
                                },
                                "nativeSrc": "4783:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4783:31:11"
                              },
                              "nativeSrc": "4783:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4783:31:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4830:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4830:1:11",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4833:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4833:4:11",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4823:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4823:6:11"
                                },
                                "nativeSrc": "4823:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4823:15:11"
                              },
                              "nativeSrc": "4823:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4823:15:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4854:1:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4854:1:11",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4857:4:11",
                                    "nodeType": "YulLiteral",
                                    "src": "4857:4:11",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "4847:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4847:6:11"
                                },
                                "nativeSrc": "4847:15:11",
                                "nodeType": "YulFunctionCall",
                                "src": "4847:15:11"
                              },
                              "nativeSrc": "4847:15:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "4847:15:11"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nativeSrc": "4741:127:11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "4741:127:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5030:214:11",
                          "nodeType": "YulBlock",
                          "src": "5030:214:11",
                          "statements": [
                            {
                              "nativeSrc": "5040:26:11",
                              "nodeType": "YulAssignment",
                              "src": "5040:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5052:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5052:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5063:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5063:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5048:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5048:3:11"
                                },
                                "nativeSrc": "5048:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5048:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5040:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5040:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5082:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5082:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5097:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5097:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5113:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5113:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5118:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5118:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5109:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "5109:3:11"
                                            },
                                            "nativeSrc": "5109:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5109:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5122:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "5122:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5105:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5105:3:11"
                                        },
                                        "nativeSrc": "5105:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5105:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5093:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5093:3:11"
                                    },
                                    "nativeSrc": "5093:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5093:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5075:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5075:6:11"
                                },
                                "nativeSrc": "5075:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5075:51:11"
                              },
                              "nativeSrc": "5075:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5075:51:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5146:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5146:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5157:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "5157:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5142:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5142:3:11"
                                    },
                                    "nativeSrc": "5142:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5142:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "5166:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5166:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5182:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5182:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5187:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5187:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5178:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "5178:3:11"
                                            },
                                            "nativeSrc": "5178:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5178:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5191:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "5191:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5174:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5174:3:11"
                                        },
                                        "nativeSrc": "5174:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5174:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5162:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5162:3:11"
                                    },
                                    "nativeSrc": "5162:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5162:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5135:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5135:6:11"
                                },
                                "nativeSrc": "5135:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5135:60:11"
                              },
                              "nativeSrc": "5135:60:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5135:60:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5215:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5215:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5226:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "5226:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5211:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5211:3:11"
                                    },
                                    "nativeSrc": "5211:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5211:18:11"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "5231:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5231:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5204:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5204:6:11"
                                },
                                "nativeSrc": "5204:34:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5204:34:11"
                              },
                              "nativeSrc": "5204:34:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5204:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "4873:371:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4983:9:11",
                            "nodeType": "YulTypedName",
                            "src": "4983:9:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "4994:6:11",
                            "nodeType": "YulTypedName",
                            "src": "4994:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5002:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5002:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5010:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5010:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5021:4:11",
                            "nodeType": "YulTypedName",
                            "src": "5021:4:11",
                            "type": ""
                          }
                        ],
                        "src": "4873:371:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5327:199:11",
                          "nodeType": "YulBlock",
                          "src": "5327:199:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "5373:16:11",
                                "nodeType": "YulBlock",
                                "src": "5373:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5382:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5382:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5385:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5385:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5375:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5375:6:11"
                                      },
                                      "nativeSrc": "5375:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5375:12:11"
                                    },
                                    "nativeSrc": "5375:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5375:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "5348:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5348:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5357:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5357:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "5344:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5344:3:11"
                                    },
                                    "nativeSrc": "5344:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5344:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5369:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5369:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "5340:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5340:3:11"
                                },
                                "nativeSrc": "5340:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5340:32:11"
                              },
                              "nativeSrc": "5337:52:11",
                              "nodeType": "YulIf",
                              "src": "5337:52:11"
                            },
                            {
                              "nativeSrc": "5398:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "5398:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5417:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5417:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "5411:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5411:5:11"
                                },
                                "nativeSrc": "5411:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5411:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "5402:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "5402:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5480:16:11",
                                "nodeType": "YulBlock",
                                "src": "5480:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5489:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5489:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5492:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "5492:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5482:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5482:6:11"
                                      },
                                      "nativeSrc": "5482:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5482:12:11"
                                    },
                                    "nativeSrc": "5482:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5482:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "5449:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5449:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "5470:5:11",
                                                "nodeType": "YulIdentifier",
                                                "src": "5470:5:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "5463:6:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "5463:6:11"
                                            },
                                            "nativeSrc": "5463:13:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5463:13:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "5456:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5456:6:11"
                                        },
                                        "nativeSrc": "5456:21:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5456:21:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "5446:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5446:2:11"
                                    },
                                    "nativeSrc": "5446:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5446:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "5439:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5439:6:11"
                                },
                                "nativeSrc": "5439:40:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5439:40:11"
                              },
                              "nativeSrc": "5436:60:11",
                              "nodeType": "YulIf",
                              "src": "5436:60:11"
                            },
                            {
                              "nativeSrc": "5505:15:11",
                              "nodeType": "YulAssignment",
                              "src": "5505:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "5515:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "5515:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "5505:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5505:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nativeSrc": "5249:277:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5293:9:11",
                            "nodeType": "YulTypedName",
                            "src": "5293:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "5304:7:11",
                            "nodeType": "YulTypedName",
                            "src": "5304:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "5316:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5316:6:11",
                            "type": ""
                          }
                        ],
                        "src": "5249:277:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5660:119:11",
                          "nodeType": "YulBlock",
                          "src": "5660:119:11",
                          "statements": [
                            {
                              "nativeSrc": "5670:26:11",
                              "nodeType": "YulAssignment",
                              "src": "5670:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5682:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5682:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5693:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5693:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5678:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5678:3:11"
                                },
                                "nativeSrc": "5678:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5678:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5670:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5670:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5712:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5712:9:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5723:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5723:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5705:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5705:6:11"
                                },
                                "nativeSrc": "5705:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5705:25:11"
                              },
                              "nativeSrc": "5705:25:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5705:25:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5750:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5750:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5761:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "5761:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5746:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5746:3:11"
                                    },
                                    "nativeSrc": "5746:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5746:18:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5766:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5766:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5739:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5739:6:11"
                                },
                                "nativeSrc": "5739:34:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5739:34:11"
                              },
                              "nativeSrc": "5739:34:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5739:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
                        "nativeSrc": "5531:248:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5621:9:11",
                            "nodeType": "YulTypedName",
                            "src": "5621:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5632:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5632:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5640:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5640:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5651:4:11",
                            "nodeType": "YulTypedName",
                            "src": "5651:4:11",
                            "type": ""
                          }
                        ],
                        "src": "5531:248:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "5913:145:11",
                          "nodeType": "YulBlock",
                          "src": "5913:145:11",
                          "statements": [
                            {
                              "nativeSrc": "5923:26:11",
                              "nodeType": "YulAssignment",
                              "src": "5923:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5935:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5935:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5946:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "5946:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5931:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5931:3:11"
                                },
                                "nativeSrc": "5931:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5931:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5923:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5923:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5965:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "5965:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5980:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "5980:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5996:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "5996:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "6001:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "6001:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5992:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "5992:3:11"
                                            },
                                            "nativeSrc": "5992:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5992:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6005:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "6005:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5988:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "5988:3:11"
                                        },
                                        "nativeSrc": "5988:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5988:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5976:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5976:3:11"
                                    },
                                    "nativeSrc": "5976:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5976:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5958:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5958:6:11"
                                },
                                "nativeSrc": "5958:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "5958:51:11"
                              },
                              "nativeSrc": "5958:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "5958:51:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6029:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6029:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6040:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "6040:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6025:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6025:3:11"
                                    },
                                    "nativeSrc": "6025:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6025:18:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "6045:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6045:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6018:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6018:6:11"
                                },
                                "nativeSrc": "6018:34:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6018:34:11"
                              },
                              "nativeSrc": "6018:34:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6018:34:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "5784:274:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5874:9:11",
                            "nodeType": "YulTypedName",
                            "src": "5874:9:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5885:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5885:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5893:6:11",
                            "nodeType": "YulTypedName",
                            "src": "5893:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5904:4:11",
                            "nodeType": "YulTypedName",
                            "src": "5904:4:11",
                            "type": ""
                          }
                        ],
                        "src": "5784:274:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6210:147:11",
                          "nodeType": "YulBlock",
                          "src": "6210:147:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6227:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6227:3:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6240:2:11",
                                            "nodeType": "YulLiteral",
                                            "src": "6240:2:11",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value0",
                                            "nativeSrc": "6244:6:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "6244:6:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "6236:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "6236:3:11"
                                        },
                                        "nativeSrc": "6236:15:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6236:15:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6257:26:11",
                                            "nodeType": "YulLiteral",
                                            "src": "6257:26:11",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "6253:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "6253:3:11"
                                        },
                                        "nativeSrc": "6253:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6253:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "6232:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6232:3:11"
                                    },
                                    "nativeSrc": "6232:53:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6232:53:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6220:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6220:6:11"
                                },
                                "nativeSrc": "6220:66:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6220:66:11"
                              },
                              "nativeSrc": "6220:66:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6220:66:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "6306:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6306:3:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6311:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "6311:2:11",
                                        "type": "",
                                        "value": "20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6302:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6302:3:11"
                                    },
                                    "nativeSrc": "6302:12:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6302:12:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "6316:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6316:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6295:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6295:6:11"
                                },
                                "nativeSrc": "6295:28:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6295:28:11"
                              },
                              "nativeSrc": "6295:28:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6295:28:11"
                            },
                            {
                              "nativeSrc": "6332:19:11",
                              "nodeType": "YulAssignment",
                              "src": "6332:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6343:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6343:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6348:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "6348:2:11",
                                    "type": "",
                                    "value": "52"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6339:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6339:3:11"
                                },
                                "nativeSrc": "6339:12:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6339:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "6332:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6332:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nativeSrc": "6063:294:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "6178:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6178:3:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "6183:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6183:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "6191:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6191:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "6202:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6202:3:11",
                            "type": ""
                          }
                        ],
                        "src": "6063:294:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6509:100:11",
                          "nodeType": "YulBlock",
                          "src": "6509:100:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6526:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6526:3:11"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "6531:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6531:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6519:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6519:6:11"
                                },
                                "nativeSrc": "6519:19:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6519:19:11"
                              },
                              "nativeSrc": "6519:19:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6519:19:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nativeSrc": "6558:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6558:3:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6563:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "6563:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "6554:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6554:3:11"
                                    },
                                    "nativeSrc": "6554:12:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6554:12:11"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "6568:6:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6568:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6547:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6547:6:11"
                                },
                                "nativeSrc": "6547:28:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6547:28:11"
                              },
                              "nativeSrc": "6547:28:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "6547:28:11"
                            },
                            {
                              "nativeSrc": "6584:19:11",
                              "nodeType": "YulAssignment",
                              "src": "6584:19:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "6595:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6595:3:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6600:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "6600:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6591:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6591:3:11"
                                },
                                "nativeSrc": "6591:12:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6591:12:11"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "6584:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6584:3:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nativeSrc": "6362:247:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "6477:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6477:3:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "6482:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6482:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "6490:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6490:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "6501:3:11",
                            "nodeType": "YulTypedName",
                            "src": "6501:3:11",
                            "type": ""
                          }
                        ],
                        "src": "6362:247:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6652:171:11",
                          "nodeType": "YulBlock",
                          "src": "6652:171:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "6683:111:11",
                                "nodeType": "YulBlock",
                                "src": "6683:111:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6704:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6704:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6711:3:11",
                                              "nodeType": "YulLiteral",
                                              "src": "6711:3:11",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6716:10:11",
                                              "nodeType": "YulLiteral",
                                              "src": "6716:10:11",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "6707:3:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "6707:3:11"
                                          },
                                          "nativeSrc": "6707:20:11",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6707:20:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "6697:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6697:6:11"
                                      },
                                      "nativeSrc": "6697:31:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6697:31:11"
                                    },
                                    "nativeSrc": "6697:31:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6697:31:11"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6748:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6748:1:11",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6751:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6751:4:11",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "6741:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6741:6:11"
                                      },
                                      "nativeSrc": "6741:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6741:15:11"
                                    },
                                    "nativeSrc": "6741:15:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6741:15:11"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6776:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6776:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6779:4:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6779:4:11",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "6769:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6769:6:11"
                                      },
                                      "nativeSrc": "6769:15:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6769:15:11"
                                    },
                                    "nativeSrc": "6769:15:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6769:15:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "6672:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6672:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "6665:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6665:6:11"
                                },
                                "nativeSrc": "6665:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6665:9:11"
                              },
                              "nativeSrc": "6662:132:11",
                              "nodeType": "YulIf",
                              "src": "6662:132:11"
                            },
                            {
                              "nativeSrc": "6803:14:11",
                              "nodeType": "YulAssignment",
                              "src": "6803:14:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "6812:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6812:1:11"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "6815:1:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6815:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nativeSrc": "6808:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6808:3:11"
                                },
                                "nativeSrc": "6808:9:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6808:9:11"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "6803:1:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6803:1:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nativeSrc": "6614:209:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "6637:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6637:1:11",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "6640:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6640:1:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "6646:1:11",
                            "nodeType": "YulTypedName",
                            "src": "6646:1:11",
                            "type": ""
                          }
                        ],
                        "src": "6614:209:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "6909:103:11",
                          "nodeType": "YulBlock",
                          "src": "6909:103:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "6955:16:11",
                                "nodeType": "YulBlock",
                                "src": "6955:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6964:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6964:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6967:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "6967:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "6957:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6957:6:11"
                                      },
                                      "nativeSrc": "6957:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6957:12:11"
                                    },
                                    "nativeSrc": "6957:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6957:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "6930:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6930:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "6939:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "6939:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "6926:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6926:3:11"
                                    },
                                    "nativeSrc": "6926:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6926:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6951:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "6951:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "6922:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6922:3:11"
                                },
                                "nativeSrc": "6922:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6922:32:11"
                              },
                              "nativeSrc": "6919:52:11",
                              "nodeType": "YulIf",
                              "src": "6919:52:11"
                            },
                            {
                              "nativeSrc": "6980:26:11",
                              "nodeType": "YulAssignment",
                              "src": "6980:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6996:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6996:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "6990:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6990:5:11"
                                },
                                "nativeSrc": "6990:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "6990:16:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "6980:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6980:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nativeSrc": "6828:184:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "6875:9:11",
                            "nodeType": "YulTypedName",
                            "src": "6875:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "6886:7:11",
                            "nodeType": "YulTypedName",
                            "src": "6886:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "6898:6:11",
                            "nodeType": "YulTypedName",
                            "src": "6898:6:11",
                            "type": ""
                          }
                        ],
                        "src": "6828:184:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _1 := shl(5, length)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_1, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, length)\n        dst := add(memPtr, 0x20)\n        let srcEnd := add(add(offset, _1), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 0x20)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes32__to_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        end := add(pos, 52)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061014d5760003560e01c8063a94bd919116100c3578063d8c4a4541161007c578063d8c4a454146102c1578063d9f483f8146102ca578063dfbf53ae146102dd578063e3ac5d26146102f0578063ecca9c2e146102f9578063f2fde38b1461030157600080fd5b8063a94bd91914610262578063a9a86f4d14610275578063b2ab4ab714610288578063bef4876b1461029b578063cfbd900f146102af578063d2a8c791146102b857600080fd5b806358eda6821161011557806358eda682146101fa5780636dc3ae8f1461020f578063715018a61461022f5780637b3529621461023757806381fe4c61146102495780638da5cb5b1461025157600080fd5b806306e8337f146101525780630fe85616146101695780634705ab241461019c57806350b44712146101b157806356c77ebe146101e7575b600080fd5b6007545b6040519081526020015b60405180910390f35b61018c610177366004610bc1565b60096020526000908152604090205460ff1681565b6040519015158152602001610160565b6101a4610314565b6040516101609190610bf1565b6101da6101bf366004610c34565b6008602052600090815260409020546001600160a01b031681565b6040516101609190610c4d565b6101566101f5366004610c34565b61036c565b61020d610208366004610d16565b61038d565b005b61015661021d366004610c34565b600b6020526000908152604090205481565b61020d6105ca565b600054600160a01b900460ff1661018c565b61020d6105de565b6000546001600160a01b03166101da565b6004546101da906001600160a01b031681565b61020d610283366004610c34565b6106fa565b6003546101da906001600160a01b031681565b60005461018c90600160a01b900460ff1681565b61015660075481565b61015660025481565b61015660015481565b6101566102d8366004610bc1565b610959565b6006546101da906001600160a01b031681565b61015660055481565b600554610156565b61020d61030f366004610bc1565b610aa6565b6060600a80548060200260200160405190810160405280929190818152602001828054801561036257602002820191906000526020600020905b81548152602001906001019080831161034e575b5050505050905090565b600a818154811061037c57600080fd5b600091825260209091200154905081565b610395610ae4565b600054600160a81b900460ff16156103c0576040516301bf978f60e31b815260040160405180910390fd5b6000805461ffff60a01b1916600160a81b17905560018481556103e4904390610d92565b6002556005839055815167ffffffffffffffff81111561040657610406610c61565b60405190808252806020026020018201604052801561042f578160200160208202803683370190505b50805161044491600a91602090910190610b61565b5060005b82518110156104dc5781818151811061046357610463610db9565b6020026020010151600b600085848151811061048157610481610db9565b60200260200101518152602001908152602001600020819055508281815181106104ad576104ad610db9565b6020026020010151600a82815481106104c8576104c8610db9565b600091825260209091200155600101610448565b506003546005546040516323b872dd60e01b815233600482015230602482015260448101919091526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190610dcf565b90508061057d576040516312171d8360e31b815260040160405180910390fd5b7f3b81d2f4abc4b25cdb3a280f602aba499a20e5e7f079340839d5e4481c2fff176001546005546040516105bb929190918252602082015260400190565b60405180910390a15050505050565b6105d2610ae4565b6105dc6000610b11565b565b600054600160a01b900460ff16806106005750600054600160a81b900460ff16155b1561061e576040516375d47e7f60e01b815260040160405180910390fd5b600061062933610959565b90508060000361064c576040516316d1382760e11b815260040160405180910390fd5b6007545b8160075461065e9190610d92565b81101561068b57600081815260086020526040902080546001600160a01b03191633179055600101610650565b50336000908152600960205260408120805460ff19166001179055600780548392906106b8908490610d92565b90915550506040517f3492e8dc9c9e6d0557ae45dfe2d8cd4fd614084227839a8a969f39b114895425906106ef9033908490610df1565b60405180910390a150565b610702610ae4565b600054600160a01b900460ff16806107245750600054600160a81b900460ff16155b15610742576040516375d47e7f60e01b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b1790556002544310156107875760025460405163a3665c4960e01b815260040161077e91815260200190565b60405180910390fd5b6001546040516bffffffffffffffffffffffff193360601b1660208201526034810183905260540160405160208183030381529060405280519060200120146107e35760405163431d3a4360e11b815260040160405180910390fd5b600254604080516020808201859052924081830152815180820383018152606090910190915280519101206007546008906000906108219084610e0a565b8152602081019190915260400160002054600680546001600160a01b0319166001600160a01b03909216918217905561086d576040516301e4d0c360e21b815260040160405180910390fd5b60035460065460055460405163a9059cbb60e01b81526000936001600160a01b039081169363a9059cbb936108a9939290911691600401610df1565b6020604051808303816000875af11580156108c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ec9190610dcf565b90508061090c576040516312171d8360e31b815260040160405180910390fd5b6006546005546040517f7e2ca3905e2a3f4806a624223ea6cdcd30dad54d82e68b44481a5e00f322efc79261094c926001600160a01b0390911691610df1565b60405180910390a1505050565b6001600160a01b03811660009081526009602052604081205460ff161561098257506000919050565b6000805b600a54811015610a9f57600454600a80546000926001600160a01b03169162fdd58e91889190869081106109bc576109bc610db9565b90600052602060002001546040518363ffffffff1660e01b81526004016109e4929190610df1565b602060405180830381865afa158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a259190610e2c565b1115610a975781600b6000600a8481548110610a4357610a43610db9565b90600052602060002001548152602001908152602001600020541115610a9757600b6000600a8381548110610a7a57610a7a610db9565b906000526020600020015481526020019081526020016000205491505b600101610986565b5092915050565b610aae610ae4565b6001600160a01b038116610ad8576000604051631e4fbdf760e01b815260040161077e9190610c4d565b610ae181610b11565b50565b6000546001600160a01b031633146105dc573360405163118cdaa760e01b815260040161077e9190610c4d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610b9c579160200282015b82811115610b9c578251825591602001919060010190610b81565b50610ba8929150610bac565b5090565b5b80821115610ba85760008155600101610bad565b600060208284031215610bd357600080fd5b81356001600160a01b0381168114610bea57600080fd5b9392505050565b602080825282518282018190526000918401906040840190835b81811015610c29578351835260209384019390920191600101610c0b565b509095945050505050565b600060208284031215610c4657600080fd5b5035919050565b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c8857600080fd5b813567ffffffffffffffff811115610ca257610ca2610c61565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715610ccf57610ccf610c61565b604052918252602081850181019290810186841115610ced57600080fd5b6020860192505b83831015610d0c578235815260209283019201610cf4565b5095945050505050565b60008060008060808587031215610d2c57600080fd5b8435935060208501359250604085013567ffffffffffffffff811115610d5157600080fd5b610d5d87828801610c77565b925050606085013567ffffffffffffffff811115610d7a57600080fd5b610d8687828801610c77565b91505092959194509250565b80820180821115610db357634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610de157600080fd5b81518015158114610bea57600080fd5b6001600160a01b03929092168252602082015260400190565b600082610e2757634e487b7160e01b600052601260045260246000fd5b500690565b600060208284031215610e3e57600080fd5b505191905056fea26469706673582212204aa60a4106979e6ead6c4ab72a4fe9d5c681c928b9968f211f84266de28939a664736f6c634300081d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA94BD919 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD8C4A454 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD8C4A454 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xECCA9C2E EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xCFBD900F EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xD2A8C791 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x58EDA682 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x58EDA682 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x6DC3AE8F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xFE85616 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x56C77EBE EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x156 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x18C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x34E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP5 DUP2 SSTORE PUSH2 0x3E4 SWAP1 NUMBER SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x5 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x406 JUMPI PUSH2 0x406 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x444 SWAP2 PUSH1 0xA SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB61 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4DC JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x463 JUMPI PUSH2 0x463 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x481 JUMPI PUSH2 0x481 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4AD JUMPI PUSH2 0x4AD PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x539 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5BB SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x5DC PUSH1 0x0 PUSH2 0xB11 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x600 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x629 CALLER PUSH2 0x959 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST DUP2 PUSH1 0x7 SLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x650 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6B8 SWAP1 DUP5 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x6EF SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x702 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x724 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD NUMBER LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x7 SLOAD PUSH1 0x8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x821 SWAP1 DUP5 PUSH2 0xE0A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH2 0x8A9 SWAP4 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH1 0x4 ADD PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x94C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x982 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x4 SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x9BC JUMPI PUSH2 0x9BC PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP3 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST GT ISZERO PUSH2 0xA97 JUMPI DUP2 PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA43 JUMPI PUSH2 0xA43 PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA97 JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA7A JUMPI PUSH2 0xA7A PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x986 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAE PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xAE1 DUP2 PUSH2 0xB11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DC JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xB9C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB9C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB81 JUMP JUMPDEST POP PUSH2 0xBA8 SWAP3 SWAP2 POP PUSH2 0xBAC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC29 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC0B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA2 PUSH2 0xC61 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCCF JUMPI PUSH2 0xCCF PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xCED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xD0C JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCF4 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5D DUP8 DUP3 DUP9 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD86 DUP8 DUP3 DUP9 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDB3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xA6 EXP COINBASE MOD SWAP8 SWAP15 PUSH15 0xAD6C4AB72A4FE9D5C681C928B9968F 0x21 0x1F DUP5 0x26 PUSH14 0xE28939A664736F6C634300081D00 CALLER ",
              "sourceMap": "506:5309:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5295:92;5369:11;;5295:92;;;160:25:11;;;148:2;133:18;5295:92:7;;;;;;;;933:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;652:14:11;;645:22;627:41;;615:2;600:18;933:46:7;487:187:11;5572:108:7;;;:::i;:::-;;;;;;;:::i;885:42::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;885:42:7;;;;;;;;;;:::i;986:31::-;;;;;;:::i;:::-;;:::i;1591:1063::-;;;;;;:::i;:::-;;:::i;:::-;;1023:51;;;;;;:::i;:::-;;;;;;;;;;;;;;2293:101:0;;;:::i;5730:83:7:-;5775:4;5798:8;-1:-1:-1;;;5798:8:7;;;;5730:83;;3902:735;;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;760:32:7;;;;;-1:-1:-1;;;;;760:32:7;;;2704:1148;;;;;;:::i;:::-;;:::i;724:30::-;;;;;-1:-1:-1;;;;;724:30:7;;;580:28;;;;;-1:-1:-1;;;580:28:7;;;;;;853:26;;;;;;685:32;;;;;;654:25;;;;;;4687:558;;;;;;:::i;:::-;;:::i;825:21::-;;;;;-1:-1:-1;;;;;825:21:7;;;799:20;;;;;;5437:85;5510:5;;5437:85;;2543:215:0;;;;;;:::i;:::-;;:::i;5572:108:7:-;5624:16;5659:14;5652:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5572:108;:::o;986:31::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;986:31:7;:::o;1591:1063::-;1531:13:0;:11;:13::i;:::-;1779:11:7::1;::::0;-1:-1:-1;;;1779:11:7;::::1;;;1775:71;;;1813:22;;-1:-1:-1::0;;;1813:22:7::1;;;;;;;;;;;1775:71;1894:11;:18:::0;;-1:-1:-1;;;;1922:16:7;-1:-1:-1;;;1922:16:7;;;1908:4:::1;1971:24:::0;;;2025:16:::1;::::0;:12:::1;::::0;:16:::1;:::i;:::-;2005:17;:36:::0;2084:5:::1;:15:::0;;;2172:14;;2158:29:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2158:29:7::1;-1:-1:-1::0;2141:46:7;;::::1;::::0;:14:::1;::::0;:46:::1;::::0;;::::1;::::0;::::1;:::i;:::-;;2202:9;2197:164;2221:7;:14;2217:1;:18;2197:164;;;2287:16;2304:1;2287:19;;;;;;;;:::i;:::-;;;;;;;2256:16;:28;2273:7;2281:1;2273:10;;;;;;;;:::i;:::-;;;;;;;2256:28;;;;;;;;;;;:50;;;;2340:7;2348:1;2340:10;;;;;;;;:::i;:::-;;;;;;;2320:14;2335:1;2320:17;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;:30:::0;2237:3:::1;;2197:164;;;-1:-1:-1::0;2419:16:7::1;::::0;2513:5:::1;::::0;2419:109:::1;::::0;-1:-1:-1;;;2419:109:7;;2462:10:::1;2419:109;::::0;::::1;5075:51:11::0;2494:4:7::1;5142:18:11::0;;;5135:60;5211:18;;;5204:34;;;;2404:12:7::1;::::0;-1:-1:-1;;;;;2419:16:7::1;::::0;:29:::1;::::0;5048:18:11;;2419:109:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2404:124;;2543:7;2538:62;;2573:16;;-1:-1:-1::0;;;2573:16:7::1;;;;;;;;;;;2538:62;2615:32;2629:10;;2641:5;;2615:32;;;;;;5705:25:11::0;;;5761:2;5746:18;;5739:34;5693:2;5678:18;;5531:248;2615:32:7::1;;;;;;;;1765:889;1591:1063:::0;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3902:735:7:-;3983:8;;-1:-1:-1;;;3983:8:7;;;;;:24;;-1:-1:-1;3996:11:7;;-1:-1:-1;;;3996:11:7;;;;3995:12;3983:24;3979:79;;;4030:17;;-1:-1:-1;;;4030:17:7;;;;;;;;;;;3979:79;4126:25;4154:31;4174:10;4154:19;:31::i;:::-;4126:59;;4199:17;4220:1;4199:22;4195:78;;4244:18;;-1:-1:-1;;;4244:18:7;;;;;;;;;;;4195:78;4349:11;;4319:166;4392:17;4378:11;;:31;;;;:::i;:::-;4374:1;:35;4319:166;;;4451:10;;;;:7;:10;;;;;:23;;-1:-1:-1;;;;;;4451:23:7;4464:10;4451:23;;;;4423:3;4319:166;;;-1:-1:-1;4509:10:7;4494:26;;;;:14;:26;;;;;:33;;-1:-1:-1;;4494:33:7;4523:4;4494:33;;;4537:11;:32;;4552:17;;4494:26;4537:32;;4552:17;;4537:32;:::i;:::-;;;;-1:-1:-1;;4585:45:7;;;;;;4600:10;;4612:17;;4585:45;:::i;:::-;;;;;;;;3933:704;3902:735::o;2704:1148::-;1531:13:0;:11;:13::i;:::-;2808:8:7::1;::::0;-1:-1:-1;;;2808:8:7;::::1;;;::::0;:24:::1;;-1:-1:-1::0;2821:11:7::1;::::0;-1:-1:-1;;;2821:11:7;::::1;;;2820:12;2808:24;2804:79;;;2855:17;;-1:-1:-1::0;;;2855:17:7::1;;;;;;;;;;;2804:79;2961:8;:15:::0;;-1:-1:-1;;;;2961:15:7::1;-1:-1:-1::0;;;2961:15:7::1;::::0;;3052:17:::1;::::0;3072:12:::1;-1:-1:-1::0;3048:112:7::1;;;3131:17;;3107:42;;-1:-1:-1::0;;;3107:42:7::1;;;;;;160:25:11::0;;148:2;133:18;;14:177;3107:42:7::1;;;;;;;;3048:112;3268:10;::::0;3228:35:::1;::::0;-1:-1:-1;;3245:10:7::1;6240:2:11::0;6236:15;6232:53;3228:35:7::1;::::0;::::1;6220:66:11::0;6302:12;;;6295:28;;;6339:12;;3228:35:7::1;;;;;;;;;;;;3218:46;;;;;;:60;3214:111;;3301:13;;-1:-1:-1::0;;;3301:13:7::1;;;;;;;;;;;3214:111;3459:17;::::0;3425:53:::1;::::0;;::::1;::::0;;::::1;6519:19:11::0;;;3449:28:7;::::1;6554:12:11::0;;;6547:28;3425:53:7;;;;;;;;;6591:12:11;;;;3425:53:7;;;3415:64;;;::::1;::::0;3525:11:::1;::::0;3508:7:::1;::::0;-1:-1:-1;;3516:20:7::1;::::0;3415:64;3516:20:::1;:::i;:::-;3508:29:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3508:29:7;;3499:6:::1;:38:::0;;-1:-1:-1;;;;;;3499:38:7::1;-1:-1:-1::0;;;;;3508:29:7;;::::1;3499:38:::0;;::::1;::::0;;3547:74:::1;;3594:16;;-1:-1:-1::0;;;3594:16:7::1;;;;;;;;;;;3547:74;3690:16;::::0;3717:6:::1;::::0;3725:5:::1;::::0;3683:48:::1;::::0;-1:-1:-1;;;3683:48:7;;3668:12:::1;::::0;-1:-1:-1;;;;;3690:16:7;;::::1;::::0;3683:33:::1;::::0;:48:::1;::::0;3717:6;;;::::1;::::0;3683:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3668:63;;3746:7;3741:62;;3776:16;;-1:-1:-1::0;;;3776:16:7::1;;;;;;;;;;;3741:62;3831:6;::::0;3839:5:::1;::::0;3818:27:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;3831:6:7;;::::1;::::0;3818:27:::1;:::i;:::-;;;;;;;;2758:1094;;2704:1148:::0;:::o;4687:558::-;-1:-1:-1;;;;;4774:20:7;;4751:7;4774:20;;;:14;:20;;;;;;;;4770:59;;;-1:-1:-1;4817:1:7;;4687:558;-1:-1:-1;4687:558:7:o;4770:59::-;4839:25;4883:9;4878:326;4902:14;:21;4898:25;;4878:326;;;4948:16;;4981:14;:17;;5002:1;;-1:-1:-1;;;;;4948:16:7;;:26;;4975:4;;4981:14;4996:1;;4981:17;;;;;;:::i;:::-;;;;;;;;;4948:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;4944:250;;;5065:17;5027:16;:35;5044:14;5059:1;5044:17;;;;;;;;:::i;:::-;;;;;;;;;5027:35;;;;;;;;;;;;:55;5023:157;;;5126:16;:35;5143:14;5158:1;5143:17;;;;;;;;:::i;:::-;;;;;;;;;5126:35;;;;;;;;;;;;5106:55;;5023:157;4925:3;;4878:326;;;-1:-1:-1;5221:17:7;4687:558;-1:-1:-1;;4687:558:7:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;735:10:5;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2912:187::-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:286:11;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;350:23;;-1:-1:-1;;;;;402:31:11;;392:42;;382:70;;448:1;445;438:12;382:70;471:5;196:286;-1:-1:-1;;;196:286:11:o;679:611::-;869:2;881:21;;;951:13;;854:18;;;973:22;;;821:4;;1052:15;;;1026:2;1011:18;;;821:4;1095:169;1109:6;1106:1;1103:13;1095:169;;;1170:13;;1158:26;;1213:2;1239:15;;;;1204:12;;;;1131:1;1124:9;1095:169;;;-1:-1:-1;1281:3:11;;679:611;-1:-1:-1;;;;;679:611:11:o;1295:226::-;1354:6;1407:2;1395:9;1386:7;1382:23;1378:32;1375:52;;;1423:1;1420;1413:12;1375:52;-1:-1:-1;1468:23:11;;1295:226;-1:-1:-1;1295:226:11:o;1526:203::-;-1:-1:-1;;;;;1690:32:11;;;;1672:51;;1660:2;1645:18;;1526:203::o;1734:127::-;1795:10;1790:3;1786:20;1783:1;1776:31;1826:4;1823:1;1816:15;1850:4;1847:1;1840:15;1866:954;1920:5;1973:3;1966:4;1958:6;1954:17;1950:27;1940:55;;1991:1;1988;1981:12;1940:55;2031:6;2018:20;2061:18;2053:6;2050:30;2047:56;;;2083:18;;:::i;:::-;2129:6;2126:1;2122:14;2165:2;2159:9;2228:2;2224:7;2219:2;2215;2211:11;2207:25;2199:6;2195:38;2299:6;2287:10;2284:22;2263:18;2251:10;2248:34;2245:62;2242:88;;;2310:18;;:::i;:::-;2346:2;2339:22;2396;;;2446:4;2478:15;;;2474:26;;;2396:22;2434:17;;2512:15;;;2509:35;;;2540:1;2537;2530:12;2509:35;2576:4;2568:6;2564:17;2553:28;;2590:200;2606:6;2601:3;2598:15;2590:200;;;2698:17;;2728:18;;2775:4;2623:14;;;;2766;2590:200;;;-1:-1:-1;2808:6:11;1866:954;-1:-1:-1;;;;;1866:954:11:o;2825:825::-;2961:6;2969;2977;2985;3038:3;3026:9;3017:7;3013:23;3009:33;3006:53;;;3055:1;3052;3045:12;3006:53;3100:23;;;-1:-1:-1;3220:2:11;3205:18;;3192:32;;-1:-1:-1;3301:2:11;3286:18;;3273:32;3328:18;3317:30;;3314:50;;;3360:1;3357;3350:12;3314:50;3383:61;3436:7;3427:6;3416:9;3412:22;3383:61;:::i;:::-;3373:71;;;3497:2;3486:9;3482:18;3469:32;3526:18;3516:8;3513:32;3510:52;;;3558:1;3555;3548:12;3510:52;3581:63;3636:7;3625:8;3614:9;3610:24;3581:63;:::i;:::-;3571:73;;;2825:825;;;;;;;:::o;4514:222::-;4579:9;;;4600:10;;;4597:133;;;4652:10;4647:3;4643:20;4640:1;4633:31;4687:4;4684:1;4677:15;4715:4;4712:1;4705:15;4597:133;4514:222;;;;:::o;4741:127::-;4802:10;4797:3;4793:20;4790:1;4783:31;4833:4;4830:1;4823:15;4857:4;4854:1;4847:15;5249:277;5316:6;5369:2;5357:9;5348:7;5344:23;5340:32;5337:52;;;5385:1;5382;5375:12;5337:52;5417:9;5411:16;5470:5;5463:13;5456:21;5449:5;5446:32;5436:60;;5492:1;5489;5482:12;5784:274;-1:-1:-1;;;;;5976:32:11;;;;5958:51;;6040:2;6025:18;;6018:34;5946:2;5931:18;;5784:274::o;6614:209::-;6646:1;6672;6662:132;;6716:10;6711:3;6707:20;6704:1;6697:31;6751:4;6748:1;6741:15;6779:4;6776:1;6769:15;6662:132;-1:-1:-1;6808:9:11;;6614:209::o;6828:184::-;6898:6;6951:2;6939:9;6930:7;6926:23;6922:32;6919:52;;;6967:1;6964;6957:12;6919:52;-1:-1:-1;6990:16:11;;6828:184;-1:-1:-1;6828:184:11:o"
            },
            "methodIdentifiers": {
              "badgeAllocations(uint256)": "6dc3ae8f",
              "claimTickets()": "81fe4c61",
              "eligibleBadges(uint256)": "56c77ebe",
              "finished()": "bef4876b",
              "getClaimableTickets(address)": "d9f483f8",
              "getEligibleBadges()": "4705ab24",
              "getPrizeAmount()": "ecca9c2e",
              "getTotalTickets()": "06e8337f",
              "initialize(bytes32,uint256,uint256[],uint256[])": "58eda682",
              "isFinished()": "7b352962",
              "owner()": "8da5cb5b",
              "prize()": "e3ac5d26",
              "renounceOwnership()": "715018a6",
              "revealWinner(bytes32)": "a9a86f4d",
              "sealedSeed()": "d8c4a454",
              "storedBlockNumber()": "d2a8c791",
              "superchainBadges()": "a94bd919",
              "superchainPoints()": "b2ab4ab7",
              "ticketCount()": "cfbd900f",
              "tickets(uint256)": "50b44712",
              "ticketsClaimed(address)": "0fe85616",
              "transferOwnership(address)": "f2fde38b",
              "winner()": "dfbf53ae"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_superchainPoints\",\"type\":\"address\"},{\"internalType\":\"contract IERC1155\",\"name\":\"_superchainBadges\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTicketsToClaim\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RaffleAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeedAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sealedSeed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketsClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"badgeAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eligibleBadges\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimableTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEligibleBadges\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_sealedSeed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_badges\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_badgeAllocation\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_seed\",\"type\":\"bytes32\"}],\"name\":\"revealWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sealedSeed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storedBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainBadges\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainPoints\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ticketsClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of points to be distributed to the raffle winner\",\"sealedSeed\":\"The seed used to generate the raffle\"}},\"RaffleWinner(address,uint256)\":{\"params\":{\"amount\":\"The amount of points distributed to the raffle winner\",\"winner\":\"The address of the raffle winner\"}},\"TicketsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The amount of points claimed\",\"claimer\":\"The address of the claimer\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_initialOwner\":\"The initial owner of the contract\",\"_superchainBadges\":\"The address of the SuperchainBadges contract\",\"_superchainPoints\":\"The address of the SuperchainPoints contract\"}},\"getClaimableTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"initialize(bytes32,uint256,uint256[],uint256[])\":{\"params\":{\"_amount\":\"The amount of points to be distributed to the raffle winner\",\"_badgeAllocation\":\"The number of tickets allocated to each badge\",\"_badges\":\"The badges that are eligible to participate in the raffle\",\"_sealedSeed\":\"The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revealWinner(bytes32)\":{\"params\":{\"_seed\":\"The seed used to generate the raffle\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SuperchainPointsRaffle\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotRevealBeforeBlock(uint256)\":[{\"notice\":\"Random pattern requires seed to be revealed in a future block\"}],\"InvalidSeed()\":[{\"notice\":\"Error thrown when the seed doesn't match the sealed seed\"}],\"NoOngoingRaffle()\":[{\"notice\":\"Error thrown when the raffle is not started\"}],\"NoTicketsToClaim()\":[{\"notice\":\"Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\"}],\"RaffleAlreadyStarted()\":[{\"notice\":\"Error thrown when the raffle is already started\"}],\"SeedAlreadyUsed()\":[{\"notice\":\"Error thrown when the seed has already been used\"}],\"TicketNotFound()\":[{\"notice\":\"Error thrown when the ticket is not found\"}],\"TransferFailed()\":[{\"notice\":\"Error thrown when points transfer fails\"}]},\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"notice\":\"Event emitted when a raffle is started\"},\"RaffleWinner(address,uint256)\":{\"notice\":\"Event emitted when a raffle is finished\"},\"TicketsClaimed(address,uint256)\":{\"notice\":\"Event emitted when tickets are claimed\"}},\"kind\":\"user\",\"methods\":{\"claimTickets()\":{\"notice\":\"Claim tickets to participate in raffle\"},\"getClaimableTickets(address)\":{\"notice\":\"Returns the number of tickets that can be claimed\"},\"getEligibleBadges()\":{\"notice\":\"Returns the badges that are eligible to participate in the raffle\"},\"getPrizeAmount()\":{\"notice\":\"Returns the amount of points that are distributed to the raffle winner\"},\"getTotalTickets()\":{\"notice\":\"Returns the total number of tickets that can be claimed\"},\"initialize(bytes32,uint256,uint256[],uint256[])\":{\"notice\":\"Starts the raffle\"},\"isFinished()\":{\"notice\":\"Returns true if the raffle is finished\"},\"revealWinner(bytes32)\":{\"notice\":\"Reveals the raffle winner and transfers the points\"}},\"notice\":\"A raffle contract using https://fravoll.github.io/solidity-patterns/randomness.html pattern for randomness\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperchainPointsRaffle.sol\":\"SuperchainPointsRaffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x1528f3ef49ef2750b428564df007feb2d5c7a792bf79c6d125409c96322a4c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://663f59a9b1e3b1d831edeeb83590e8d9582d560c603e91327372502c64534bd6\",\"dweb:/ipfs/QmeGBrXcnomfBriPJEWXwSs1t2j9C4H7AhjuZVWHknSd6A\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/SuperchainPointsRaffle.sol\":{\"keccak256\":\"0x6417f8c36a6e8e5906a7c196112ccec56cf4318d3dbeed93f0a13a8030543ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdf45f211d07032fdcb37d783b3dfbacf6ff2bc9d617f78b36304927f465840e\",\"dweb:/ipfs/QmdiMBcN8TgykBRPtrSt2YmBWMLxJgAAjTxyYo7sh3gLwd\"]},\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x179e5e95ad12003e6ca656dd1c6f01d0c6ee8d35c9affd239e2a462e38484c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2e8b1540ce27b53598e38ce9bcfd2c0a47aa1a7536720dc722cae4fabda0f8d\",\"dweb:/ipfs/QmUonLcnHVb33FooA2ZrzTrwJzSgQMBxccHTCf742iuwko\"]}},\"version\":1}"
        }
      },
      "contracts/SuperchainPointsRaffleFactory.sol": {
        "SuperchainPointsRaffleFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_initialOwner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_superchainPoints",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC1155",
                  "name": "_superchainBadges",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "OngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "raffle",
                  "type": "address"
                }
              ],
              "name": "RaffleCreated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "createRaffle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "currentRaffle",
              "outputs": [
                {
                  "internalType": "contract ISuperchainPointsRaffle",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainBadges",
              "outputs": [
                {
                  "internalType": "contract IERC1155",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "superchainPoints",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_908": {
                  "entryPoint": null,
                  "id": 908,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 154,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory": {
                  "entryPoint": 258,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "validator_revert_address": {
                  "entryPoint": 234,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:909:11",
                    "nodeType": "YulBlock",
                    "src": "0:909:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "59:86:11",
                          "nodeType": "YulBlock",
                          "src": "59:86:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "123:16:11",
                                "nodeType": "YulBlock",
                                "src": "123:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "132:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "132:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "135:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "135:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "125:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:6:11"
                                      },
                                      "nativeSrc": "125:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "125:12:11"
                                    },
                                    "nativeSrc": "125:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "125:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "82:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "82:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "93:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "93:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "108:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "108:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "113:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "113:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "104:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "104:3:11"
                                                },
                                                "nativeSrc": "104:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "104:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "117:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "117:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "100:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "100:3:11"
                                            },
                                            "nativeSrc": "100:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "100:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "89:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "89:3:11"
                                        },
                                        "nativeSrc": "89:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "89:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "79:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "79:2:11"
                                    },
                                    "nativeSrc": "79:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "79:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "72:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:6:11"
                                },
                                "nativeSrc": "72:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "72:50:11"
                              },
                              "nativeSrc": "69:70:11",
                              "nodeType": "YulIf",
                              "src": "69:70:11"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nativeSrc": "14:131:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "48:5:11",
                            "nodeType": "YulTypedName",
                            "src": "48:5:11",
                            "type": ""
                          }
                        ],
                        "src": "14:131:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "295:404:11",
                          "nodeType": "YulBlock",
                          "src": "295:404:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "341:16:11",
                                "nodeType": "YulBlock",
                                "src": "341:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "350:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "350:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "353:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "353:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "343:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "343:6:11"
                                      },
                                      "nativeSrc": "343:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "343:12:11"
                                    },
                                    "nativeSrc": "343:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "343:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "316:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "316:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "325:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "325:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "312:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "312:3:11"
                                    },
                                    "nativeSrc": "312:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "312:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "337:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "337:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "308:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:3:11"
                                },
                                "nativeSrc": "308:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "308:32:11"
                              },
                              "nativeSrc": "305:52:11",
                              "nodeType": "YulIf",
                              "src": "305:52:11"
                            },
                            {
                              "nativeSrc": "366:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "366:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "385:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "385:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "379:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:5:11"
                                },
                                "nativeSrc": "379:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "379:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "370:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "370:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "429:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "429:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "404:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:24:11"
                                },
                                "nativeSrc": "404:31:11",
                                "nodeType": "YulFunctionCall",
                                "src": "404:31:11"
                              },
                              "nativeSrc": "404:31:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "404:31:11"
                            },
                            {
                              "nativeSrc": "444:15:11",
                              "nodeType": "YulAssignment",
                              "src": "444:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "454:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "454:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "444:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "444:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "468:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "468:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "493:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "493:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "504:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "504:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "489:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:3:11"
                                    },
                                    "nativeSrc": "489:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "483:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "483:5:11"
                                },
                                "nativeSrc": "483:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "483:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nativeSrc": "472:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "472:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nativeSrc": "542:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "542:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "517:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "517:24:11"
                                },
                                "nativeSrc": "517:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "517:33:11"
                              },
                              "nativeSrc": "517:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "517:33:11"
                            },
                            {
                              "nativeSrc": "559:17:11",
                              "nodeType": "YulAssignment",
                              "src": "559:17:11",
                              "value": {
                                "name": "value_1",
                                "nativeSrc": "569:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "569:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "559:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "559:6:11"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "585:40:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "585:40:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "610:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "610:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "621:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "621:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "606:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "606:3:11"
                                    },
                                    "nativeSrc": "606:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "606:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "600:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "600:5:11"
                                },
                                "nativeSrc": "600:25:11",
                                "nodeType": "YulFunctionCall",
                                "src": "600:25:11"
                              },
                              "variables": [
                                {
                                  "name": "value_2",
                                  "nativeSrc": "589:7:11",
                                  "nodeType": "YulTypedName",
                                  "src": "589:7:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_2",
                                    "nativeSrc": "659:7:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "659:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "634:24:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "634:24:11"
                                },
                                "nativeSrc": "634:33:11",
                                "nodeType": "YulFunctionCall",
                                "src": "634:33:11"
                              },
                              "nativeSrc": "634:33:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "634:33:11"
                            },
                            {
                              "nativeSrc": "676:17:11",
                              "nodeType": "YulAssignment",
                              "src": "676:17:11",
                              "value": {
                                "name": "value_2",
                                "nativeSrc": "686:7:11",
                                "nodeType": "YulIdentifier",
                                "src": "686:7:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "676:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "676:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory",
                        "nativeSrc": "150:549:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "245:9:11",
                            "nodeType": "YulTypedName",
                            "src": "245:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "256:7:11",
                            "nodeType": "YulTypedName",
                            "src": "256:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "268:6:11",
                            "nodeType": "YulTypedName",
                            "src": "268:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "276:6:11",
                            "nodeType": "YulTypedName",
                            "src": "276:6:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "284:6:11",
                            "nodeType": "YulTypedName",
                            "src": "284:6:11",
                            "type": ""
                          }
                        ],
                        "src": "150:549:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "805:102:11",
                          "nodeType": "YulBlock",
                          "src": "805:102:11",
                          "statements": [
                            {
                              "nativeSrc": "815:26:11",
                              "nodeType": "YulAssignment",
                              "src": "815:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "827:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "838:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "838:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "823:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "823:3:11"
                                },
                                "nativeSrc": "823:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "823:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "815:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "815:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "857:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "857:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "872:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "872:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "888:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "888:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "893:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "893:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "884:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "884:3:11"
                                            },
                                            "nativeSrc": "884:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "884:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "897:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "897:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "880:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "880:3:11"
                                        },
                                        "nativeSrc": "880:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "880:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "868:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "868:3:11"
                                    },
                                    "nativeSrc": "868:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "868:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "850:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "850:6:11"
                                },
                                "nativeSrc": "850:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "850:51:11"
                              },
                              "nativeSrc": "850:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "850:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "704:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "774:9:11",
                            "nodeType": "YulTypedName",
                            "src": "774:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "785:6:11",
                            "nodeType": "YulTypedName",
                            "src": "785:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "796:4:11",
                            "nodeType": "YulTypedName",
                            "src": "796:4:11",
                            "type": ""
                          }
                        ],
                        "src": "704:203:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$356t_contract$_IERC1155_$278_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x152F CODESIZE SUB DUP1 PUSH2 0x152F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x102 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x9A JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x14F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x122 DUP2 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x133 DUP2 PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x144 DUP2 PUSH2 0xEA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x13D1 DUP1 PUSH2 0x15E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x485AC2A7 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA8527CBE EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xFB PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x189 JUMPI POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7B352962 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC7AAE87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x1D5 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x54AD4CC1960F9B16B4A7FD9F5EE7C05B4DE5672CB94BC1DBAD3DE1ED291C248B SWAP2 PUSH2 0x25F SWAP2 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x27B PUSH1 0x0 PUSH2 0x2F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x285 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x2F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27B JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xFE7 DUP1 PUSH2 0x3B5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFE7 CODESIZE SUB DUP1 PUSH2 0xFE7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3D SWAP2 PUSH2 0x110 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75 DUP2 PUSH2 0xA8 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x15D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x130 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x141 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x152 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xE7B DUP1 PUSH2 0x16C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA94BD919 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD8C4A454 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD8C4A454 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xECCA9C2E EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xCFBD900F EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xD2A8C791 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x58EDA682 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x58EDA682 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x6DC3AE8F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xFE85616 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x56C77EBE EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x156 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x18C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x34E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP5 DUP2 SSTORE PUSH2 0x3E4 SWAP1 NUMBER SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x5 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x406 JUMPI PUSH2 0x406 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x444 SWAP2 PUSH1 0xA SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB61 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4DC JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x463 JUMPI PUSH2 0x463 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x481 JUMPI PUSH2 0x481 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4AD JUMPI PUSH2 0x4AD PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x539 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5BB SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x5DC PUSH1 0x0 PUSH2 0xB11 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x600 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x629 CALLER PUSH2 0x959 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST DUP2 PUSH1 0x7 SLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x650 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6B8 SWAP1 DUP5 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x6EF SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x702 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x724 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD NUMBER LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x7 SLOAD PUSH1 0x8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x821 SWAP1 DUP5 PUSH2 0xE0A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH2 0x8A9 SWAP4 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH1 0x4 ADD PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x94C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x982 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x4 SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x9BC JUMPI PUSH2 0x9BC PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP3 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST GT ISZERO PUSH2 0xA97 JUMPI DUP2 PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA43 JUMPI PUSH2 0xA43 PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA97 JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA7A JUMPI PUSH2 0xA7A PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x986 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAE PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xAE1 DUP2 PUSH2 0xB11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DC JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xB9C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB9C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB81 JUMP JUMPDEST POP PUSH2 0xBA8 SWAP3 SWAP2 POP PUSH2 0xBAC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC29 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC0B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA2 PUSH2 0xC61 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCCF JUMPI PUSH2 0xCCF PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xCED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xD0C JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCF4 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5D DUP8 DUP3 DUP9 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD86 DUP8 DUP3 DUP9 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDB3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xA6 EXP COINBASE MOD SWAP8 SWAP15 PUSH15 0xAD6C4AB72A4FE9D5C681C928B9968F 0x21 0x1F DUP5 0x26 PUSH14 0xE28939A664736F6C634300081D00 CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 CODECOPY PUSH20 0x5942689003F8EA88F7EF288966C0055FA8C79AE5 0xE 0xD 0xD6 PUSH2 0xE353 CALLVALUE CALLVALUE 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
              "sourceMap": "665:1065:8:-:0;;;1098:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1225:13;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;850:51:11;823:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1250:16:8::1;:36:::0;;-1:-1:-1;;;;;1250:36:8;;::::1;-1:-1:-1::0;;;;;;1250:36:8;;::::1;;::::0;;;1296:16:::1;:36:::0;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;665:1065:8;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:131:11:-;-1:-1:-1;;;;;89:31:11;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:549::-;268:6;276;284;337:2;325:9;316:7;312:23;308:32;305:52;;;353:1;350;343:12;305:52;385:9;379:16;404:31;429:5;404:31;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:33:11;483:25;517:33;:::i;:::-;621:2;606:18;;600:25;569:7;;-1:-1:-1;634:33:11;600:25;634:33;:::i;:::-;686:7;676:17;;;150:549;;;;;:::o;704:203::-;665:1065:8;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_84": {
                  "entryPoint": 708,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_368": {
                  "entryPoint": null,
                  "id": 368,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 753,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@createRaffle_952": {
                  "entryPoint": 243,
                  "id": 952,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@currentRaffle_884": {
                  "entryPoint": null,
                  "id": 884,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@renounceOwnership_98": {
                  "entryPoint": 617,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainBadges_881": {
                  "entryPoint": null,
                  "id": 881,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@superchainPoints_878": {
                  "entryPoint": null,
                  "id": 878,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_126": {
                  "entryPoint": 637,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 866,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 914,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 846,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_contract$_IERC20_$356_t_contract$_IERC1155_$278__to_t_address_t_address_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_ISuperchainPointsRaffle_$1066__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:1910:11",
                    "nodeType": "YulBlock",
                    "src": "0:1910:11",
                    "statements": [
                      {
                        "nativeSrc": "6:3:11",
                        "nodeType": "YulBlock",
                        "src": "6:3:11",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "115:102:11",
                          "nodeType": "YulBlock",
                          "src": "115:102:11",
                          "statements": [
                            {
                              "nativeSrc": "125:26:11",
                              "nodeType": "YulAssignment",
                              "src": "125:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "137:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "148:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "133:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:11"
                                },
                                "nativeSrc": "133:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "125:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "167:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "182:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "182:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "198:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "198:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "203:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "203:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "194:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "194:3:11"
                                            },
                                            "nativeSrc": "194:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "194:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "207:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "207:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "190:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "190:3:11"
                                        },
                                        "nativeSrc": "190:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "190:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "178:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "178:3:11"
                                    },
                                    "nativeSrc": "178:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "178:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "160:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:11"
                                },
                                "nativeSrc": "160:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "160:51:11"
                              },
                              "nativeSrc": "160:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "160:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "14:203:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "84:9:11",
                            "nodeType": "YulTypedName",
                            "src": "84:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "95:6:11",
                            "nodeType": "YulTypedName",
                            "src": "95:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "106:4:11",
                            "nodeType": "YulTypedName",
                            "src": "106:4:11",
                            "type": ""
                          }
                        ],
                        "src": "14:203:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "355:102:11",
                          "nodeType": "YulBlock",
                          "src": "355:102:11",
                          "statements": [
                            {
                              "nativeSrc": "365:26:11",
                              "nodeType": "YulAssignment",
                              "src": "365:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "377:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "377:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "388:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "388:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "373:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "373:3:11"
                                },
                                "nativeSrc": "373:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "373:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "365:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "365:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "407:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "407:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "422:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "422:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "438:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "438:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "443:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "443:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "434:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "434:3:11"
                                            },
                                            "nativeSrc": "434:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "434:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "447:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "447:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "430:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "430:3:11"
                                        },
                                        "nativeSrc": "430:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "430:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "418:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "418:3:11"
                                    },
                                    "nativeSrc": "418:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "418:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "400:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:6:11"
                                },
                                "nativeSrc": "400:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "400:51:11"
                              },
                              "nativeSrc": "400:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "400:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_ISuperchainPointsRaffle_$1066__to_t_address__fromStack_reversed",
                        "nativeSrc": "222:235:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "324:9:11",
                            "nodeType": "YulTypedName",
                            "src": "324:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "335:6:11",
                            "nodeType": "YulTypedName",
                            "src": "335:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "346:4:11",
                            "nodeType": "YulTypedName",
                            "src": "346:4:11",
                            "type": ""
                          }
                        ],
                        "src": "222:235:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "579:102:11",
                          "nodeType": "YulBlock",
                          "src": "579:102:11",
                          "statements": [
                            {
                              "nativeSrc": "589:26:11",
                              "nodeType": "YulAssignment",
                              "src": "589:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "601:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "601:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "612:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "612:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "597:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "597:3:11"
                                },
                                "nativeSrc": "597:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "597:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "589:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "589:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "631:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "631:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "646:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "646:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "662:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "662:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "667:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "667:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "658:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "658:3:11"
                                            },
                                            "nativeSrc": "658:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "658:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "671:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "671:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "654:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "654:3:11"
                                        },
                                        "nativeSrc": "654:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "654:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "642:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "642:3:11"
                                    },
                                    "nativeSrc": "642:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "642:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "624:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:6:11"
                                },
                                "nativeSrc": "624:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "624:51:11"
                              },
                              "nativeSrc": "624:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "624:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed",
                        "nativeSrc": "462:219:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "548:9:11",
                            "nodeType": "YulTypedName",
                            "src": "548:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "559:6:11",
                            "nodeType": "YulTypedName",
                            "src": "559:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "570:4:11",
                            "nodeType": "YulTypedName",
                            "src": "570:4:11",
                            "type": ""
                          }
                        ],
                        "src": "462:219:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "801:102:11",
                          "nodeType": "YulBlock",
                          "src": "801:102:11",
                          "statements": [
                            {
                              "nativeSrc": "811:26:11",
                              "nodeType": "YulAssignment",
                              "src": "811:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "823:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "823:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "834:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "834:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "819:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "819:3:11"
                                },
                                "nativeSrc": "819:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "819:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "811:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "811:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "853:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "853:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "868:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "868:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "884:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "884:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "889:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "889:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "880:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "880:3:11"
                                            },
                                            "nativeSrc": "880:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "880:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "893:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "893:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "876:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "876:3:11"
                                        },
                                        "nativeSrc": "876:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "876:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "864:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "864:3:11"
                                    },
                                    "nativeSrc": "864:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "864:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "846:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "846:6:11"
                                },
                                "nativeSrc": "846:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "846:51:11"
                              },
                              "nativeSrc": "846:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "846:51:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed",
                        "nativeSrc": "686:217:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "770:9:11",
                            "nodeType": "YulTypedName",
                            "src": "770:9:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "781:6:11",
                            "nodeType": "YulTypedName",
                            "src": "781:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "792:4:11",
                            "nodeType": "YulTypedName",
                            "src": "792:4:11",
                            "type": ""
                          }
                        ],
                        "src": "686:217:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "978:216:11",
                          "nodeType": "YulBlock",
                          "src": "978:216:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1024:16:11",
                                "nodeType": "YulBlock",
                                "src": "1024:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1033:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1033:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1036:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1036:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1026:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1026:6:11"
                                      },
                                      "nativeSrc": "1026:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1026:12:11"
                                    },
                                    "nativeSrc": "1026:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1026:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "999:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "999:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1008:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1008:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "995:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "995:3:11"
                                    },
                                    "nativeSrc": "995:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "995:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1020:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1020:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "991:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "991:3:11"
                                },
                                "nativeSrc": "991:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "991:32:11"
                              },
                              "nativeSrc": "988:52:11",
                              "nodeType": "YulIf",
                              "src": "988:52:11"
                            },
                            {
                              "nativeSrc": "1049:36:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1049:36:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1075:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1075:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1062:12:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1062:12:11"
                                },
                                "nativeSrc": "1062:23:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1062:23:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1053:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1053:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1148:16:11",
                                "nodeType": "YulBlock",
                                "src": "1148:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1157:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1157:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1160:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1160:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1150:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1150:6:11"
                                      },
                                      "nativeSrc": "1150:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1150:12:11"
                                    },
                                    "nativeSrc": "1150:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1150:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1107:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1107:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "1118:5:11",
                                            "nodeType": "YulIdentifier",
                                            "src": "1118:5:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1133:3:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1133:3:11",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1138:1:11",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1138:1:11",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1129:3:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1129:3:11"
                                                },
                                                "nativeSrc": "1129:11:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1129:11:11"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1142:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1142:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "1125:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1125:3:11"
                                            },
                                            "nativeSrc": "1125:19:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1125:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "1114:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1114:3:11"
                                        },
                                        "nativeSrc": "1114:31:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1114:31:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1104:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1104:2:11"
                                    },
                                    "nativeSrc": "1104:42:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1104:42:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1097:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1097:6:11"
                                },
                                "nativeSrc": "1097:50:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1097:50:11"
                              },
                              "nativeSrc": "1094:70:11",
                              "nodeType": "YulIf",
                              "src": "1094:70:11"
                            },
                            {
                              "nativeSrc": "1173:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1173:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1183:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "1183:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1173:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1173:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "908:286:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "944:9:11",
                            "nodeType": "YulTypedName",
                            "src": "944:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "955:7:11",
                            "nodeType": "YulTypedName",
                            "src": "955:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "967:6:11",
                            "nodeType": "YulTypedName",
                            "src": "967:6:11",
                            "type": ""
                          }
                        ],
                        "src": "908:286:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1277:199:11",
                          "nodeType": "YulBlock",
                          "src": "1277:199:11",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1323:16:11",
                                "nodeType": "YulBlock",
                                "src": "1323:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1332:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1332:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1335:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1335:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1325:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1325:6:11"
                                      },
                                      "nativeSrc": "1325:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1325:12:11"
                                    },
                                    "nativeSrc": "1325:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1325:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1298:7:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1298:7:11"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1307:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1307:9:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1294:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1294:3:11"
                                    },
                                    "nativeSrc": "1294:23:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1294:23:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1319:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1319:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1290:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1290:3:11"
                                },
                                "nativeSrc": "1290:32:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1290:32:11"
                              },
                              "nativeSrc": "1287:52:11",
                              "nodeType": "YulIf",
                              "src": "1287:52:11"
                            },
                            {
                              "nativeSrc": "1348:29:11",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1348:29:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1367:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1367:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1361:5:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1361:5:11"
                                },
                                "nativeSrc": "1361:16:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1361:16:11"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1352:5:11",
                                  "nodeType": "YulTypedName",
                                  "src": "1352:5:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1430:16:11",
                                "nodeType": "YulBlock",
                                "src": "1430:16:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1439:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1439:1:11",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1442:1:11",
                                          "nodeType": "YulLiteral",
                                          "src": "1442:1:11",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1432:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1432:6:11"
                                      },
                                      "nativeSrc": "1432:12:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1432:12:11"
                                    },
                                    "nativeSrc": "1432:12:11",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1432:12:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1399:5:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1399:5:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "1420:5:11",
                                                "nodeType": "YulIdentifier",
                                                "src": "1420:5:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "1413:6:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1413:6:11"
                                            },
                                            "nativeSrc": "1413:13:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1413:13:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "1406:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1406:6:11"
                                        },
                                        "nativeSrc": "1406:21:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1406:21:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1396:2:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1396:2:11"
                                    },
                                    "nativeSrc": "1396:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1396:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1389:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1389:6:11"
                                },
                                "nativeSrc": "1389:40:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1389:40:11"
                              },
                              "nativeSrc": "1386:60:11",
                              "nodeType": "YulIf",
                              "src": "1386:60:11"
                            },
                            {
                              "nativeSrc": "1455:15:11",
                              "nodeType": "YulAssignment",
                              "src": "1455:15:11",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1465:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "1465:5:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1455:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nativeSrc": "1199:277:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1243:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1243:9:11",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1254:7:11",
                            "nodeType": "YulTypedName",
                            "src": "1254:7:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1266:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1266:6:11",
                            "type": ""
                          }
                        ],
                        "src": "1199:277:11"
                      },
                      {
                        "body": {
                          "nativeSrc": "1668:240:11",
                          "nodeType": "YulBlock",
                          "src": "1668:240:11",
                          "statements": [
                            {
                              "nativeSrc": "1678:26:11",
                              "nodeType": "YulAssignment",
                              "src": "1678:26:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1690:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1690:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1701:2:11",
                                    "nodeType": "YulLiteral",
                                    "src": "1701:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1686:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1686:3:11"
                                },
                                "nativeSrc": "1686:18:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1686:18:11"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1678:4:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1678:4:11"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1720:9:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1720:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1735:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1735:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1751:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1751:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1756:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1756:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1747:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1747:3:11"
                                            },
                                            "nativeSrc": "1747:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1747:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1760:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1760:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1743:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1743:3:11"
                                        },
                                        "nativeSrc": "1743:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1743:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1731:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1731:3:11"
                                    },
                                    "nativeSrc": "1731:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1731:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1713:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1713:6:11"
                                },
                                "nativeSrc": "1713:51:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1713:51:11"
                              },
                              "nativeSrc": "1713:51:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1713:51:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1784:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1784:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1795:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1795:2:11",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1780:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1780:3:11"
                                    },
                                    "nativeSrc": "1780:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1780:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "1804:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1804:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1820:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1820:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1825:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1825:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1816:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1816:3:11"
                                            },
                                            "nativeSrc": "1816:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1816:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1829:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1829:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1812:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1812:3:11"
                                        },
                                        "nativeSrc": "1812:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1812:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1800:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1800:3:11"
                                    },
                                    "nativeSrc": "1800:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1800:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1773:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1773:6:11"
                                },
                                "nativeSrc": "1773:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1773:60:11"
                              },
                              "nativeSrc": "1773:60:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1773:60:11"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1853:9:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1853:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1864:2:11",
                                        "nodeType": "YulLiteral",
                                        "src": "1864:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1849:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1849:3:11"
                                    },
                                    "nativeSrc": "1849:18:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1849:18:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nativeSrc": "1873:6:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "1873:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1889:3:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1889:3:11",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1894:1:11",
                                                "nodeType": "YulLiteral",
                                                "src": "1894:1:11",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1885:3:11",
                                              "nodeType": "YulIdentifier",
                                              "src": "1885:3:11"
                                            },
                                            "nativeSrc": "1885:11:11",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1885:11:11"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1898:1:11",
                                            "nodeType": "YulLiteral",
                                            "src": "1898:1:11",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1881:3:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "1881:3:11"
                                        },
                                        "nativeSrc": "1881:19:11",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1881:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1869:3:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1869:3:11"
                                    },
                                    "nativeSrc": "1869:32:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1869:32:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1842:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1842:6:11"
                                },
                                "nativeSrc": "1842:60:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1842:60:11"
                              },
                              "nativeSrc": "1842:60:11",
                              "nodeType": "YulExpressionStatement",
                              "src": "1842:60:11"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_contract$_IERC20_$356_t_contract$_IERC1155_$278__to_t_address_t_address_t_address__fromStack_reversed",
                        "nativeSrc": "1481:427:11",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1621:9:11",
                            "nodeType": "YulTypedName",
                            "src": "1621:9:11",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1632:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1632:6:11",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1640:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1640:6:11",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1648:6:11",
                            "nodeType": "YulTypedName",
                            "src": "1648:6:11",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1659:4:11",
                            "nodeType": "YulTypedName",
                            "src": "1659:4:11",
                            "type": ""
                          }
                        ],
                        "src": "1481:427:11"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ISuperchainPointsRaffle_$1066__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC1155_$278__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$356__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_contract$_IERC20_$356_t_contract$_IERC1155_$278__to_t_address_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 11,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x485AC2A7 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA8527CBE EQ PUSH2 0xA7 JUMPI DUP1 PUSH4 0xA94BD919 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x269 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x91 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH2 0xFB PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x189 JUMPI POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7B352962 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x163 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAC7AAE87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x1D5 SWAP1 PUSH2 0x341 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x54AD4CC1960F9B16B4A7FD9F5EE7C05B4DE5672CB94BC1DBAD3DE1ED291C248B SWAP2 PUSH2 0x25F SWAP2 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x271 PUSH2 0x2C4 JUMP JUMPDEST PUSH2 0x27B PUSH1 0x0 PUSH2 0x2F1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x285 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x2F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27B JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xFE7 DUP1 PUSH2 0x3B5 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFE7 CODESIZE SUB DUP1 PUSH2 0xFE7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3D SWAP2 PUSH2 0x110 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75 DUP2 PUSH2 0xA8 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x15D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0x130 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x141 DUP2 PUSH2 0xF8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x152 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xE7B DUP1 PUSH2 0x16C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA94BD919 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD8C4A454 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD8C4A454 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xD9F483F8 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xE3AC5D26 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xECCA9C2E EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA94BD919 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9A86F4D EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xB2AB4AB7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xBEF4876B EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xCFBD900F EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xD2A8C791 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x58EDA682 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x58EDA682 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x6DC3AE8F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x7B352962 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x81FE4C61 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E8337F EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xFE85616 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x4705AB24 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x56C77EBE EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x1BF CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x156 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x18C JUMP JUMPDEST PUSH2 0x20D PUSH2 0x5DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x283 CALLDATASIZE PUSH1 0x4 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x18C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1DA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x34E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF978F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE PUSH1 0x1 DUP5 DUP2 SSTORE PUSH2 0x3E4 SWAP1 NUMBER SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x5 DUP4 SWAP1 SSTORE DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x406 JUMPI PUSH2 0x406 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x444 SWAP2 PUSH1 0xA SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xB61 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4DC JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x463 JUMPI PUSH2 0x463 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x481 JUMPI PUSH2 0x481 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x4AD JUMPI PUSH2 0x4AD PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x448 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x539 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55D SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3B81D2F4ABC4B25CDB3A280F602ABA499A20E5E7F079340839D5E4481C2FFF17 PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5BB SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x5DC PUSH1 0x0 PUSH2 0xB11 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x600 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x629 CALLER PUSH2 0x959 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x64C JUMPI PUSH1 0x40 MLOAD PUSH4 0x16D13827 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD JUMPDEST DUP2 PUSH1 0x7 SLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x68B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x650 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6B8 SWAP1 DUP5 SWAP1 PUSH2 0xD92 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x3492E8DC9C9E6D0557AE45DFE2D8CD4FD614084227839A8A969F39B114895425 SWAP1 PUSH2 0x6EF SWAP1 CALLER SWAP1 DUP5 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x702 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x724 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x742 JUMPI PUSH1 0x40 MLOAD PUSH4 0x75D47E7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x2 SLOAD NUMBER LT ISZERO PUSH2 0x787 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA3665C49 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x7E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x431D3A43 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE SWAP3 BLOCKHASH DUP2 DUP4 ADD MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x7 SLOAD PUSH1 0x8 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x821 SWAP1 DUP5 PUSH2 0xE0A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH2 0x86D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4D0C3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 PUSH4 0xA9059CBB SWAP4 PUSH2 0x8A9 SWAP4 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH1 0x4 ADD PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0xDCF JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7E2CA3905E2A3F4806A624223EA6CDCD30DAD54D82E68B44481A5E00F322EFC7 SWAP3 PUSH2 0x94C SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x982 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x4 SLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH3 0xFDD58E SWAP2 DUP9 SWAP2 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x9BC JUMPI PUSH2 0x9BC PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP3 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA25 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST GT ISZERO PUSH2 0xA97 JUMPI DUP2 PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA43 JUMPI PUSH2 0xA43 PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xA97 JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA7A JUMPI PUSH2 0xA7A PUSH2 0xDB9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x986 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAAE PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH2 0xAE1 DUP2 PUSH2 0xB11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5DC JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xB9C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB9C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB81 JUMP JUMPDEST POP PUSH2 0xBA8 SWAP3 SWAP2 POP PUSH2 0xBAC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC29 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xC0B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA2 JUMPI PUSH2 0xCA2 PUSH2 0xC61 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCCF JUMPI PUSH2 0xCCF PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP7 DUP5 GT ISZERO PUSH2 0xCED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xD0C JUMPI DUP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xCF4 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5D DUP8 DUP3 DUP9 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD86 DUP8 DUP3 DUP9 ADD PUSH2 0xC77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDB3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE27 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xA6 EXP COINBASE MOD SWAP8 SWAP15 PUSH15 0xAD6C4AB72A4FE9D5C681C928B9968F 0x21 0x1F DUP5 0x26 PUSH14 0xE28939A664736F6C634300081D00 CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 CODECOPY PUSH20 0x5942689003F8EA88F7EF288966C0055FA8C79AE5 0xE 0xD 0xD6 PUSH2 0xE353 CALLVALUE CALLVALUE 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
              "sourceMap": "665:1065:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1345:382;;;:::i;:::-;;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;;;;;:::i;:::-;;;;;;;;828:44:8;;;;;-1:-1:-1;;;;;828:44:8;;;789:32;;;;;-1:-1:-1;;;;;789:32:8;;;753:30;;;;;-1:-1:-1;;;;;753:30:8;;;2543:215:0;;;;;;:::i;:::-;;:::i;1345:382:8:-;1531:13:0;:11;:13::i;:::-;1408::8::1;::::0;-1:-1:-1;;;;;1408:13:8::1;1400:36:::0;;::::1;::::0;:75:::1;;;1440:13;;;;;;;;;-1:-1:-1::0;;;;;1440:13:8::1;-1:-1:-1::0;;;;;1440:24:8::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;1400:75;1396:128;;;1498:15;;-1:-1:-1::0;;;1498:15:8::1;;;;;;;;;;;1396:128;1684:7:0::0;1710:6;-1:-1:-1;;;;;1710:6:0;1611:16:8::1;::::0;1641::::1;::::0;1550:117:::1;::::0;-1:-1:-1;;;;;1611:16:8;;::::1;::::0;1641;;::::1;::::0;1550:117:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;1731:32:11;;;1713:51;;1800:32;;;1795:2;1780:18;;1773:60;1869:32;;;1864:2;1849:18;;1842:60;1701:2;1686:18;1550:117:8::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1534:13:8::1;:133:::0;;-1:-1:-1;;;;;;1534:133:8::1;-1:-1:-1::0;;;;;1534:133:8;;;::::1;::::0;;::::1;::::0;;1683:37:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;1345:382::o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;735:10:5;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2912:187::-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;:::o;14:203:11:-;-1:-1:-1;;;;;178:32:11;;;;160:51;;148:2;133:18;;14:203::o;908:286::-;967:6;1020:2;1008:9;999:7;995:23;991:32;988:52;;;1036:1;1033;1026:12;988:52;1062:23;;-1:-1:-1;;;;;1114:31:11;;1104:42;;1094:70;;1160:1;1157;1150:12;1094:70;1183:5;908:286;-1:-1:-1;;;908:286:11:o;1199:277::-;1266:6;1319:2;1307:9;1298:7;1294:23;1290:32;1287:52;;;1335:1;1332;1325:12;1287:52;1367:9;1361:16;1420:5;1413:13;1406:21;1399:5;1396:32;1386:60;;1442:1;1439;1432:12"
            },
            "methodIdentifiers": {
              "createRaffle()": "485ac2a7",
              "currentRaffle()": "a8527cbe",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "superchainBadges()": "a94bd919",
              "superchainPoints()": "b2ab4ab7",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_superchainPoints\",\"type\":\"address\"},{\"internalType\":\"contract IERC1155\",\"name\":\"_superchainBadges\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OngoingRaffle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"raffle\",\"type\":\"address\"}],\"name\":\"RaffleCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRaffle\",\"outputs\":[{\"internalType\":\"contract ISuperchainPointsRaffle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainBadges\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superchainPoints\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_initialOwner\":\"The initial owner of the contract\",\"_superchainBadges\":\"The address of the SuperchainBadges contract\",\"_superchainPoints\":\"The address of the SuperchainPoints contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SuperchainPointsRaffleFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"OngoingRaffle()\":[{\"notice\":\"Cannot create a raffle if one is already started\"}]},\"events\":{\"RaffleCreated(address)\":{\"notice\":\"Emitted when a raffle is created\"}},\"kind\":\"user\",\"methods\":{\"createRaffle()\":{\"notice\":\"Checks previous raffle state and creates a new raffle\"}},\"notice\":\"Factory for SuperchainPointsRaffle contracts that also acts as a proxy for the current raffle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperchainPointsRaffleFactory.sol\":\"SuperchainPointsRaffleFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x1528f3ef49ef2750b428564df007feb2d5c7a792bf79c6d125409c96322a4c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://663f59a9b1e3b1d831edeeb83590e8d9582d560c603e91327372502c64534bd6\",\"dweb:/ipfs/QmeGBrXcnomfBriPJEWXwSs1t2j9C4H7AhjuZVWHknSd6A\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/SuperchainPointsRaffle.sol\":{\"keccak256\":\"0x6417f8c36a6e8e5906a7c196112ccec56cf4318d3dbeed93f0a13a8030543ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdf45f211d07032fdcb37d783b3dfbacf6ff2bc9d617f78b36304927f465840e\",\"dweb:/ipfs/QmdiMBcN8TgykBRPtrSt2YmBWMLxJgAAjTxyYo7sh3gLwd\"]},\"contracts/SuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x420596fa983187203d7c346854ca7fe119dfe348922aea18e8adeeb4e9d5cd89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12dbba3f099a1d84abd9d96551b46f39d3b23a0cf58787960e507983be360e90\",\"dweb:/ipfs/QmXgpu4RvpnSuVPJxf57fqPhmhCVMMXKgXguP6B28AHYg2\"]},\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x179e5e95ad12003e6ca656dd1c6f01d0c6ee8d35c9affd239e2a462e38484c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2e8b1540ce27b53598e38ce9bcfd2c0a47aa1a7536720dc722cae4fabda0f8d\",\"dweb:/ipfs/QmUonLcnHVb33FooA2ZrzTrwJzSgQMBxccHTCf742iuwko\"]},\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ISuperchainPointsRaffle.sol": {
        "ISuperchainPointsRaffle": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeBlock",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSeed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoOngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoTicketsToClaim",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RaffleAlreadyStarted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SeedAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TicketNotFound",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "sealedSeed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleWinner",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TicketsClaimed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "claimTickets",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "getClaimableTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEligibleBadges",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPrizeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalTickets",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_sealedSeed",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badges",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_badgeAllocation",
                  "type": "uint256[]"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isFinished",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_seed",
                  "type": "bytes32"
                }
              ],
              "name": "revealWinner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "claimTickets()": "81fe4c61",
              "getClaimableTickets(address)": "d9f483f8",
              "getEligibleBadges()": "4705ab24",
              "getPrizeAmount()": "ecca9c2e",
              "getTotalTickets()": "06e8337f",
              "initialize(bytes32,uint256,uint256[],uint256[])": "58eda682",
              "isFinished()": "7b352962",
              "revealWinner(bytes32)": "a9a86f4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTicketsToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RaffleAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeedAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sealedSeed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketsClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getClaimableTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEligibleBadges\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_sealedSeed\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_badges\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_badgeAllocation\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_seed\",\"type\":\"bytes32\"}],\"name\":\"revealWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of points to be distributed to the raffle winner\",\"sealedSeed\":\"The seed used to generate the raffle\"}},\"RaffleWinner(address,uint256)\":{\"params\":{\"amount\":\"The amount of points distributed to the raffle winner\",\"winner\":\"The address of the raffle winner\"}},\"TicketsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The amount of points claimed\",\"claimer\":\"The address of the claimer\"}}},\"kind\":\"dev\",\"methods\":{\"getClaimableTickets(address)\":{\"params\":{\"user\":\"The address of the user\"}},\"initialize(bytes32,uint256,uint256[],uint256[])\":{\"params\":{\"_amount\":\"The amount of points to be distributed to the raffle winner\",\"_badgeAllocation\":\"The number of tickets allocated to each badge\",\"_badges\":\"The badges that are eligible to participate in the raffle\",\"_sealedSeed\":\"The seed used to generate the raffle. Must be kekkak256(abi.encodePacked(msg.sender, _seed))\"}},\"revealWinner(bytes32)\":{\"params\":{\"_seed\":\"The seed used to generate the raffle\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CannotRevealBeforeBlock(uint256)\":[{\"notice\":\"Random pattern requires seed to be revealed in a future block\"}],\"InvalidSeed()\":[{\"notice\":\"Error thrown when the seed doesn't match the sealed seed\"}],\"NoOngoingRaffle()\":[{\"notice\":\"Error thrown when the raffle is not started\"}],\"NoTicketsToClaim()\":[{\"notice\":\"Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\"}],\"RaffleAlreadyStarted()\":[{\"notice\":\"Error thrown when the raffle is already started\"}],\"SeedAlreadyUsed()\":[{\"notice\":\"Error thrown when the seed has already been used\"}],\"TicketNotFound()\":[{\"notice\":\"Error thrown when the ticket is not found\"}],\"TransferFailed()\":[{\"notice\":\"Error thrown when points transfer fails\"}]},\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"notice\":\"Event emitted when a raffle is started\"},\"RaffleWinner(address,uint256)\":{\"notice\":\"Event emitted when a raffle is finished\"},\"TicketsClaimed(address,uint256)\":{\"notice\":\"Event emitted when tickets are claimed\"}},\"kind\":\"user\",\"methods\":{\"claimTickets()\":{\"notice\":\"Claim tickets to participate in raffle\"},\"getClaimableTickets(address)\":{\"notice\":\"Returns the number of tickets that can be claimed\"},\"getEligibleBadges()\":{\"notice\":\"Returns the badges that are eligible to participate in the raffle\"},\"getPrizeAmount()\":{\"notice\":\"Returns the amount of points that are distributed to the raffle winner\"},\"getTotalTickets()\":{\"notice\":\"Returns the total number of tickets that can be claimed\"},\"initialize(bytes32,uint256,uint256[],uint256[])\":{\"notice\":\"Starts the raffle\"},\"isFinished()\":{\"notice\":\"Returns true if the raffle is finished\"},\"revealWinner(bytes32)\":{\"notice\":\"Reveals the raffle winner and transfers the points\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":\"ISuperchainPointsRaffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x179e5e95ad12003e6ca656dd1c6f01d0c6ee8d35c9affd239e2a462e38484c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2e8b1540ce27b53598e38ce9bcfd2c0a47aa1a7536720dc722cae4fabda0f8d\",\"dweb:/ipfs/QmUonLcnHVb33FooA2ZrzTrwJzSgQMBxccHTCf742iuwko\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleErrors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "CannotRevealBeforeBlock",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSeed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoOngoingRaffle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoTicketsToClaim",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RaffleAlreadyStarted",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SeedAlreadyUsed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TicketNotFound",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CannotRevealBeforeBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoOngoingRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTicketsToClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RaffleAlreadyStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeedAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"CannotRevealBeforeBlock(uint256)\":[{\"notice\":\"Random pattern requires seed to be revealed in a future block\"}],\"InvalidSeed()\":[{\"notice\":\"Error thrown when the seed doesn't match the sealed seed\"}],\"NoOngoingRaffle()\":[{\"notice\":\"Error thrown when the raffle is not started\"}],\"NoTicketsToClaim()\":[{\"notice\":\"Error thrown when user has no tickets to claim, either because they are not eligible or they have already claimed\"}],\"RaffleAlreadyStarted()\":[{\"notice\":\"Error thrown when the raffle is already started\"}],\"SeedAlreadyUsed()\":[{\"notice\":\"Error thrown when the seed has already been used\"}],\"TicketNotFound()\":[{\"notice\":\"Error thrown when the ticket is not found\"}],\"TransferFailed()\":[{\"notice\":\"Error thrown when points transfer fails\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":\"ISuperchainPointsRaffleErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x179e5e95ad12003e6ca656dd1c6f01d0c6ee8d35c9affd239e2a462e38484c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2e8b1540ce27b53598e38ce9bcfd2c0a47aa1a7536720dc722cae4fabda0f8d\",\"dweb:/ipfs/QmUonLcnHVb33FooA2ZrzTrwJzSgQMBxccHTCf742iuwko\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "sealedSeed",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleStarted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "RaffleWinner",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TicketsClaimed",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"sealedSeed\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TicketsClaimed\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"params\":{\"amount\":\"The amount of points to be distributed to the raffle winner\",\"sealedSeed\":\"The seed used to generate the raffle\"}},\"RaffleWinner(address,uint256)\":{\"params\":{\"amount\":\"The amount of points distributed to the raffle winner\",\"winner\":\"The address of the raffle winner\"}},\"TicketsClaimed(address,uint256)\":{\"params\":{\"amount\":\"The amount of points claimed\",\"claimer\":\"The address of the claimer\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"RaffleStarted(bytes32,uint256)\":{\"notice\":\"Event emitted when a raffle is started\"},\"RaffleWinner(address,uint256)\":{\"notice\":\"Event emitted when a raffle is finished\"},\"TicketsClaimed(address,uint256)\":{\"notice\":\"Event emitted when tickets are claimed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":\"ISuperchainPointsRaffleEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffle.sol\":{\"keccak256\":\"0x179e5e95ad12003e6ca656dd1c6f01d0c6ee8d35c9affd239e2a462e38484c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2e8b1540ce27b53598e38ce9bcfd2c0a47aa1a7536720dc722cae4fabda0f8d\",\"dweb:/ipfs/QmUonLcnHVb33FooA2ZrzTrwJzSgQMBxccHTCf742iuwko\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ISuperchainPointsRaffleFactory.sol": {
        "ISuperchainPointsRaffleFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "OngoingRaffle",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "raffle",
                  "type": "address"
                }
              ],
              "name": "RaffleCreated",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "createRaffle",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createRaffle()": "485ac2a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OngoingRaffle\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"raffle\",\"type\":\"address\"}],\"name\":\"RaffleCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"OngoingRaffle()\":[{\"notice\":\"Cannot create a raffle if one is already started\"}]},\"events\":{\"RaffleCreated(address)\":{\"notice\":\"Emitted when a raffle is created\"}},\"kind\":\"user\",\"methods\":{\"createRaffle()\":{\"notice\":\"Checks previous raffle state and creates a new raffle\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":\"ISuperchainPointsRaffleFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleFactoryErrors": {
          "abi": [
            {
              "inputs": [],
              "name": "OngoingRaffle",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OngoingRaffle\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"OngoingRaffle()\":[{\"notice\":\"Cannot create a raffle if one is already started\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":\"ISuperchainPointsRaffleFactoryErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        },
        "ISuperchainPointsRaffleFactoryEvents": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "raffle",
                  "type": "address"
                }
              ],
              "name": "RaffleCreated",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"raffle\",\"type\":\"address\"}],\"name\":\"RaffleCreated\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"RaffleCreated(address)\":{\"notice\":\"Emitted when a raffle is created\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":\"ISuperchainPointsRaffleFactoryEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISuperchainPointsRaffleFactory.sol\":{\"keccak256\":\"0x3122b8f6ec88f0c5cb38b3491c87c23b81986a702a69218ac53bf1a0cef83a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb309a3db8b465bc3e7638d43fcfe5971a915d947442ae7eeb1c8ae081c1ef7\",\"dweb:/ipfs/Qme4TjmAJyBZd14zrArQB69QHpQ3GqhX2FL5bf7tknPzn7\"]}},\"version\":1}"
        }
      }
    }
  }
}